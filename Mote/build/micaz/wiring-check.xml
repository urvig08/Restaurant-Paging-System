<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="18:BlinkToRadioAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f68990d1948"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f689868f970"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f689868f970"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f68990bc928"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="19:BlinkToRadioAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6899147650"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f6899830a50"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f6899830a50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f689982ee20"/></to>
    </wire>
    <wire loc="20:BlinkToRadioAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6899147c58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="51:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689966f7e0"/></to>
    </wire>
    <wire loc="21:BlinkToRadioAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7f68991434a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f68990c5020"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f68990c5020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="26:BlinkToRadioAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f68990e83e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f68990bd248"/></to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f68990bd248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6899083818"/></to>
    </wire>
    <wire loc="28:BlinkToRadioAppC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f68990d6020"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f6899645e60"/></to>
    </wire>
    <wire loc="9:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Mts300Sounder" scoped="" ref="0x7f6899645e60"/></from>
      <to><interface-ref name="Mts300Sounder" scoped="" ref="0x7f6899644c38"/></to>
    </wire>
    <wire loc="104:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898760c28"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f68987e3628"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898802080"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689881e198"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689895c020"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898a39b80"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898f1a3e0"/></to>
    </wire>
    <wire loc="96:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f68980528a8"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898c675d8"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898fbe198"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898189020"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898219570"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898258b20"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898293980"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689961c760"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6899688490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6899931be8"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f6899931be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f6899873c00"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6899688e68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6899831db0"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6899831db0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f68998224f0"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899687560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></to>
    </wire>
    <wire loc="26:/home/urvi/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f689982c9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898e34020"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f689982c9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689925cd48"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6899825c88"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f68996a87e8"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7f6899821398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f68996a81b8"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6899822b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689964c5e8"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f6899822b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6899824a10"/></to>
    </wire>
    <wire loc="46:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f6899824a10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7f6899818460"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f689981b108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f689982c9a0"/></to>
    </wire>
    <wire loc="48:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7f68998115f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7f68998061a0"/></to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7f68998061a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899783430"/></to>
    </wire>
    <wire loc="49:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7f68998177f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7f689981b108"/></to>
    </wire>
    <wire loc="191:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7f68997d5c78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68996f2970"/></to>
    </wire>
    <wire loc="165:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7f68997ef7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f689975a020"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f689975a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898517710"/></to>
    </wire>
    <wire loc="176:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7f68997e37e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6899749d60"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6899749d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984aa710"/></to>
    </wire>
    <wire loc="185:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7f68997da4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f689973a5b8"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f689973a5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898443710"/></to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7f68998044d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899781740"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899781740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689863da10"/></to>
    </wire>
    <wire loc="183:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7f68997dc1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f689973c2a8"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f689973c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898449710"/></to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7f68998027e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6899779930"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6899779930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985e8970"/></to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7f68997f7968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6899768740"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6899768740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689857b710"/></to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7f68997ebc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899757430"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899757430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689850e710"/></to>
    </wire>
    <wire loc="179:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7f68997e0c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899745120"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899745120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984a1710"/></to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7f689980bc78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6899787020"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6899787020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689864ca10"/></to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7f68997ffc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f6899776d60"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f6899776d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985df970"/></to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7f68997f4e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6899765bd8"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6899765bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898572710"/></to>
    </wire>
    <wire loc="171:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7f68997e71a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f68997538c8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f68997538c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898505710"/></to>
    </wire>
    <wire loc="188:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7f68997d7968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899737a50"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899737a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689843a710"/></to>
    </wire>
    <wire loc="194:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7f68997d07e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68996e3020"/></to>
    </wire>
    <wire loc="174:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7f68997e54d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f689974ca50"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f689974ca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984b0710"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899783430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898643a10"/></to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7f68997fb348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899772120"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899772120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985d6970"/></to>
    </wire>
    <wire loc="192:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7f68997d34d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68996eeab0"/></to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7f68997f9658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f689976a500"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f689976a500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985816a8"/></to>
    </wire>
    <wire loc="166:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7f68997ee968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6899759120"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6899759120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898514710"/></to>
    </wire>
    <wire loc="177:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7f68997e2968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899748e18"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899748e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984a7710"/></to>
    </wire>
    <wire loc="186:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7f68997d9658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899739740"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899739740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898440710"/></to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7f6899803658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f68997808c8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f68997808c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898639a10"/></to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7f6899801968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f6899778a50"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f6899778a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985e5970"/></to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7f68997f6af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f68997678c8"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f68997678c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898578710"/></to>
    </wire>
    <wire loc="169:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7f68997eae00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f68997555b8"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f68997555b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689850b710"/></to>
    </wire>
    <wire loc="180:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7f68997dfe00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f68997442a8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f68997442a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689849e710"/></to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7f689980ae00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6899785120"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6899785120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898649a10"/></to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7f68997fee00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899775e18"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899775e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985dc970"/></to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7f68997f2020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899764d60"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899764d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689856f710"/></to>
    </wire>
    <wire loc="189:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7f68997d6af0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6899736bd8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6899736bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898437710"/></to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7f68997f0348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f689975ce40"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f689975ce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689851a6a8"/></to>
    </wire>
    <wire loc="175:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7f68997e4658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f689974abd8"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f689974abd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984ad710"/></to>
    </wire>
    <wire loc="184:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7f68997db348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f689973b430"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f689973b430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898446710"/></to>
    </wire>
    <wire loc="195:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7f68997cf968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68996df180"/></to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7f6899805348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f68997825b8"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f68997825b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898640a10"/></to>
    </wire>
    <wire loc="153:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7f68997fa4d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f68997712a8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f68997712a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985d2970"/></to>
    </wire>
    <wire loc="182:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7f68997dd020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f689973d1e8"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f689973d1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689844c6a8"/></to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7f68997f87e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7f68997695b8"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7f68997695b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689857e710"/></to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7f68997edaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f68997582a8"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f68997582a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898511710"/></to>
    </wire>
    <wire loc="178:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7f68997e1af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6899746020"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6899746020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984a4710"/></to>
    </wire>
    <wire loc="187:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7f68997d87e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f68997388c8"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f68997388c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689843d710"/></to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7f689981aab8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f6899789dc0"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f6899789dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689864f9d8"/></to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7f6899800af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7f6899777bd8"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7f6899777bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985e2970"/></to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7f68997f5c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7f6899766a50"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7f6899766a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898575710"/></to>
    </wire>
    <wire loc="170:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7f68997e8020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7f6899754740"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7f6899754740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898508710"/></to>
    </wire>
    <wire loc="193:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7f68997d2658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68996e9c38"/></to>
    </wire>
    <wire loc="173:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7f68997e6348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7f689974d930"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7f689974d930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68984b36a8"/></to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7f68997f11a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7f6899763e18"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7f6899763e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f689856c710"/></to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7f6899808020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7f68997842a8"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7f68997842a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f6898646a10"/></to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7f68997fc100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7f6899773020"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7f6899773020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f68985d9970"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899872b08"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f689986f020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f6899927dd0"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f68998507f0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6899566268"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f689964c5e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689966f218"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f689966ee70"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f689964f090"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f689964f090"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7f689980ae00"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f689966c020"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f689964e378"/></to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f689964e378"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7f689980bc78"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f689966b190"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f689964d500"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f689964d500"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7f689981aab8"/></to>
    </wire>
    <wire loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6899636768"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f689962ae28"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f689962ae28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <from><interface-ref name="SounderPin" scoped="" ref="0x7f68996337c8"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x7f6899467180"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x7f6899467180"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x7f68997f7968"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f68996194a0"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f68996194a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6899491af8"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f689961c760"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689960c020"/></to>
    </wire>
    <wire loc="65:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f6899610980"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6899482440"/></to>
    </wire>
    <wire loc="35:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f689960c020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689950a1f0"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f689948ce80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f68994ddab0"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f68994d8c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6899603838"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6899603838"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f689950a998"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6899479648"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7f68995fce40"/></to>
    </wire>
    <wire loc="37:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7f68995fce40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6899506a90"/></to>
    </wire>
    <wire loc="37:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6899506a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f689836ca90"/></to>
    </wire>
    <wire loc="35:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f689950a1f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689836f1a8"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f689950a998"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f689836f950"/></to>
    </wire>
    <wire loc="39:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6898369b98"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6899582de8"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6899582de8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f68995700f8"/></to>
    </wire>
    <wire loc="40:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898364b60"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6899579020"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6899579020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f689956b160"/></to>
    </wire>
    <wire loc="41:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6898363b58"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6899578020"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6899578020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f689956a190"/></to>
    </wire>
    <wire loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f689835fbb0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f6899574228"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7f6899574228"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7f6899566968"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f68994d4cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f6899485020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f689945b3c0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f68993bd728"/></to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x7f6899450a18"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x7f689944ec88"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x7f6899466328"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x7f68997f6af0"/></to>
    </wire>
    <wire loc="65:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x7f68994637c0"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x7f68997f2020"/></to>
    </wire>
    <wire loc="95:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x7f6899452dd0"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x7f6899449060"/></to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x7f6899451b00"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x7f6899449d40"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f6899460c68"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x7f68997e1af0"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_TXD" scoped="" ref="0x7f6899454b18"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x7f68997edaf0"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x7f6899468020"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x7f68997f87e0"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x7f68994654b0"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x7f68997f5c78"/></to>
    </wire>
    <wire loc="90:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f689945aba8"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f68993b5728"/></to>
    </wire>
    <wire loc="93:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x7f68994520f0"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f689944b340"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_RXD" scoped="" ref="0x7f6899455990"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x7f68997ee968"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x7f6899462948"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x7f68997f11a0"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f6899458670"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f68993cc060"/></to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x7f689944f3c0"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x7f68994483f8"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f689945fdf0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f68997e0c78"/></to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x7f6899464638"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x7f68997f4e00"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x7f6899452760"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x7f689944b9b0"/></to>
    </wire>
    <wire loc="96:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x7f6899451490"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x7f68994496d0"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f6899461ae0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x7f68997e2968"/></to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f689945a020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f68993b8020"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="USART1_CLK" scoped="" ref="0x7f6899456808"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x7f68997eae00"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x7f689944fa30"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x7f6899448a68"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x7f689946de68"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x7f68997f9658"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f689945d020"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x7f68997dfe00"/></to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993ccb10"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x7f6899432b38"/></to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x7f6899432b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993e7180"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993bc2e8"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x7f6899431b38"/></to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x7f6899431b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993e2020"/></to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993b8ad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f6899430b38"/></to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x7f6899430b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993dfcd8"/></to>
    </wire>
    <wire loc="89:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993b42e8"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x7f689942fb38"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x7f689942fb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993db9d8"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x7f689943ac88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993f4cf8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x7f6899438b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993f07e8"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x7f6899435da0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f689940a258"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x7f6899434b38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x7f68993eb3e0"/></to>
    </wire>
    <wire loc="80:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993f6060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x7f6899428850"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993f3b10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x7f689942a020"/></to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993ee5f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x7f689942a758"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993ea2e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x7f6899429020"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993e6020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x7f6899429758"/></to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993e2de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x7f6899427020"/></to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993deb10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x7f6899427758"/></to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x7f68993da908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x7f6899426020"/></to>
    </wire>
    <wire loc="22:/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f68993a2350"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f68982a0020"/></to>
    </wire>
    <wire loc="24:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f68982a0020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899394328"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f6899394328"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899151020"/></to>
    </wire>
    <wire loc="11:/home/urvi/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f689914f860"/></from>
      <to><interface-ref name="ReadPhoto" scoped="" ref="0x7f68993881c8"/></to>
    </wire>
    <wire loc="30:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadPhoto" scoped="" ref="0x7f68993881c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899295928"/></to>
    </wire>
    <wire loc="12:/home/urvi/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f689914c020"/></from>
      <to><interface-ref name="PhotoResource" scoped="" ref="0x7f689938a9b0"/></to>
    </wire>
    <wire loc="23:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoResource" scoped="" ref="0x7f689938a9b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68992f9b50"/></to>
    </wire>
    <wire loc="46:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ReadTemp" scoped="" ref="0x7f6899386020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899286af0"/></to>
    </wire>
    <wire loc="105:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68992f9b50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898254140"/></to>
    </wire>
    <wire loc="33:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f689938ed70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68992f4e38"/></to>
    </wire>
    <wire loc="105:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68992f4e38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898217cc8"/></to>
    </wire>
    <wire loc="24:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992bcd50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f7268"/></to>
    </wire>
    <wire loc="107:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f7268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68982535b8"/></to>
    </wire>
    <wire loc="25:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992bb940"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f7e20"/></to>
    </wire>
    <wire loc="108:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f7e20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898252268"/></to>
    </wire>
    <wire loc="26:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f68992ecd50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6899296bc0"/></to>
    </wire>
    <wire loc="27:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f6899292020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68992ff840"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="28:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6899292ce0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f68992780a0"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f68992780a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f689928dd40"/></from>
      <to><interface-ref name="Int1" scoped="" ref="0x7f6899460c68"/></to>
    </wire>
    <wire loc="31:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f689928b020"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899271e30"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f6899271e30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f689926dc90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992b8800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f13f0"/></to>
    </wire>
    <wire loc="107:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f13f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6898215268"/></to>
    </wire>
    <wire loc="35:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992b73f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f0020"/></to>
    </wire>
    <wire loc="108:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f0020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898215e20"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f68992b96d8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6899288e70"/></to>
    </wire>
    <wire loc="37:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempResource" scoped="" ref="0x7f68992841c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68992ff840"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6899284e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f68992780a0"/></to>
    </wire>
    <wire loc="42:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x7f689927e020"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x7f689946de68"/></to>
    </wire>
    <wire loc="47:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x7f689927d228"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899271e30"/></to>
    </wire>
    <wire loc="49:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899160420"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899380020"/></to>
    </wire>
    <wire loc="50:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <from><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f6899380a30"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x7f68994520f0"/></to>
    </wire>
    <wire loc="106:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992fe698"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898290d58"/></to>
    </wire>
    <wire loc="107:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992fedd8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f689828e4c0"/></to>
    </wire>
    <wire loc="105:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68992ff840"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898290060"/></to>
    </wire>
    <wire loc="108:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992fd9d8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689828d0e0"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689828d980"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992fb3c8"/></to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f689828c130"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898292020"/></to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f689828a2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992f89a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898254e38"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898252b08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992f66d8"/></to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f68982512b8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898257120"/></to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f689824f2e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992f2b70"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898216a28"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68982136f8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992f08a0"/></to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f6898213e78"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898219b48"/></to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6898210020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f68981df740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f68992ecd50"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68981de268"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68992bc7b8"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68981de800"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992bcd50"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68981dd3f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992bb940"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f68981ddb90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f68981dc470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f68981c9ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f68992b96d8"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68981c8578"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68992b8268"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68981c8b10"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992b8800"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68981c6700"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992b73f0"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f68981c5020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f68981c57c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f689928a5f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <from><interface-ref name="stopDone" scoped="" ref="0x7f689927c7d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899266670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899160420"/></to>
    </wire>
    <wire loc="38:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68992624c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f689925e020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689925d890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6899160cc8"/></to>
    </wire>
    <wire loc="30:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f689926dc90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f6899183680"/></to>
    </wire>
    <wire loc="31:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x7f6899264a00"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x7f68991aa880"/></to>
    </wire>
    <wire loc="32:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6899169720"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68992624c0"/></to>
    </wire>
    <wire loc="33:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f68991a8e78"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899266670"/></to>
    </wire>
    <wire loc="35:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f689916a060"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f68991adc68"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f68991a8020"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f68992570d0"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f68992570d0"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f689924e488"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f68992529b0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f689924ede0"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f689925e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68991d1d88"/></to>
    </wire>
    <wire loc="105:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68991d1d88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898187630"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68991ce6d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689925d890"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f689923d940"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f689920b020"/></to>
    </wire>
    <wire loc="50:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f689920b020"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f68992061e8"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f689924ad30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6899825c88"/></to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f68991cb478"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f689924cc10"/></to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991b5268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991cf268"/></to>
    </wire>
    <wire loc="107:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991cf268"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6898186ac8"/></to>
    </wire>
    <wire loc="51:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f6899204640"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6899851240"/></to>
    </wire>
    <wire loc="106:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f68991d0af8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898186388"/></to>
    </wire>
    <wire loc="108:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68991cfe20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898185700"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898184020"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68991ce6d8"/></to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f68981847a0"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f68981895f8"/></to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f6898181908"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6898150600"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x7f68991cb478"/></to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6898150d20"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68991cbb98"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f689814f2e8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991b5268"/></to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689814e020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68991b5e20"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x7f6899197bf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6899083818"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f689905a3a0"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f68990b1788"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f68990827a8"/></to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f68990827a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f6898724980"/></to>
    </wire>
    <wire loc="80:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f68990bb498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f689907f498"/></to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f689907f498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f6898721628"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f68990bba70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f689907d0c0"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f689907d0c0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f689871f2a8"/></to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f689909f5e8"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988dc130"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988dc130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988ce060"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6899094b98"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6899072ac0"/></to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6899072ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f689904b668"/></to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f68990bc928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6899080928"/></to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6899080928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6898723ab0"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f68990a8998"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689907cc78"/></to>
    </wire>
    <wire loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689907cc78"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689904c658"/></to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f68990b3758"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f689907fa88"/></to>
    </wire>
    <wire loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f689907fa88"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f6898721c18"/></to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f689909e478"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f68988d8020"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f68988d8020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f68988ca020"/></to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f689905a3a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6898754dc8"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6899069b48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f689871d020"/></to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f689905d658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f689871e400"/></to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6899075e18"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f689904e7e8"/></to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f689904e7e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f689904b668"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f6898754318"/></to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689904c658"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f68988de3b8"/></to>
    </wire>
    <wire loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f6899061a98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f689904a128"/></to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f689904a128"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f68987412d0"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6899071ca8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f689904b020"/></to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f689904b020"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f68988dd6b0"/></to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f6898715698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6899059388"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f689871c020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f68990564c8"/></to>
    </wire>
    <wire loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f68990564c8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f68987b9db8"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f689871ccc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f689904e1d0"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f689904e1d0"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f68987b8ae8"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f68987178d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6898a802b8"/></to>
    </wire>
    <wire loc="102:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f689871b368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988d12e8"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898719188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988d0b60"/></to>
    </wire>
    <wire loc="104:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6898719ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fc5ce0"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fc5ce0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fbd4b0"/></to>
    </wire>
    <wire loc="106:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f68987166a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6899044678"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6899044678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f689903f948"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f68987142a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6898754dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f6898751d28"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f68988dd6b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f68988cf630"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f68987412d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f689873e548"/></to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f68987b9db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f68987ae490"/></to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f6898754318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f689874d170"/></to>
    </wire>
    <wire loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f6899057020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f68987b9748"/></to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f68987b9748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f68987afdc8"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f68988de3b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f68988d0210"/></to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6899059388"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68987eae20"/></to>
    </wire>
    <wire loc="96:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68987eae20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68987b0428"/></to>
    </wire>
    <wire loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f689904d330"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f68987baa40"/></to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f68987baa40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f68987af118"/></to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f68990576a0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f68987b71a8"/></to>
    </wire>
    <wire loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f68987b71a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f68987ad808"/></to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f68987b8ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f68987ad188"/></to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f6898751d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6899048778"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f6899048778"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f6899040140"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f68987b6670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f689880ad08"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f689880ad08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6898803438"/></to>
    </wire>
    <wire loc="102:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6898807a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f68987445d0"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f68987445d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f689873f020"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f689873f020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6898755080"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f6898755080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6898752838"/></to>
    </wire>
    <wire loc="104:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6898752838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f68990452d8"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f68990452d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6899040be0"/></to>
    </wire>
    <wire loc="107:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f68987b6020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6898755c80"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6898755c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f6898751668"/></to>
    </wire>
    <wire loc="108:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f6898751668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f68987ec758"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f68987ec758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f68987e8960"/></to>
    </wire>
    <wire loc="109:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f68987e9560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f6899044020"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f6899044020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f68989602f0"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f68989602f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f689895b7a0"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f689903e798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898fd21d8"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898fd21d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898fbe7c8"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6899035a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6898fcfa38"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f6898fcfa38"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f6898fbb318"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f689903cce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6898a63c50"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f689903cce8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6898961080"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6898961080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f689895c660"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f6898a63c50"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f6898a38310"/></to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f689902d4b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6898a5f480"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6898a5f480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f6898a38b70"/></to>
    </wire>
    <wire loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f6899034208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6898a5e140"/></to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f6898a5e140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f6898a37948"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f689902a328"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68990225f0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6899029508"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6898824b98"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f6898824b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f689881da08"/></to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f689901d8b8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898810338"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6898810338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6899029c98"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f6899018100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f6899019298"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f689901b350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f6898fc3e00"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f6898fba658"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f6898fb7370"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6898f1ad58"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6898f1ad58"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6898f139e8"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6898fb24f8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6898d5ade0"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6898d5ade0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f68998027e0"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6898fb1688"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f6898d56338"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f6898d56338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x7f68998044d0"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6898fb0810"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f6898d54648"/></to>
    </wire>
    <wire loc="105:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f6898d54648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x7f6899805348"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6898fafa10"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f6898d4aa60"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f6898d4aa60"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6898d2aa60"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6898f9ce68"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898af0280"/></to>
    </wire>
    <wire loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898af0280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898f9d0b8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f6898aeda50"/></to>
    </wire>
    <wire loc="118:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898aeda50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6898f9d790"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f6898aeccd0"/></to>
    </wire>
    <wire loc="121:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6898aeccd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6898f9c788"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f6898aefde8"/></to>
    </wire>
    <wire loc="116:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6898aefde8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898f9de80"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898aeb368"/></to>
    </wire>
    <wire loc="122:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898aeb368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6898fa1cd8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f6898ae3838"/></to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6898ae3838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6898fa45c0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f6898ae07c0"/></to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6898ae07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898fa4e30"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f6898adf020"/></to>
    </wire>
    <wire loc="145:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898adf020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898fa36e0"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898ae7dd8"/></to>
    </wire>
    <wire loc="133:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898ae7dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898fa0020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898ae65c0"/></to>
    </wire>
    <wire loc="134:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898ae65c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6898fac7d0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f6898ad87c0"/></to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6898ad87c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898fa5e08"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f6898ad8020"/></to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898ad8020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898fa0898"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898ae4c90"/></to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898ae4c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6898f9f130"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f6898ae6d60"/></to>
    </wire>
    <wire loc="135:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6898ae6d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6898f9f9a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f6898ae5cc8"/></to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6898ae5cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f6898f999e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ac8a48"/></to>
    </wire>
    <wire loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898ac8a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f6898f9bba8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898aa51a8"/></to>
    </wire>
    <wire loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898aa51a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6898fad020"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6898a802b8"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6898fb5998"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6898a83d10"/></to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f6898f8e0c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f6898f8f290"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6898f1a3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898d5f928"/></to>
    </wire>
    <wire loc="93:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6898d5f928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898d65a60"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6898f139e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f6898119498"/></to>
    </wire>
    <wire loc="36:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f6898119498"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f68980fc648"/></to>
    </wire>
    <wire loc="37:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f68980f6b10"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f68981028b8"/></to>
    </wire>
    <wire loc="41:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f68981028b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f68980eccb0"/></to>
    </wire>
    <wire loc="38:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f68980f87b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6898deada8"/></to>
    </wire>
    <wire loc="33:/home/urvi/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6898deada8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6898da80e0"/></to>
    </wire>
    <wire loc="43:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f68980e9db8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6898effe20"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6898effe20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6898eda020"/></to>
    </wire>
    <wire loc="44:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f68980e4d08"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f6898ee39c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898ef60c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898ed5020"/></to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x7f6898ee6b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6898ed4680"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6898ee39c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x7f6898ed0e60"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6898ee39c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x7f6898ecb2b8"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7f6898ee39c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x7f6898ec7698"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f6898ec4a48"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7f6899579020"/></to>
    </wire>
    <wire loc="27:/home/urvi/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6898e34740"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6898effe20"/></to>
    </wire>
    <wire loc="34:/home/urvi/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f6898da52b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6898de4ad8"/></to>
    </wire>
    <wire loc="31:/home/urvi/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6898de4ad8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6898ddda98"/></to>
    </wire>
    <wire loc="32:/home/urvi/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6898dcab78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f6898effe20"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6898d58020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x7f68997fa4d0"/></to>
    </wire>
    <wire loc="102:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6898d57198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x7f68997e0c78"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6898d5dc90"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x7f68997e8020"/></to>
    </wire>
    <wire loc="104:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6898d554b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x7f68997ebc78"/></to>
    </wire>
    <wire loc="49:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6898d47e80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6898d44c40"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6898d46710"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f6898d2d020"/></to>
    </wire>
    <wire loc="50:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x7f6898d43888"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f6898ee6b68"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6898d2dad0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x7f6899430b38"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x7f6898d276d8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6898d5dc90"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x7f6898d24178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6898aed438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898ae17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6898ae0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6898ad47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898ad67c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898aec6b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898ad77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6898add020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898af0e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898cdd4e8"/></to>
    </wire>
    <wire loc="124:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898aea020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898aea638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6898aead50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898ad6020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898ae5528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6898ad4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898ad5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6898add7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6898ad7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6898adf7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6898ad3020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898aef7d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6898ae7638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898ae44f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898ae1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6898ae83a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6898ae7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898aeb980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898ada7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6898ad57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898ada020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898aec0a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6898ade7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6898ade020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6898ae89b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6898ad10a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898cda4d0"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898cd9680"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898cd83c8"/></to>
    </wire>
    <wire loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898cdc300"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898cd71c8"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f6898cd50e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c6f100"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6898c6f100"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6898cd78e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898b105f8"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898b105f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898b21e48"/></to>
    </wire>
    <wire loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6898cd3470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6898b0f2a8"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6898b0f2a8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6898c482f0"/></to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6898ccb860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6898b0f880"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6898b0f880"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6898c47490"/></to>
    </wire>
    <wire loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6898cd5e50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f6898cc8b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c661c8"/></to>
    </wire>
    <wire loc="96:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f6898c47490"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f6898c3d450"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f6898c482f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f6898c3e330"/></to>
    </wire>
    <wire loc="51:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6898b10020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898c4bb58"/></to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f6898c4bb58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f6898c41d18"/></to>
    </wire>
    <wire loc="53:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x7f6898b1ebb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898c461c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f6898b1d940"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f68998027e0"/></to>
    </wire>
    <wire loc="95:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f6898c428d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f6898c3e938"/></to>
    </wire>
    <wire loc="97:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898c461c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898c3b1c8"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x7f6898c1f888"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898b2a748"/></to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f6898b2a748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898050be0"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898c1e5e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898b28c50"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898b28c50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689804e268"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x7f6898c205a8"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x7f6898bd2020"/></to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x7f6898bd2020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x7f6898bcfdc8"/></to>
    </wire>
    <wire loc="102:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x7f6898c1ed90"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6899851240"/></to>
    </wire>
    <wire loc="296:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x7f6898bfdb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x7f6898bc5970"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x7f6899851240"/></to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x7f6898bc9380"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x7f68998027e0"/></to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f6898bc84c0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x7f6899801968"/></to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x7f6898bc7648"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x7f6899800af0"/></to>
    </wire>
    <wire loc="89:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x7f6898bc67d0"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x7f68997ffc78"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898b28510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f689804f9a8"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689804eb08"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898b27550"/></to>
    </wire>
    <wire loc="103:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f689804d2b8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f6898052e80"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f689804dd68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898abb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6898ac6cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898abf7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898ab92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6898ab9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6898aad2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898ab02e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898ac4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898ab12e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6898abe7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6898abc7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6898ab5a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6898ab82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ac7740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></to>
    </wire>
    <wire loc="124:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898ac2900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898ac1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6898ac1738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898ab1a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898ac4c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898abc020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898abe020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6898ac66b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6898aaea88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898ab0a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6898ab42e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6898ab2a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6898ab72e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6898aada88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898ac60a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6898abf020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898abb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898ab8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6898aba2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898ac5368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898abaa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6898ac1d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6898ac09b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6898ab22e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898ab3a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898ac22e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898ab32e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6898aae2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898ab4a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898ac5980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6898ab52e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6898ac4638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6898ab7a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6898ac03a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6898aab020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898a99c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f6898aa33a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898a9ddd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898a977c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6898a95020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6898a8b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898a8d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898aa1638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898a8e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f6898a9bd60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6898a9acc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6898a92020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f6898a957c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898aa5da0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></to>
    </wire>
    <wire loc="124:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898a9f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898a9f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6898a9fd50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898a8d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898aa02e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898a9a528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898a9b5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6898aa4d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6898a8b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898a8c020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6898a927c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6898a8e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6898a947c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f6898a8a020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898aa4748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6898a9d638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898a994f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898a94020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f6898a98838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898aa39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898a97020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f6898a9e3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6898a9d020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6898a907c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898a90020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898aa0900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898a917c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6898a8c7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898a91020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898aa1020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6898a937c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6898aa1c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6898a93020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6898a9e9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6898a890a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6898a5ccb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6898a368c0"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f6898a5b458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f6898a35060"/></to>
    </wire>
    <wire loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f6898a359d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6898f1ad58"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f6898a2a8b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f6898d5dc90"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f6898a29c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6898d5ade0"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f6898a27e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f6898d554b0"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f6898a22d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f6898d47e80"/></to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6898a20020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68989897d0"/></to>
    </wire>
    <wire loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68989897d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898a20cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898988430"/></to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898988430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898a1d670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6898988d58"/></to>
    </wire>
    <wire loc="115:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898988d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898a1dd40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f6898986638"/></to>
    </wire>
    <wire loc="119:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898986638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898a1c478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f6898986c50"/></to>
    </wire>
    <wire loc="120:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898986c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898a1cb68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898984638"/></to>
    </wire>
    <wire loc="124:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898984638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f6898a1eda8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f689897d470"/></to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f689897d470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f6898a1f720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f689896d5f8"/></to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f689896d5f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898a1e538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898973c10"/></to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898973c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898a1a3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898980c10"/></to>
    </wire>
    <wire loc="134:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898980c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898a19558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f689897b5f8"/></to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f689897b5f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898a19de0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f689897bd98"/></to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f689897bd98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6898a1ae30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f6898981020"/></to>
    </wire>
    <wire loc="128:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f6898981020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f6898a176f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f689896f470"/></to>
    </wire>
    <wire loc="163:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f689896f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898a18650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f6898972c10"/></to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898972c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898a18e80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f6898971470"/></to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898971470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6898a12750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f6898961868"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f6898961868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f689895ce48"/></to>
    </wire>
    <wire loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f6898a319a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="99:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898a307f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6898a2f460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988dc130"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6898a221d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f68988d5ac8"/></to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f68988d5ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f68988c7ac8"/></to>
    </wire>
    <wire loc="104:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6898a150c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f689897c470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f68989879b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898980470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f689897a5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f689896fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f689897f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6898976470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f689897ad60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898984c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f68989823a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898972470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898985900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f689897fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f68989873a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f6898976c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6898973470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f6898979cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f689896e470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f6898981c50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f689897dc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898979528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f689897ce10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898986020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f68989829b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f6898981638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f6898974c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898974470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898984020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898975c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f6898971c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898975470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f6898978c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f68989852e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f68989784f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f6898960a48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f689895a020"/></to>
    </wire>
    <wire loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f6898947ba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></to>
    </wire>
    <wire loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f689895a6b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f6898d5ade0"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f6898959998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f6898d58020"/></to>
    </wire>
    <wire loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f6898957b28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f6898d57198"/></to>
    </wire>
    <wire loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6898956d40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6898d46710"/></to>
    </wire>
    <wire loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f6898955900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f68988670e0"/></to>
    </wire>
    <wire loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f68988670e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f68989546a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f689884c020"/></to>
    </wire>
    <wire loc="167:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f689884c020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898953c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898863900"/></to>
    </wire>
    <wire loc="123:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898863900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898953520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f6898861638"/></to>
    </wire>
    <wire loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f6898861638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f68989523a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898951350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f689894fd08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988dc130"/></to>
    </wire>
    <wire loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f6898951cb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fc5ce0"/></to>
    </wire>
    <wire loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f689894a020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898859020"/></to>
    </wire>
    <wire loc="141:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898859020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f689894a8a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f68988597c0"/></to>
    </wire>
    <wire loc="142:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f68988597c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f689894b8e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f68988603a0"/></to>
    </wire>
    <wire loc="127:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f68988603a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f6898948208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f689884d7c0"/></to>
    </wire>
    <wire loc="164:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f689884d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f6898949130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f68988507c0"/></to>
    </wire>
    <wire loc="160:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f68988507c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f6898949960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f689884f020"/></to>
    </wire>
    <wire loc="161:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f689884f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898948a70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898850020"/></to>
    </wire>
    <wire loc="159:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898850020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898947398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f6898866678"/></to>
    </wire>
    <wire loc="115:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f6898866678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f689893a020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f6898874720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f6898deada8"/></to>
    </wire>
    <wire loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f68988c5520"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6898876528"/></to>
    </wire>
    <wire loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f68988c4788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f6899610980"/></to>
    </wire>
    <wire loc="52:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f6898870730"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f689885bc90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f68988652e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f689885fdd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f6898858020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f6898864638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f68988517c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f689885ed60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f689885dcc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f6898854020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f68988587c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898867cd8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></to>
    </wire>
    <wire loc="124:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898861020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f6898861d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f68988632e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f689885d528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f689885e5c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f6898866c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f689884d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f68988547c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f6898851020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f68988577c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f689885f638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f689885b4f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f6898857020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f689885a838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f6898865900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f689885f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f68988527c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f6898852020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f68988537c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f689884f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898853020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f6898864020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f68988567c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f6898864c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f6898856020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f68988609b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f689884b0a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f6898822b10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f689881e9f0"/></to>
    </wire>
    <wire loc="54:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f689882cdb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f689881e198"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f6898802750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f6898807a40"/></to>
    </wire>
    <wire loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6898801428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898804978"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f6898804978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f68988002a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f6898824b98"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898800a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f68987ece20"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f68987e3060"/></to>
    </wire>
    <wire loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f68987e3d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f68987e9560"/></to>
    </wire>
    <wire loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68987e23c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f68987ac528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f68987b6670"/></to>
    </wire>
    <wire loc="95:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f68987ab358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f68987b6020"/></to>
    </wire>
    <wire loc="100:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f68987ab970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></to>
    </wire>
    <wire loc="101:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68987aa7a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></to>
    </wire>
    <wire loc="102:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f68987a91c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f689875e2a8"/></to>
    </wire>
    <wire loc="180:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f689877fac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f6898753928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f689874fd50"/></to>
    </wire>
    <wire loc="74:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f689874fd50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689873b3c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689904c658"/></to>
    </wire>
    <wire loc="55:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f6898687020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f68990bba70"/></to>
    </wire>
    <wire loc="56:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f6898687bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f68990b3758"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/urvi/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/urvi/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/urvi/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/urvi/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/home/urvi/tinyos-main/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/home/urvi/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/urvi/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/urvi/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/urvi/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/urvi/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/urvi/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/urvi/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SounderC" loc="1:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <configuration/>
    </component>
    <component qname="SounderP" loc="1:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <module/>
    </component>
    <component qname="SounderC.TimerMilliC" loc="44(SounderC.TimerMilliC):/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/urvi/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f68995fac50"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt0C" loc="6(MicaBusC.Atm128GpioInterrupt0C):/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt1C" loc="6(MicaBusC.Atm128GpioInterrupt1C):/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt2C" loc="6(MicaBusC.Atm128GpioInterrupt2C):/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="MicaBusC.Atm128GpioInterrupt3C" loc="6(MicaBusC.Atm128GpioInterrupt3C):/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.Sensor" loc="16(BlinkToRadioAppC.Sensor):/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkToRadioAppC.Sensor.Sensor" loc="18(BlinkToRadioAppC.Sensor.Sensor):/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PhotoC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ArbitratedPhotoDeviceP" loc="1:/home/urvi/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PhotoTempP" loc="14:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
        <short>&#10; MTS300 photo and temp sensor ADC configuration.</short>
        <long>&#10; MTS300 photo and temp sensor ADC configuration.&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter" loc="89(PhotoTempDeviceC.SharingArbiter):/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.phototemp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Queue" loc="42(PhotoTempDeviceC.SharingArbiter.Queue):/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.SharingArbiter.Arbiter" loc="52(PhotoTempDeviceC.SharingArbiter.Arbiter):/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter" loc="89(PhotoTempDeviceC.PhotoArbiter):/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.photo">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Queue" loc="42(PhotoTempDeviceC.PhotoArbiter.Queue):/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoArbiter.Arbiter" loc="52(PhotoTempDeviceC.PhotoArbiter.Arbiter):/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter" loc="89(PhotoTempDeviceC.TempArbiter):/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.temp">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Queue" loc="42(PhotoTempDeviceC.TempArbiter.Queue):/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempArbiter.Arbiter" loc="52(PhotoTempDeviceC.TempArbiter.Arbiter):/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower" loc="67(PhotoTempDeviceC.PhotoPower):/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoPower.PowerManager" loc="58(PhotoTempDeviceC.PhotoPower.PowerManager):/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower" loc="67(PhotoTempDeviceC.TempPower):/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.TempPower.PowerManager" loc="58(PhotoTempDeviceC.TempPower.PowerManager):/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.PhotoControl" loc="1(PhotoTempDeviceC.PhotoControl):/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="0">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.TempControl" loc="1(PhotoTempDeviceC.TempControl):/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <instance number="1">
        <component-ref qname="PhotoTempControlP"/>
      </instance>
      <module/>
    </component>
    <component qname="PhotoTempDeviceC.WarmupTimer" loc="44(PhotoTempDeviceC.WarmupTimer):/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PhotoTempDeviceC.Adc" loc="21(PhotoTempDeviceC.Adc):/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="44:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="35:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="3">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ArbitratedPhotoDeviceP.ArbitrateRead" loc="23(ArbitratedPhotoDeviceP.ArbitrateRead):/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkToRadioC" loc="5:BlinkToRadioC.nc">
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.Timer0" loc="44(BlinkToRadioAppC.Timer0):/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/home/urvi/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/urvi/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x7f6899876020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/home/urvi/tinyos-main/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/home/urvi/tinyos-main/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/home/urvi/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/home/urvi/tinyos-main/tos/system/StateImplC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/home/urvi/tinyos-main/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/urvi/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/urvi/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/home/urvi/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/urvi/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/home/urvi/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/home/urvi/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/home/urvi/tinyos-main/tos/system/StateC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkToRadioAppC.AMReceiverC" loc="43(BlinkToRadioAppC.AMReceiverC):/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f68997ccb98" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f68997c9020" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f68997c9368" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f68997be608" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f68997be970" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f68997becd8" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f68997bb060" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7f689972d020" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7f689972d388" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7f689972d6f0" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f689972da20" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f68995fac50" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f68995fac50"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f68995f7020" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7f68995ec410" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7f68995ec410"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7f68995ec700" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f689960dc60" loc="46:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f689960dc60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f68994cf110" loc="46:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f68994cf110"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f68994cf420" loc="46:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f68994810a8" loc="46:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f68994810a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x7f6899409020" loc="39:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x7f6899409388" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x7f68994096f0" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7f6899409a20" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="16:/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc" abstract="">
      <documentation loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc">
        <short>&#10; Demo sensor for basicsb sensorboard.</short>
        <long>&#10; Demo sensor for basicsb sensorboard.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PhotoC" loc="18:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoC.nc" abstract="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.6 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f68993775a8" loc="89:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f689936a920" loc="42:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/home/urvi/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f68993475c0" loc="52:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PhotoTempControlP" loc="1:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x7f6899182370" loc="23:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x7f6899182370"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f6898e36e50" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6898e36e50"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x7f6898e331e8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6898e229c8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6898e229c8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f6898e1f198" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6898e1f198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x7f6898e1f498" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f6898ddfe28" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f6898ddfe28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x7f6898ddb5c8" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f6898ddb5c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6898dc16e8" loc="55:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6898dc16e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6898dc1e50" loc="56:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6898dc1e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6898dbf240" loc="57:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6898dbf240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6898dbf9b8" loc="58:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6898dbf9b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6898dbfd60" loc="59:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f6898dbe528" loc="60:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f6898dbe528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f6898d9f4d8" loc="52:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f6898d9f4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f6898d9fc40" loc="53:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f6898d9fc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f6898d9e068" loc="54:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f6898d9e068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f6898d9e7e0" loc="55:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f6898d9e7e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f6898d9eb88" loc="56:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/home/urvi/tinyos-main/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f6898b7e8b8" loc="83:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f6898b74270" loc="42:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f6898691748" loc="43:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f6899832e40" loc="58:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899832e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68998311c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f6899830a50" loc="57:/home/urvi/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f6899830a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f6899830da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f689982c9a0" loc="52:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f689982c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689982ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6899831db0" loc="46:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6899831db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689982d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f6899825c88" loc="50:/home/urvi/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f6899825c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f689982c020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f689982c1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f689982c330"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f689982c4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f689982c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f6899822b90" loc="45:/home/urvi/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7f6899822b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899821020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f68998224f0" loc="44:/home/urvi/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f68998224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899822840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7f6899821398" loc="46:/home/urvi/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7f6899821398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68998216e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f689981b108" loc="41:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f689981b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689981b458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6899824a10" loc="40:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6899824a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899824d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7f68998177f8" loc="45:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7f68998177f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899817b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7f68998115f8" loc="44:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7f68998115f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899811948"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899811ad0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899811c58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899811de0"/>
        <function-ref name="get" scoped="" ref="0x7f6899817020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68998171a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899817330"/>
        <function-ref name="clr" scoped="" ref="0x7f68998174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7f6899818460" loc="43:/home/urvi/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6899818460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68998187b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7f68997d5c78" loc="100:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7f68997d5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d45e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d4770"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d48f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d4a80"/>
        <function-ref name="get" scoped="" ref="0x7f68997d4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d4d90"/>
        <function-ref name="set" scoped="" ref="0x7f68997d3020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7f68997ef7e0" loc="74:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7f68997ef7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997efb30"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997efcb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997efe40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997ee020"/>
        <function-ref name="get" scoped="" ref="0x7f68997ee1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ee330"/>
        <function-ref name="set" scoped="" ref="0x7f68997ee4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997ee640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7f68997e37e0" loc="85:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7f68997e37e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e3b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e3cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e3e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e2020"/>
        <function-ref name="get" scoped="" ref="0x7f68997e21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e2330"/>
        <function-ref name="set" scoped="" ref="0x7f68997e24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7f68997da4d0" loc="94:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7f68997da4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997da820"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997da9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997dab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997dacb8"/>
        <function-ref name="get" scoped="" ref="0x7f68997dae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d9020"/>
        <function-ref name="set" scoped="" ref="0x7f68997d91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7f68998044d0" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7f68998044d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899804820"/>
        <function-ref name="isInput" scoped="" ref="0x7f68998049a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899804b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899804cb8"/>
        <function-ref name="get" scoped="" ref="0x7f6899804e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899803020"/>
        <function-ref name="set" scoped="" ref="0x7f68998031a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899803330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7f68997dc1a0" loc="92:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7f68997dc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997dc4f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997dc678"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997dc800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997dc988"/>
        <function-ref name="get" scoped="" ref="0x7f68997dcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997dcc98"/>
        <function-ref name="set" scoped="" ref="0x7f68997dce20"/>
        <function-ref name="clr" scoped="" ref="0x7f68997db020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7f68998027e0" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7f68998027e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899802b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899802cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899802e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899801020"/>
        <function-ref name="get" scoped="" ref="0x7f68998011a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899801330"/>
        <function-ref name="set" scoped="" ref="0x7f68998014b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899801640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7f68997f7968" loc="66:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7f68997f7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f61a8"/>
        <function-ref name="get" scoped="" ref="0x7f68997f6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f64b8"/>
        <function-ref name="set" scoped="" ref="0x7f68997f6640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7f68997ebc78" loc="77:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7f68997ebc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997ea020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997ea1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997ea330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997ea4b8"/>
        <function-ref name="get" scoped="" ref="0x7f68997ea640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ea7c8"/>
        <function-ref name="set" scoped="" ref="0x7f68997ea950"/>
        <function-ref name="clr" scoped="" ref="0x7f68997eaad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7f68997e0c78" loc="88:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7f68997e0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997df020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997df1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997df330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997df4b8"/>
        <function-ref name="get" scoped="" ref="0x7f68997df640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997df7c8"/>
        <function-ref name="set" scoped="" ref="0x7f68997df950"/>
        <function-ref name="clr" scoped="" ref="0x7f68997dfad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7f689980bc78" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7f689980bc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689980a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f689980a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689980a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689980a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f689980a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689980a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f689980a950"/>
        <function-ref name="clr" scoped="" ref="0x7f689980aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7f68997ffc78" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7f68997ffc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997fe020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997fe1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997fe330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997fe4b8"/>
        <function-ref name="get" scoped="" ref="0x7f68997fe640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997fe7c8"/>
        <function-ref name="set" scoped="" ref="0x7f68997fe950"/>
        <function-ref name="clr" scoped="" ref="0x7f68997fead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7f68997f4e00" loc="69:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7f68997f4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f31a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f3330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f3640"/>
        <function-ref name="get" scoped="" ref="0x7f68997f37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f3950"/>
        <function-ref name="set" scoped="" ref="0x7f68997f3ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7f68997e71a0" loc="80:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7f68997e71a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e74f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e7678"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e7800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e7988"/>
        <function-ref name="get" scoped="" ref="0x7f68997e7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e7c98"/>
        <function-ref name="set" scoped="" ref="0x7f68997e7e20"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7f68997d7968" loc="97:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7f68997d7968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d7cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d7e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d61a8"/>
        <function-ref name="get" scoped="" ref="0x7f68997d6330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d64b8"/>
        <function-ref name="set" scoped="" ref="0x7f68997d6640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7f68997d07e0" loc="103:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7f68997d07e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d0b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d0cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d0e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997cf020"/>
        <function-ref name="get" scoped="" ref="0x7f68997cf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997cf330"/>
        <function-ref name="set" scoped="" ref="0x7f68997cf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997cf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7f68997e54d0" loc="83:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7f68997e54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e5820"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e59a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e5b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e5cb8"/>
        <function-ref name="get" scoped="" ref="0x7f68997e5e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e4020"/>
        <function-ref name="set" scoped="" ref="0x7f68997e41a8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7f68998061a0" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7f68998061a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68998064f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899806678"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899806800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899806988"/>
        <function-ref name="get" scoped="" ref="0x7f6899806b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899806c98"/>
        <function-ref name="set" scoped="" ref="0x7f6899806e20"/>
        <function-ref name="clr" scoped="" ref="0x7f6899805020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7f68997fb348" loc="61:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7f68997fb348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997fb698"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997fb820"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997fb9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997fbb30"/>
        <function-ref name="get" scoped="" ref="0x7f68997fbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997fbe40"/>
        <function-ref name="set" scoped="" ref="0x7f68997fa020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997fa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7f68997d34d0" loc="101:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7f68997d34d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d3820"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d39a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d3b30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d3cb8"/>
        <function-ref name="get" scoped="" ref="0x7f68997d3e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d2020"/>
        <function-ref name="set" scoped="" ref="0x7f68997d21a8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7f68997f9658" loc="64:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7f68997f9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f99a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f9b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f9e40"/>
        <function-ref name="get" scoped="" ref="0x7f68997f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f81a8"/>
        <function-ref name="set" scoped="" ref="0x7f68997f8330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7f68997ee968" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7f68997ee968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997eecb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997eee40"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997ed020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997ed1a8"/>
        <function-ref name="get" scoped="" ref="0x7f68997ed330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ed4b8"/>
        <function-ref name="set" scoped="" ref="0x7f68997ed640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7f68997e2968" loc="86:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7f68997e2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e2cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e2e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e11a8"/>
        <function-ref name="get" scoped="" ref="0x7f68997e1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e14b8"/>
        <function-ref name="set" scoped="" ref="0x7f68997e1640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7f68997d9658" loc="95:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7f68997d9658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d99a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d9b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d9cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d9e40"/>
        <function-ref name="get" scoped="" ref="0x7f68997d8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d81a8"/>
        <function-ref name="set" scoped="" ref="0x7f68997d8330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d84b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7f6899803658" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7f6899803658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68998039a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899803b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899803cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899803e40"/>
        <function-ref name="get" scoped="" ref="0x7f6899802020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68998021a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899802330"/>
        <function-ref name="clr" scoped="" ref="0x7f68998024b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7f6899801968" loc="56:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7f6899801968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899801cb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899801e40"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899800020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68998001a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899800330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68998004b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899800640"/>
        <function-ref name="clr" scoped="" ref="0x7f68998007c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7f68997f6af0" loc="67:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7f68997f6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f6e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f5330"/>
        <function-ref name="get" scoped="" ref="0x7f68997f54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f5640"/>
        <function-ref name="set" scoped="" ref="0x7f68997f57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7f68997eae00" loc="78:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7f68997eae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e91a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e9330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e9640"/>
        <function-ref name="get" scoped="" ref="0x7f68997e97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e9950"/>
        <function-ref name="set" scoped="" ref="0x7f68997e9ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7f68997dfe00" loc="89:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7f68997dfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997de1a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997de330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997de4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997de640"/>
        <function-ref name="get" scoped="" ref="0x7f68997de7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997de950"/>
        <function-ref name="set" scoped="" ref="0x7f68997dead8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997dec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7f689980ae00" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7f689980ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68998091a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899809330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68998094b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899809640"/>
        <function-ref name="get" scoped="" ref="0x7f68998097c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899809950"/>
        <function-ref name="set" scoped="" ref="0x7f6899809ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899809c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7f68997fee00" loc="59:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7f68997fee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997fd2e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997fd470"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997fd5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997fd780"/>
        <function-ref name="get" scoped="" ref="0x7f68997fd908"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997fda90"/>
        <function-ref name="set" scoped="" ref="0x7f68997fdc18"/>
        <function-ref name="clr" scoped="" ref="0x7f68997fdda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7f68997f2020" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7f68997f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f2370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f24f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f2680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f2808"/>
        <function-ref name="get" scoped="" ref="0x7f68997f2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f2b18"/>
        <function-ref name="set" scoped="" ref="0x7f68997f2ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7f68997d6af0" loc="98:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7f68997d6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d6e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d5020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d51a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d5330"/>
        <function-ref name="get" scoped="" ref="0x7f68997d54b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d5640"/>
        <function-ref name="set" scoped="" ref="0x7f68997d57c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7f68997f0348" loc="73:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7f68997f0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f0898"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f0a20"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f0ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f0d30"/>
        <function-ref name="get" scoped="" ref="0x7f68997ef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ef1a8"/>
        <function-ref name="set" scoped="" ref="0x7f68997ef330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7f68997e4658" loc="84:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7f68997e4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e49a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e4b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e4cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e4e40"/>
        <function-ref name="get" scoped="" ref="0x7f68997e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e31a8"/>
        <function-ref name="set" scoped="" ref="0x7f68997e3330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7f68997db348" loc="93:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7f68997db348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997db698"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997db820"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997db9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997dbb30"/>
        <function-ref name="get" scoped="" ref="0x7f68997dbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997dbe40"/>
        <function-ref name="set" scoped="" ref="0x7f68997da020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997da1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7f68997cf968" loc="104:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7f68997cf968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997cfcb8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997cfe40"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997ce020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997ce1a8"/>
        <function-ref name="get" scoped="" ref="0x7f68997ce330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ce4b8"/>
        <function-ref name="set" scoped="" ref="0x7f68997ce640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997ce7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7f6899805348" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7f6899805348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899805698"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899805820"/>
        <function-ref name="toggle" scoped="" ref="0x7f68998059a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899805b30"/>
        <function-ref name="get" scoped="" ref="0x7f6899805cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899805e40"/>
        <function-ref name="set" scoped="" ref="0x7f6899804020"/>
        <function-ref name="clr" scoped="" ref="0x7f68998041a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7f68997fa4d0" loc="62:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7f68997fa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997fa820"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997fa9a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997fab30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997facb8"/>
        <function-ref name="get" scoped="" ref="0x7f68997fae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f9020"/>
        <function-ref name="set" scoped="" ref="0x7f68997f91a8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f9330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7f68997dd020" loc="91:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7f68997dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997dd370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997dd4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997dd680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997dd808"/>
        <function-ref name="get" scoped="" ref="0x7f68997dd990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ddb18"/>
        <function-ref name="set" scoped="" ref="0x7f68997ddca0"/>
        <function-ref name="clr" scoped="" ref="0x7f68997dde28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7f68997f87e0" loc="65:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7f68997f87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f8b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f7020"/>
        <function-ref name="get" scoped="" ref="0x7f68997f71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f7330"/>
        <function-ref name="set" scoped="" ref="0x7f68997f74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7f68997edaf0" loc="76:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7f68997edaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997ede40"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997eb020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997eb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997eb330"/>
        <function-ref name="get" scoped="" ref="0x7f68997eb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997eb640"/>
        <function-ref name="set" scoped="" ref="0x7f68997eb7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997eb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7f68997e1af0" loc="87:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7f68997e1af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e1e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e0020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e01a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e0330"/>
        <function-ref name="get" scoped="" ref="0x7f68997e04b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e0640"/>
        <function-ref name="set" scoped="" ref="0x7f68997e07c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e0950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7f68997d87e0" loc="96:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7f68997d87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d8b30"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d7020"/>
        <function-ref name="get" scoped="" ref="0x7f68997d71a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d7330"/>
        <function-ref name="set" scoped="" ref="0x7f68997d74b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7f689981aab8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7f689981aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689981ae08"/>
        <function-ref name="isInput" scoped="" ref="0x7f689980b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689980b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689980b330"/>
        <function-ref name="get" scoped="" ref="0x7f689980b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689980b640"/>
        <function-ref name="set" scoped="" ref="0x7f689980b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689980b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7f6899800af0" loc="57:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7f6899800af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899800e40"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997ff020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997ff1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997ff330"/>
        <function-ref name="get" scoped="" ref="0x7f68997ff4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997ff640"/>
        <function-ref name="set" scoped="" ref="0x7f68997ff7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68997ff950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7f68997f5c78" loc="68:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7f68997f5c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f41a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f4330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f44b8"/>
        <function-ref name="get" scoped="" ref="0x7f68997f4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f47c8"/>
        <function-ref name="set" scoped="" ref="0x7f68997f4950"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f4ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7f68997e8020" loc="79:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7f68997e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e8370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e84f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e8680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e8808"/>
        <function-ref name="get" scoped="" ref="0x7f68997e8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e8b18"/>
        <function-ref name="set" scoped="" ref="0x7f68997e8ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7f68997d2658" loc="102:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7f68997d2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997d29a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997d2b30"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997d2cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997d2e40"/>
        <function-ref name="get" scoped="" ref="0x7f68997d0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997d01a8"/>
        <function-ref name="set" scoped="" ref="0x7f68997d0330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997d04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7f68997e6348" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7f68997e6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997e6698"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997e6820"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997e69a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997e6b30"/>
        <function-ref name="get" scoped="" ref="0x7f68997e6cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997e6e40"/>
        <function-ref name="set" scoped="" ref="0x7f68997e5020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997e51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7f68997f11a0" loc="71:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7f68997f11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997f14f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997f1678"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997f1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997f1988"/>
        <function-ref name="get" scoped="" ref="0x7f68997f1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997f1c98"/>
        <function-ref name="set" scoped="" ref="0x7f68997f1e20"/>
        <function-ref name="clr" scoped="" ref="0x7f68997f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7f6899808020" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7f6899808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899808370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68998084f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899808680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899808808"/>
        <function-ref name="get" scoped="" ref="0x7f6899808990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899808b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899808ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899808e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7f68997fc100" loc="60:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7f68997fc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997fc450"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997fc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997fc760"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997fc8e8"/>
        <function-ref name="get" scoped="" ref="0x7f68997fca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997fcbf8"/>
        <function-ref name="set" scoped="" ref="0x7f68997fcd80"/>
        <function-ref name="clr" scoped="" ref="0x7f68997fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6899785120" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6899785120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899785470"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997855f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899785780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899785908"/>
        <function-ref name="get" scoped="" ref="0x7f6899785a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899785c18"/>
        <function-ref name="set" scoped="" ref="0x7f6899785da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899784020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f68997825b8" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f68997825b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899782908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899782a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899782c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899782da0"/>
        <function-ref name="get" scoped="" ref="0x7f6899781020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997811a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899781330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6899789dc0" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6899789dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899788170"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997882f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899788480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899788608"/>
        <function-ref name="get" scoped="" ref="0x7f6899788790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899788918"/>
        <function-ref name="set" scoped="" ref="0x7f6899788aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899788c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f68997842a8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f68997842a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997845f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899784780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899784908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899784a90"/>
        <function-ref name="get" scoped="" ref="0x7f6899784c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899784da0"/>
        <function-ref name="set" scoped="" ref="0x7f6899783020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997831a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899781740" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899781740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899781a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899781c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899781da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899780020"/>
        <function-ref name="get" scoped="" ref="0x7f68997801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899780330"/>
        <function-ref name="set" scoped="" ref="0x7f68997804b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899780640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6899787020" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6899787020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899787370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997874f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899787680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899787808"/>
        <function-ref name="get" scoped="" ref="0x7f6899787990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899787b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899787ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899787e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899783430" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899783430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899783780"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899783908"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899783a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899783c18"/>
        <function-ref name="get" scoped="" ref="0x7f6899783da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899782020"/>
        <function-ref name="set" scoped="" ref="0x7f68997821a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899782330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f68997808c8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f68997808c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899780c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899780da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f689977f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689977f1a8"/>
        <function-ref name="get" scoped="" ref="0x7f689977f330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689977f4b8"/>
        <function-ref name="set" scoped="" ref="0x7f689977f640"/>
        <function-ref name="clr" scoped="" ref="0x7f689977f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689864f9d8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689864f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689864fd28"/>
        <function-ref name="isInput" scoped="" ref="0x7f689864e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689864e1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689864e330"/>
        <function-ref name="get" scoped="" ref="0x7f689864e4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689864e640"/>
        <function-ref name="set" scoped="" ref="0x7f689864e7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689864e950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689864ca10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689864ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689864cd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689864b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689864b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689864b330"/>
        <function-ref name="get" scoped="" ref="0x7f689864b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689864b640"/>
        <function-ref name="set" scoped="" ref="0x7f689864b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689864b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898649a10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898649a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898649d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898648020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68986481a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898648330"/>
        <function-ref name="get" scoped="" ref="0x7f68986484b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898648640"/>
        <function-ref name="set" scoped="" ref="0x7f68986487c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898648950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898646a10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898646a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898646d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898645020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68986451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898645330"/>
        <function-ref name="get" scoped="" ref="0x7f68986454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898645640"/>
        <function-ref name="set" scoped="" ref="0x7f68986457c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898645950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898643a10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898643a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898643d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898642020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68986421a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898642330"/>
        <function-ref name="get" scoped="" ref="0x7f68986424b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898642640"/>
        <function-ref name="set" scoped="" ref="0x7f68986427c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898642950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898640a10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898640a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898640d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689863f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689863f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689863f330"/>
        <function-ref name="get" scoped="" ref="0x7f689863f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689863f640"/>
        <function-ref name="set" scoped="" ref="0x7f689863f7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689863f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689863da10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689863da10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689863dd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689863b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689863b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689863b330"/>
        <function-ref name="get" scoped="" ref="0x7f689863b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689863b640"/>
        <function-ref name="set" scoped="" ref="0x7f689863b7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689863b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898639a10" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898639a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898639d60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898638020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68986381a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898638330"/>
        <function-ref name="get" scoped="" ref="0x7f68986384b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898638640"/>
        <function-ref name="set" scoped="" ref="0x7f68986387c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898638950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6899777bd8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6899777bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899776020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997761a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899776330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997764b8"/>
        <function-ref name="get" scoped="" ref="0x7f6899776640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997767c8"/>
        <function-ref name="set" scoped="" ref="0x7f6899776950"/>
        <function-ref name="clr" scoped="" ref="0x7f6899776ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6899773020" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6899773020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899773370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997734f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899773680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899773808"/>
        <function-ref name="get" scoped="" ref="0x7f6899773990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899773b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899773ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899773e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f6899779930" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f6899779930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899779c80"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899779e08"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899778020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997781a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899778330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997784b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899778640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6899776d60" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6899776d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997750d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899775260"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997753e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899775570"/>
        <function-ref name="get" scoped="" ref="0x7f68997756f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899775880"/>
        <function-ref name="set" scoped="" ref="0x7f6899775a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6899775b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899772120" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899772120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899772470"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997725f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899772780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899772908"/>
        <function-ref name="get" scoped="" ref="0x7f6899772a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899772c18"/>
        <function-ref name="set" scoped="" ref="0x7f6899772da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899771020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f6899778a50" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f6899778a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899778da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899777020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997771a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899777330"/>
        <function-ref name="get" scoped="" ref="0x7f68997774b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899777640"/>
        <function-ref name="set" scoped="" ref="0x7f68997777c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899777950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899775e18" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899775e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997741a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899774330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997744b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899774640"/>
        <function-ref name="get" scoped="" ref="0x7f68997747c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899774950"/>
        <function-ref name="set" scoped="" ref="0x7f6899774ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899774c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f68997712a8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f68997712a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997715f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899771780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899771908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899771a90"/>
        <function-ref name="get" scoped="" ref="0x7f6899771c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899771da0"/>
        <function-ref name="set" scoped="" ref="0x7f6899770020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997701a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985e8970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985e8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985e8cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985e8e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985e7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985e71a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985e7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985e74b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985e7640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985e77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985e5970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985e5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985e5cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985e5e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985e4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985e41a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985e4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985e44b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985e4640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985e47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985e2970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985e2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985e2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985e2e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985e1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985e11a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985e1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985e14b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985e1640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985e17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985df970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985df970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985dfcc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985dfe48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985de020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985de1a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985de330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985de4b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985de640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985de7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985dc970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985dc970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985dccc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985dce48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985db020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985db1a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985db330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985db4b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985db640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985db7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985d9970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985d9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985d9cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985d9e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985d8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985d81a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985d8330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985d84b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985d8640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985d87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985d6970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985d6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985d6cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985d6e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985d41a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985d4330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985d44b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985d4640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985d47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985d2970" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985d2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985d2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68985d2e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68985d1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68985d11a8"/>
        <function-ref name="get" scoped="" ref="0x7f68985d1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68985d14b8"/>
        <function-ref name="set" scoped="" ref="0x7f68985d1640"/>
        <function-ref name="clr" scoped="" ref="0x7f68985d17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6899768740" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6899768740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899768a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899768c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899768da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899767020"/>
        <function-ref name="get" scoped="" ref="0x7f68997671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899767330"/>
        <function-ref name="set" scoped="" ref="0x7f68997674b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899767640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6899765bd8" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6899765bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899764020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997641a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899764330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997644b8"/>
        <function-ref name="get" scoped="" ref="0x7f6899764640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997647c8"/>
        <function-ref name="set" scoped="" ref="0x7f6899764950"/>
        <function-ref name="clr" scoped="" ref="0x7f6899764ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f689976a500" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f689976a500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689976a850"/>
        <function-ref name="isInput" scoped="" ref="0x7f689976a9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689976ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689976ace8"/>
        <function-ref name="get" scoped="" ref="0x7f689976ae70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899769020"/>
        <function-ref name="set" scoped="" ref="0x7f68997691a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899769330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f68997678c8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f68997678c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899767c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899767da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899766020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997661a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899766330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997664b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899766640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899764d60" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899764d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997630d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899763260"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997633e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899763570"/>
        <function-ref name="get" scoped="" ref="0x7f68997636f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899763880"/>
        <function-ref name="set" scoped="" ref="0x7f6899763a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6899763b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f68997695b8" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f68997695b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899769908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899769a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899769c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899769da0"/>
        <function-ref name="get" scoped="" ref="0x7f6899768020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997681a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899768330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899766a50" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899766a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899766da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899765020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899765330"/>
        <function-ref name="get" scoped="" ref="0x7f68997654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899765640"/>
        <function-ref name="set" scoped="" ref="0x7f68997657c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899765950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6899763e18" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6899763e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997611a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899761330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997614b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899761640"/>
        <function-ref name="get" scoped="" ref="0x7f68997617c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899761950"/>
        <function-ref name="set" scoped="" ref="0x7f6899761ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899761c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68985816a8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68985816a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68985819f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898581b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898581d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898580020"/>
        <function-ref name="get" scoped="" ref="0x7f68985801a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898580330"/>
        <function-ref name="set" scoped="" ref="0x7f68985804b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898580640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689857e710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689857e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689857ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689857ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689857ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689857d020"/>
        <function-ref name="get" scoped="" ref="0x7f689857d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689857d330"/>
        <function-ref name="set" scoped="" ref="0x7f689857d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689857d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689857b710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689857b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689857ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689857bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689857bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689857a020"/>
        <function-ref name="get" scoped="" ref="0x7f689857a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689857a330"/>
        <function-ref name="set" scoped="" ref="0x7f689857a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689857a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898578710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898578710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898578a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898578be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898578d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898577020"/>
        <function-ref name="get" scoped="" ref="0x7f68985771a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898577330"/>
        <function-ref name="set" scoped="" ref="0x7f68985774b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898577640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898575710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898575710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898575a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898575be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898575d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898574020"/>
        <function-ref name="get" scoped="" ref="0x7f68985741a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898574330"/>
        <function-ref name="set" scoped="" ref="0x7f68985744b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898574640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898572710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898572710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898572a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898572be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898572d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898571020"/>
        <function-ref name="get" scoped="" ref="0x7f68985711a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898571330"/>
        <function-ref name="set" scoped="" ref="0x7f68985714b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898571640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689856f710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689856f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689856fa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689856fbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689856fd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689856e020"/>
        <function-ref name="get" scoped="" ref="0x7f689856e1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689856e330"/>
        <function-ref name="set" scoped="" ref="0x7f689856e4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689856e640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689856c710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689856c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689856ca60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689856cbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689856cd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689856a020"/>
        <function-ref name="get" scoped="" ref="0x7f689856a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689856a330"/>
        <function-ref name="set" scoped="" ref="0x7f689856a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689856a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f6899759120" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f6899759120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899759470"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997595f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899759780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899759908"/>
        <function-ref name="get" scoped="" ref="0x7f6899759a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899759c18"/>
        <function-ref name="set" scoped="" ref="0x7f6899759da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899758020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f68997555b8" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f68997555b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899755908"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899755a90"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899755c18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899755da0"/>
        <function-ref name="get" scoped="" ref="0x7f6899754020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997541a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899754330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f689975ce40" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f689975ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689975b1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f689975b348"/>
        <function-ref name="toggle" scoped="" ref="0x7f689975b4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689975b658"/>
        <function-ref name="get" scoped="" ref="0x7f689975b7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689975b968"/>
        <function-ref name="set" scoped="" ref="0x7f689975baf0"/>
        <function-ref name="clr" scoped="" ref="0x7f689975bc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f68997582a8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f68997582a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997585f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899758780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899758908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899758a90"/>
        <function-ref name="get" scoped="" ref="0x7f6899758c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899758da0"/>
        <function-ref name="set" scoped="" ref="0x7f6899757020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899754740" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899754740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899754a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899754c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899754da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899753020"/>
        <function-ref name="get" scoped="" ref="0x7f68997531a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899753330"/>
        <function-ref name="set" scoped="" ref="0x7f68997534b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899753640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f689975a020" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f689975a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689975a370"/>
        <function-ref name="isInput" scoped="" ref="0x7f689975a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689975a680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689975a808"/>
        <function-ref name="get" scoped="" ref="0x7f689975a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689975ab18"/>
        <function-ref name="set" scoped="" ref="0x7f689975aca0"/>
        <function-ref name="clr" scoped="" ref="0x7f689975ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899757430" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899757430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899757780"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899757908"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899757a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899757c18"/>
        <function-ref name="get" scoped="" ref="0x7f6899757da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899755020"/>
        <function-ref name="set" scoped="" ref="0x7f68997551a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899755330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f68997538c8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f68997538c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899753c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899753da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899752020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997521a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899752330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997524b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899752640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997527c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689851a6a8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689851a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689851a9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689851ab80"/>
        <function-ref name="toggle" scoped="" ref="0x7f689851ad08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898519020"/>
        <function-ref name="get" scoped="" ref="0x7f68985191a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898519330"/>
        <function-ref name="set" scoped="" ref="0x7f68985194b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898519640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898517710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898517710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898517a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898517be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898517d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898516020"/>
        <function-ref name="get" scoped="" ref="0x7f68985161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898516330"/>
        <function-ref name="set" scoped="" ref="0x7f68985164b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898516640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898514710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898514710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898514a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898514be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898514d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898513020"/>
        <function-ref name="get" scoped="" ref="0x7f68985131a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898513330"/>
        <function-ref name="set" scoped="" ref="0x7f68985134b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898513640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898511710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898511710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898511a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898511be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898511d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898510020"/>
        <function-ref name="get" scoped="" ref="0x7f68985101a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898510330"/>
        <function-ref name="set" scoped="" ref="0x7f68985104b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898510640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689850e710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689850e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689850ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689850ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689850ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689850d020"/>
        <function-ref name="get" scoped="" ref="0x7f689850d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689850d330"/>
        <function-ref name="set" scoped="" ref="0x7f689850d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689850d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689850b710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689850b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689850ba60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689850bbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689850bd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689850a020"/>
        <function-ref name="get" scoped="" ref="0x7f689850a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689850a330"/>
        <function-ref name="set" scoped="" ref="0x7f689850a4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689850a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898508710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898508710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898508a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898508be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898508d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898507020"/>
        <function-ref name="get" scoped="" ref="0x7f68985071a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898507330"/>
        <function-ref name="set" scoped="" ref="0x7f68985074b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898507640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898505710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898505710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898505a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898505be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898505d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898503020"/>
        <function-ref name="get" scoped="" ref="0x7f68985031a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898503330"/>
        <function-ref name="set" scoped="" ref="0x7f68985034b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898503640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f689974abd8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f689974abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899749020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997491a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899749330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997494b8"/>
        <function-ref name="get" scoped="" ref="0x7f6899749640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997497c8"/>
        <function-ref name="set" scoped="" ref="0x7f6899749950"/>
        <function-ref name="clr" scoped="" ref="0x7f6899749ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f6899746020" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f6899746020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899746370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997464f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899746680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899746808"/>
        <function-ref name="get" scoped="" ref="0x7f6899746990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899746b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899746ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899746e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f689974d930" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f689974d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689974dc80"/>
        <function-ref name="isInput" scoped="" ref="0x7f689974de08"/>
        <function-ref name="toggle" scoped="" ref="0x7f689974c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689974c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f689974c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689974c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f689974c640"/>
        <function-ref name="clr" scoped="" ref="0x7f689974c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f6899749d60" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f6899749d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997480d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899748260"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997483e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899748570"/>
        <function-ref name="get" scoped="" ref="0x7f68997486f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899748880"/>
        <function-ref name="set" scoped="" ref="0x7f6899748a08"/>
        <function-ref name="clr" scoped="" ref="0x7f6899748b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899745120" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899745120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899745470"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997455f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899745780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899745908"/>
        <function-ref name="get" scoped="" ref="0x7f6899745a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899745c18"/>
        <function-ref name="set" scoped="" ref="0x7f6899745da0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899744020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f689974ca50" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f689974ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689974cda0"/>
        <function-ref name="isInput" scoped="" ref="0x7f689974a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f689974a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689974a330"/>
        <function-ref name="get" scoped="" ref="0x7f689974a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689974a640"/>
        <function-ref name="set" scoped="" ref="0x7f689974a7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f689974a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899748e18" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899748e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997471a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899747330"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997474b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899747640"/>
        <function-ref name="get" scoped="" ref="0x7f68997477c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899747950"/>
        <function-ref name="set" scoped="" ref="0x7f6899747ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899747c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f68997442a8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f68997442a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68997445f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899744780"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899744908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899744a90"/>
        <function-ref name="get" scoped="" ref="0x7f6899744c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899744da0"/>
        <function-ref name="set" scoped="" ref="0x7f6899743020"/>
        <function-ref name="clr" scoped="" ref="0x7f68997431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984b36a8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984b36a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984b39f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984b3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984b3d08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984b2020"/>
        <function-ref name="get" scoped="" ref="0x7f68984b21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984b2330"/>
        <function-ref name="set" scoped="" ref="0x7f68984b24b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984b2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984b0710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984b0710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984b0a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984b0be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984af020"/>
        <function-ref name="get" scoped="" ref="0x7f68984af1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984af330"/>
        <function-ref name="set" scoped="" ref="0x7f68984af4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984af640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984ad710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984ad710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984ada60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984adbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984add70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984ac020"/>
        <function-ref name="get" scoped="" ref="0x7f68984ac1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984ac330"/>
        <function-ref name="set" scoped="" ref="0x7f68984ac4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984ac640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984aa710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984aa710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984aaa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984aabe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984aad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984a9020"/>
        <function-ref name="get" scoped="" ref="0x7f68984a91a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984a9330"/>
        <function-ref name="set" scoped="" ref="0x7f68984a94b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984a9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984a7710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984a7710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984a7a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984a7be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984a7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984a6020"/>
        <function-ref name="get" scoped="" ref="0x7f68984a61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984a6330"/>
        <function-ref name="set" scoped="" ref="0x7f68984a64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984a6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984a4710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984a4710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984a4a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984a4be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984a4d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984a3020"/>
        <function-ref name="get" scoped="" ref="0x7f68984a31a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984a3330"/>
        <function-ref name="set" scoped="" ref="0x7f68984a34b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984a3640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68984a1710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68984a1710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68984a1a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f68984a1be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68984a1d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68984a0020"/>
        <function-ref name="get" scoped="" ref="0x7f68984a01a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68984a0330"/>
        <function-ref name="set" scoped="" ref="0x7f68984a04b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68984a0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689849e710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689849e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689849ea60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689849ebe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689849ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689849d020"/>
        <function-ref name="get" scoped="" ref="0x7f689849d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689849d330"/>
        <function-ref name="set" scoped="" ref="0x7f689849d4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689849d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7f689973b430" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7f689973b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689973b780"/>
        <function-ref name="isInput" scoped="" ref="0x7f689973b908"/>
        <function-ref name="toggle" scoped="" ref="0x7f689973ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689973bc18"/>
        <function-ref name="get" scoped="" ref="0x7f689973bda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689973a020"/>
        <function-ref name="set" scoped="" ref="0x7f689973a1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f689973a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7f68997388c8" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7f68997388c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899738c18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899738da0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899737020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997371a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899737330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997374b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899737640"/>
        <function-ref name="clr" scoped="" ref="0x7f68997377c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7f689973d1e8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7f689973d1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689973d538"/>
        <function-ref name="isInput" scoped="" ref="0x7f689973d6c0"/>
        <function-ref name="toggle" scoped="" ref="0x7f689973d848"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689973d9d0"/>
        <function-ref name="get" scoped="" ref="0x7f689973db58"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689973dce0"/>
        <function-ref name="set" scoped="" ref="0x7f689973de68"/>
        <function-ref name="clr" scoped="" ref="0x7f689973c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7f689973a5b8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7f689973a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689973a908"/>
        <function-ref name="isInput" scoped="" ref="0x7f689973aa90"/>
        <function-ref name="toggle" scoped="" ref="0x7f689973ac18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689973ada0"/>
        <function-ref name="get" scoped="" ref="0x7f6899739020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997391a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899739330"/>
        <function-ref name="clr" scoped="" ref="0x7f68997394b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7f6899737a50" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7f6899737a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899737da0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899736020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997361a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899736330"/>
        <function-ref name="get" scoped="" ref="0x7f68997364b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899736640"/>
        <function-ref name="set" scoped="" ref="0x7f68997367c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899736950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7f689973c2a8" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7f689973c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689973c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689973c780"/>
        <function-ref name="toggle" scoped="" ref="0x7f689973c908"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689973ca90"/>
        <function-ref name="get" scoped="" ref="0x7f689973cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689973cda0"/>
        <function-ref name="set" scoped="" ref="0x7f689973b020"/>
        <function-ref name="clr" scoped="" ref="0x7f689973b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7f6899739740" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7f6899739740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899739a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899739c18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899739da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899738020"/>
        <function-ref name="get" scoped="" ref="0x7f68997381a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899738330"/>
        <function-ref name="set" scoped="" ref="0x7f68997384b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899738640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7f6899736bd8" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7f6899736bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899735020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997351a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899735330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997354b8"/>
        <function-ref name="get" scoped="" ref="0x7f6899735640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997357c8"/>
        <function-ref name="set" scoped="" ref="0x7f6899735950"/>
        <function-ref name="clr" scoped="" ref="0x7f6899735ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689844c6a8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689844c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689844c9f8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689844cb80"/>
        <function-ref name="toggle" scoped="" ref="0x7f689844cd08"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689844b020"/>
        <function-ref name="get" scoped="" ref="0x7f689844b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689844b330"/>
        <function-ref name="set" scoped="" ref="0x7f689844b4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689844b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898449710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898449710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898449a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898449be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898449d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898448020"/>
        <function-ref name="get" scoped="" ref="0x7f68984481a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898448330"/>
        <function-ref name="set" scoped="" ref="0x7f68984484b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898448640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898446710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898446710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898446a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898446be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898446d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898445020"/>
        <function-ref name="get" scoped="" ref="0x7f68984451a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898445330"/>
        <function-ref name="set" scoped="" ref="0x7f68984454b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898445640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898443710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898443710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898443a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898443be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898443d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898442020"/>
        <function-ref name="get" scoped="" ref="0x7f68984421a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898442330"/>
        <function-ref name="set" scoped="" ref="0x7f68984424b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898442640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898440710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898440710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898440a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898440be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898440d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689843f020"/>
        <function-ref name="get" scoped="" ref="0x7f689843f1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689843f330"/>
        <function-ref name="set" scoped="" ref="0x7f689843f4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689843f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689843d710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689843d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689843da60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689843dbe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689843dd70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689843c020"/>
        <function-ref name="get" scoped="" ref="0x7f689843c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689843c330"/>
        <function-ref name="set" scoped="" ref="0x7f689843c4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f689843c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689843a710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689843a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689843aa60"/>
        <function-ref name="isInput" scoped="" ref="0x7f689843abe8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689843ad70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898439020"/>
        <function-ref name="get" scoped="" ref="0x7f68984391a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898439330"/>
        <function-ref name="set" scoped="" ref="0x7f68984394b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898439640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6898437710" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6898437710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898437a60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898437be8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898437d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898436020"/>
        <function-ref name="get" scoped="" ref="0x7f68984361a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898436330"/>
        <function-ref name="set" scoped="" ref="0x7f68984364b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898436640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689972eac0" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689972eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689972ee10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899718020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68997181a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899718330"/>
        <function-ref name="get" scoped="" ref="0x7f68997184b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899718640"/>
        <function-ref name="set" scoped="" ref="0x7f68997187c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899718950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6899715db8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6899715db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899714170"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997142f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899714480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899714608"/>
        <function-ref name="get" scoped="" ref="0x7f6899714790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899714918"/>
        <function-ref name="set" scoped="" ref="0x7f6899714aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899714c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689970f3e0" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689970f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689970f730"/>
        <function-ref name="isInput" scoped="" ref="0x7f689970f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689970fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689970fbc8"/>
        <function-ref name="get" scoped="" ref="0x7f689970fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689970e020"/>
        <function-ref name="set" scoped="" ref="0x7f689970e1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f689970e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f689970a7e8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f689970a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689970ab38"/>
        <function-ref name="isInput" scoped="" ref="0x7f689970acc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f689970ae48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899709020"/>
        <function-ref name="get" scoped="" ref="0x7f68997091a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899709330"/>
        <function-ref name="set" scoped="" ref="0x7f68997094b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899709640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6899706c38" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6899706c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899705020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997051a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899705330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68997054b8"/>
        <function-ref name="get" scoped="" ref="0x7f6899705640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68997057c8"/>
        <function-ref name="set" scoped="" ref="0x7f6899705950"/>
        <function-ref name="clr" scoped="" ref="0x7f6899705ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f6899700020" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f6899700020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899700370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68997004f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899700680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899700808"/>
        <function-ref name="get" scoped="" ref="0x7f6899700990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899700b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899700ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899700e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996fc480" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996fc480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996fc7d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996fc958"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996fcae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996fcc68"/>
        <function-ref name="get" scoped="" ref="0x7f68996fcdf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996fa020"/>
        <function-ref name="set" scoped="" ref="0x7f68996fa1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f68996fa330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996f77e8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996f77e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996f7b38"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996f7cc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996f7e48"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996f6020"/>
        <function-ref name="get" scoped="" ref="0x7f68996f61a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996f6330"/>
        <function-ref name="set" scoped="" ref="0x7f68996f64b8"/>
        <function-ref name="clr" scoped="" ref="0x7f68996f6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996f2970" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996f2970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996f2cc0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996f2e48"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996f1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996f11a8"/>
        <function-ref name="get" scoped="" ref="0x7f68996f1330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996f14b8"/>
        <function-ref name="set" scoped="" ref="0x7f68996f1640"/>
        <function-ref name="clr" scoped="" ref="0x7f68996f17c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996eeab0" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996eeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996eee00"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996ec020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996ec1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996ec330"/>
        <function-ref name="get" scoped="" ref="0x7f68996ec4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996ec640"/>
        <function-ref name="set" scoped="" ref="0x7f68996ec7c8"/>
        <function-ref name="clr" scoped="" ref="0x7f68996ec950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996e9c38" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996e9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996e8020"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996e81a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996e8330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996e84b8"/>
        <function-ref name="get" scoped="" ref="0x7f68996e8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996e87c8"/>
        <function-ref name="set" scoped="" ref="0x7f68996e8950"/>
        <function-ref name="clr" scoped="" ref="0x7f68996e8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996e3020" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996e3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996e3370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996e34f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996e3680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996e3808"/>
        <function-ref name="get" scoped="" ref="0x7f68996e3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996e3b18"/>
        <function-ref name="set" scoped="" ref="0x7f68996e3ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f68996e3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f68996df180" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7f68996df180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68996df4d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f68996df658"/>
        <function-ref name="toggle" scoped="" ref="0x7f68996df7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68996df968"/>
        <function-ref name="get" scoped="" ref="0x7f68996dfaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68996dfc78"/>
        <function-ref name="set" scoped="" ref="0x7f68996dfe00"/>
        <function-ref name="clr" scoped="" ref="0x7f68996de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f68996a81b8" loc="27:/home/urvi/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f68996a81b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7f68999346f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7f68999346f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68996a8508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7f68996a87e8" loc="28:/home/urvi/tinyos-main/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f68996a87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f68996a8b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f68996a8cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f68996a8e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f68996a6020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f68996a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f6899687560" loc="60:/home/urvi/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7f6899687560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68996878b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f689982ee20" loc="57:/home/urvi/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f689982ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f68996881a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f6899688e68" loc="59:/home/urvi/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7f6899688e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68996871e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f6899688490" loc="58:/home/urvi/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6899688490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68996887e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f6899688968"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6899688af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6899928728" loc="48:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f6899928728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6899928a78"/>
        <function-ref name="runTask" scoped="" ref="0x7f6899928c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6899931be8" loc="47:/home/urvi/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6899931be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899933020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f68999331a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6899933330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f6899872b08" loc="56:/home/urvi/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7f6899872b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6899872e58"/>
        <function-ref name="runTask" scoped="" ref="0x7f6899870020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f689986f020" loc="57:/home/urvi/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f689986f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f689986f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f6899873c00" loc="55:/home/urvi/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7f6899873c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6899872020"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f68998721a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f6899872330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f68998507f0" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f68998507f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f6899850b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f6899927dd0" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7f6899927dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7f6899854170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f6899851240" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6899851240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6899851590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f689967c020" loc="46:/home/urvi/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f689967c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f689967c370"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f689967c4f8"/>
        <function-ref name="led1On" scoped="" ref="0x7f689967c680"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f689967c808"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f689967c990"/>
        <function-ref name="get" scoped="" ref="0x7f689967cb18"/>
        <function-ref name="led1Off" scoped="" ref="0x7f689967cca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f689967b330"/>
        <function-ref name="set" scoped="" ref="0x7f689967ce28"/>
        <function-ref name="led0On" scoped="" ref="0x7f689967b020"/>
        <function-ref name="led2On" scoped="" ref="0x7f689967b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f689966ee70" loc="50:/home/urvi/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f689966ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689966d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689966d370"/>
        <function-ref name="toggle" scoped="" ref="0x7f689966d4f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689966d680"/>
        <function-ref name="get" scoped="" ref="0x7f689966d808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689966d990"/>
        <function-ref name="set" scoped="" ref="0x7f689966db18"/>
        <function-ref name="clr" scoped="" ref="0x7f689966dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689966f218" loc="46:/home/urvi/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689966f218"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689966f568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f689966c020" loc="51:/home/urvi/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f689966c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689966c370"/>
        <function-ref name="isInput" scoped="" ref="0x7f689966c4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689966c680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689966c808"/>
        <function-ref name="get" scoped="" ref="0x7f689966c990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689966cb18"/>
        <function-ref name="set" scoped="" ref="0x7f689966cca0"/>
        <function-ref name="clr" scoped="" ref="0x7f689966ce28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f689966f7e0" loc="47:/home/urvi/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f689966f7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f689966fb30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f689966fcb8"/>
        <function-ref name="led1On" scoped="" ref="0x7f689966fe40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f689966e020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f689966e1a8"/>
        <function-ref name="get" scoped="" ref="0x7f689966e330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f689966e4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f689966ead8"/>
        <function-ref name="set" scoped="" ref="0x7f689966e640"/>
        <function-ref name="led0On" scoped="" ref="0x7f689966e7c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f689966e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f689966b190" loc="52:/home/urvi/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f689966b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689966b4e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f689966b668"/>
        <function-ref name="toggle" scoped="" ref="0x7f689966b7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689966b978"/>
        <function-ref name="get" scoped="" ref="0x7f689966bb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689966bc88"/>
        <function-ref name="set" scoped="" ref="0x7f689966be10"/>
        <function-ref name="clr" scoped="" ref="0x7f689966a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f689964f090" loc="44:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7f689964f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689964f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f689964f568"/>
        <function-ref name="toggle" scoped="" ref="0x7f689964f6f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689964f878"/>
        <function-ref name="get" scoped="" ref="0x7f689964fa00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689964fb88"/>
        <function-ref name="set" scoped="" ref="0x7f689964fd10"/>
        <function-ref name="clr" scoped="" ref="0x7f689964e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f689964e378" loc="45:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7f689964e378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689964e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689964e850"/>
        <function-ref name="toggle" scoped="" ref="0x7f689964e9d8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689964eb60"/>
        <function-ref name="get" scoped="" ref="0x7f689964ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689964ee70"/>
        <function-ref name="set" scoped="" ref="0x7f689964d020"/>
        <function-ref name="clr" scoped="" ref="0x7f689964d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f689964c5e8" loc="47:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689964c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689964c938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f689964d500" loc="46:/home/urvi/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7f689964d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689964d850"/>
        <function-ref name="isInput" scoped="" ref="0x7f689964d9d8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689964db60"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689964dce8"/>
        <function-ref name="get" scoped="" ref="0x7f689964de70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689964c020"/>
        <function-ref name="set" scoped="" ref="0x7f689964c1a8"/>
        <function-ref name="clr" scoped="" ref="0x7f689964c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f6899645e60" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderC.nc">
      <component-ref qname="SounderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f6899645e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f68996441e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mts300Sounder" ref="0x7f6899644c38" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f6899644c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f6899640020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SounderPin" ref="0x7f68996337c8" loc="6:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SounderPin" scoped="" ref="0x7f68996337c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899633b18"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899633ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899633e28"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899631020"/>
        <function-ref name="get" scoped="" ref="0x7f68996311a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899631330"/>
        <function-ref name="set" scoped="" ref="0x7f68996314b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899631640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6899636768" loc="5:/home/urvi/tinyos-main/tos/sensorboards/mts300/SounderP.nc">
      <component-ref qname="SounderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6899636768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6899634a18"/>
        <function-ref name="fired" scoped="" ref="0x7f6899635158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6899635e48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f68996359f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f68996332e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6899634e68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68996355a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f689963f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6899634448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f689963f810"/>
        <function-ref name="stop" scoped="" ref="0x7f689963fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f689962ae28" loc="45:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SounderC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f689962ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689946e0c0"/>
        <function-ref name="fired" scoped="" ref="0x7f6899470798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f689946f4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f689946f088"/>
        <function-ref name="getdt" scoped="" ref="0x7f689946e960"/>
        <function-ref name="gett0" scoped="" ref="0x7f689946e510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899470be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68994719e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689946faa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899471e80"/>
        <function-ref name="stop" scoped="" ref="0x7f6899470348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f6899624e30" loc="49:/home/urvi/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f6899624e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689961e0c0"/>
        <function-ref name="fired" scoped="" ref="0x7f6899620798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f689961f4d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f689961f088"/>
        <function-ref name="getdt" scoped="" ref="0x7f689961e960"/>
        <function-ref name="gett0" scoped="" ref="0x7f689961e510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899620be8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68996219e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689961faa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899621e80"/>
        <function-ref name="stop" scoped="" ref="0x7f6899620348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f68996194a0" loc="46:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7f68996194a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68996156c8"/>
        <function-ref name="fired" scoped="" ref="0x7f6899618db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6899616ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6899616688"/>
        <function-ref name="getdt" scoped="" ref="0x7f6899614020"/>
        <function-ref name="gett0" scoped="" ref="0x7f6899615b18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899616238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6899618020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f68996150f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f68996184c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6899618960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6899610980" loc="47:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6899610980"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6899612560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689961c760" loc="45:/home/urvi/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689961c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689961cab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7f68995fce40" loc="29:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7f68995fce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6899600be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f68995fb548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f68995fb0c0"/>
        <function-ref name="overflow" scoped="" ref="0x7f68995fb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689960c020" loc="27:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689960c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689960c370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7f6899603838" loc="28:/home/urvi/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7f6899603838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6899602020"/>
        <function-ref name="fired" scoped="" ref="0x7f689960a020"/>
        <function-ref name="startAt" scoped="" ref="0x7f689960a930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f689960a4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68996024a8"/>
        <function-ref name="start" scoped="" ref="0x7f689960b5e0"/>
        <function-ref name="stop" scoped="" ref="0x7f689960bab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f689950a998" loc="26:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f689950a998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6899506020"/>
        <function-ref name="fired" scoped="" ref="0x7f68995080c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f68995089d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899508548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68995064a8"/>
        <function-ref name="start" scoped="" ref="0x7f6899509730"/>
        <function-ref name="stop" scoped="" ref="0x7f6899509c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689950a1f0" loc="25:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689950a1f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f6899934388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f6899934388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689950a540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6899506a90" loc="27:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6899506a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6899505828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6899504190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6899505cb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6899504618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7f6898364b60" loc="31:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898364b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f6898363020"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f68983631a8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6898363330"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f68983634b8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6898363640"/>
        <function-ref name="setControl" scoped="" ref="0x7f68983637c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f689836f950" loc="26:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f689836f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689836c020"/>
        <function-ref name="fired" scoped="" ref="0x7f689836d0c0"/>
        <function-ref name="startAt" scoped="" ref="0x7f689836d9d0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f689836d548"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f689836c4a8"/>
        <function-ref name="start" scoped="" ref="0x7f689836e730"/>
        <function-ref name="stop" scoped="" ref="0x7f689836ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689836f1a8" loc="25:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689836f1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689836f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f689836ca90" loc="27:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f689836ca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f689836a828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898369190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f689836acb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898369618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7f689835fbb0" loc="33:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f689835fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f689835e020"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f689835e1a8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f689835e330"/>
        <function-ref name="countBusy" scoped="" ref="0x7f689835e4b8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f689835e640"/>
        <function-ref name="setAssr" scoped="" ref="0x7f689835e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7f6898363b58" loc="32:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6898363b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f689835f310"/>
        <function-ref name="fired" scoped="" ref="0x7f68983610c0"/>
        <function-ref name="get" scoped="" ref="0x7f6898362728"/>
        <function-ref name="reset" scoped="" ref="0x7f6898361548"/>
        <function-ref name="isOn" scoped="" ref="0x7f689835f798"/>
        <function-ref name="set" scoped="" ref="0x7f6898362bb0"/>
        <function-ref name="start" scoped="" ref="0x7f68983619d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6898361e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6898369b98" loc="30:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898369b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6898365db8"/>
        <function-ref name="test" scoped="" ref="0x7f68983654a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898368760"/>
        <function-ref name="setScale" scoped="" ref="0x7f6898364270"/>
        <function-ref name="getScale" scoped="" ref="0x7f6898364748"/>
        <function-ref name="reset" scoped="" ref="0x7f6898367580"/>
        <function-ref name="overflow" scoped="" ref="0x7f68983670f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898365930"/>
        <function-ref name="set" scoped="" ref="0x7f6898368be8"/>
        <function-ref name="start" scoped="" ref="0x7f6898367a08"/>
        <function-ref name="stop" scoped="" ref="0x7f6898365020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6899579020" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6899579020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f6899579370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f68995794f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6899579680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6899579808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6899579990"/>
        <function-ref name="setControl" scoped="" ref="0x7f6899579b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f6899574228" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f6899574228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f6899574578"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f6899574700"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f6899574888"/>
        <function-ref name="countBusy" scoped="" ref="0x7f6899574a10"/>
        <function-ref name="getAssr" scoped="" ref="0x7f6899574b98"/>
        <function-ref name="setAssr" scoped="" ref="0x7f6899574d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6899578020" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6899578020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f68995767a8"/>
        <function-ref name="fired" scoped="" ref="0x7f6899577560"/>
        <function-ref name="get" scoped="" ref="0x7f6899578ba0"/>
        <function-ref name="reset" scoped="" ref="0x7f68995779e8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6899576c30"/>
        <function-ref name="set" scoped="" ref="0x7f6899577088"/>
        <function-ref name="start" scoped="" ref="0x7f6899577e70"/>
        <function-ref name="stop" scoped="" ref="0x7f6899576320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6899582de8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6899582de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f689957b0f8"/>
        <function-ref name="test" scoped="" ref="0x7f689957c798"/>
        <function-ref name="get" scoped="" ref="0x7f689957fa18"/>
        <function-ref name="setScale" scoped="" ref="0x7f689957b580"/>
        <function-ref name="getScale" scoped="" ref="0x7f689957ba58"/>
        <function-ref name="reset" scoped="" ref="0x7f689957d980"/>
        <function-ref name="overflow" scoped="" ref="0x7f689957d4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f689957cc20"/>
        <function-ref name="set" scoped="" ref="0x7f689957d020"/>
        <function-ref name="start" scoped="" ref="0x7f689957de08"/>
        <function-ref name="stop" scoped="" ref="0x7f689957c310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f689956b160" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f689956b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f689956b4b0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f689956b638"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f689956b7c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f689956b948"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f689956bad0"/>
        <function-ref name="setControl" scoped="" ref="0x7f689956bc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f6899566268" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f6899566268"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f68995665b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7f6899566968" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7f6899566968"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x7f6899566cb8"/>
        <function-ref name="compareBusy" scoped="" ref="0x7f6899566e40"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x7f6899565020"/>
        <function-ref name="countBusy" scoped="" ref="0x7f68995651a8"/>
        <function-ref name="getAssr" scoped="" ref="0x7f6899565330"/>
        <function-ref name="setAssr" scoped="" ref="0x7f68995654b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f689956a190" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f689956a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6899568930"/>
        <function-ref name="fired" scoped="" ref="0x7f68995696d0"/>
        <function-ref name="get" scoped="" ref="0x7f689956ad10"/>
        <function-ref name="reset" scoped="" ref="0x7f6899569b58"/>
        <function-ref name="isOn" scoped="" ref="0x7f6899568db8"/>
        <function-ref name="set" scoped="" ref="0x7f68995691f8"/>
        <function-ref name="start" scoped="" ref="0x7f6899568020"/>
        <function-ref name="stop" scoped="" ref="0x7f68995684a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f68995700f8" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f68995700f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f689956c270"/>
        <function-ref name="test" scoped="" ref="0x7f689956e930"/>
        <function-ref name="get" scoped="" ref="0x7f6899570c78"/>
        <function-ref name="setScale" scoped="" ref="0x7f689956c6f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f689956cbd0"/>
        <function-ref name="reset" scoped="" ref="0x7f689956fa90"/>
        <function-ref name="overflow" scoped="" ref="0x7f689956f608"/>
        <function-ref name="isOn" scoped="" ref="0x7f689956edb8"/>
        <function-ref name="set" scoped="" ref="0x7f689956f130"/>
        <function-ref name="start" scoped="" ref="0x7f689956e020"/>
        <function-ref name="stop" scoped="" ref="0x7f689956e4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f68994d4cf0" loc="74:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7f68994d4cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68994d30a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f68994d3228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f68994d8c70" loc="49:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f68994d8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68994d4410"/>
        <function-ref name="fired" scoped="" ref="0x7f68994d64a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f68994d6db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68994d6930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68994d4898"/>
        <function-ref name="start" scoped="" ref="0x7f68994d79f0"/>
        <function-ref name="stop" scoped="" ref="0x7f68994d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f68994ddab0" loc="48:/home/urvi/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f68994ddab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68994d9d60"/>
        <function-ref name="fired" scoped="" ref="0x7f68994db470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f68994d91c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f68994dbd10"/>
        <function-ref name="getdt" scoped="" ref="0x7f68994d8648"/>
        <function-ref name="gett0" scoped="" ref="0x7f68994d81f8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68994db8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68994dc620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f68994d9790"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f68994dcac0"/>
        <function-ref name="stop" scoped="" ref="0x7f68994db020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f6899485020" loc="71:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7f6899485020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6899485370"/>
        <function-ref name="runTask" scoped="" ref="0x7f68994854f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f689948ce80" loc="49:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7f689948ce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6899486238"/>
        <function-ref name="fired" scoped="" ref="0x7f6899489910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6899487648"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f68994871f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f6899486ad8"/>
        <function-ref name="gett0" scoped="" ref="0x7f6899486688"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899489d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f689948a9f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6899487c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899489020"/>
        <function-ref name="stop" scoped="" ref="0x7f68994894c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6899491af8" loc="48:/home/urvi/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6899491af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689948c020"/>
        <function-ref name="fired" scoped="" ref="0x7f689948f530"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f689948d2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f689948fe10"/>
        <function-ref name="getdt" scoped="" ref="0x7f689948c900"/>
        <function-ref name="gett0" scoped="" ref="0x7f689948c490"/>
        <function-ref name="isRunning" scoped="" ref="0x7f689948f9a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68994906f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689948d8c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899490bb0"/>
        <function-ref name="stop" scoped="" ref="0x7f689948f0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6899482440" loc="48:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6899482440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6899479020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6899479648" loc="49:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6899479648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68994783f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6899478d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6899478878"/>
        <function-ref name="overflow" scoped="" ref="0x7f68994761f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1_Interrupt" ref="0x7f689945b3c0" loc="36:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1_Interrupt" scoped="" ref="0x7f689945b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f689945b710"/>
        <function-ref name="disable" scoped="" ref="0x7f689945b898"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f689945ba20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f689945bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f6899450a18" loc="45:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f6899450a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899450d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x7f6899466328" loc="23:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x7f6899466328"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899466678"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899466800"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899466988"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899466b10"/>
        <function-ref name="get" scoped="" ref="0x7f6899466c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899466e20"/>
        <function-ref name="set" scoped="" ref="0x7f6899465020"/>
        <function-ref name="clr" scoped="" ref="0x7f68994651a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x7f68994637c0" loc="26:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x7f68994637c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899463b10"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899463c98"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899463e20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899462020"/>
        <function-ref name="get" scoped="" ref="0x7f68994621a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899462330"/>
        <function-ref name="set" scoped="" ref="0x7f68994624b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899462640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f6899452dd0" loc="48:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f6899452dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899451170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f6899451b00" loc="50:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f6899451b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f6899460c68" loc="30:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f6899460c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689945f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f689945f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689945f330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689945f4b8"/>
        <function-ref name="get" scoped="" ref="0x7f689945f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689945f7c8"/>
        <function-ref name="set" scoped="" ref="0x7f689945f950"/>
        <function-ref name="clr" scoped="" ref="0x7f689945fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_TXD" ref="0x7f6899454b18" loc="42:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_TXD" scoped="" ref="0x7f6899454b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899454e68"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899453020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68994531a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899453330"/>
        <function-ref name="get" scoped="" ref="0x7f68994534b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899453640"/>
        <function-ref name="set" scoped="" ref="0x7f68994537c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899453950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x7f6899468020" loc="21:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x7f6899468020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899468370"/>
        <function-ref name="isInput" scoped="" ref="0x7f68994684f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899468680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899468808"/>
        <function-ref name="get" scoped="" ref="0x7f6899468990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899468b18"/>
        <function-ref name="set" scoped="" ref="0x7f6899468ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6899468e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x7f68994654b0" loc="24:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x7f68994654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899465800"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899465988"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899465b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899465c98"/>
        <function-ref name="get" scoped="" ref="0x7f6899465e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899464020"/>
        <function-ref name="set" scoped="" ref="0x7f68994641a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899464330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3_Interrupt" ref="0x7f689945aba8" loc="38:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3_Interrupt" scoped="" ref="0x7f689945aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899456020"/>
        <function-ref name="disable" scoped="" ref="0x7f68994561a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6899456330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f68994564b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f68994520f0" loc="46:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f68994520f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899452440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_RXD" ref="0x7f6899455990" loc="41:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_RXD" scoped="" ref="0x7f6899455990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899455ce0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899455e68"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899454020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68994541a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899454330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68994544b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899454640"/>
        <function-ref name="clr" scoped="" ref="0x7f68994547c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x7f6899462948" loc="27:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x7f6899462948"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899462c98"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899462e20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899461020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68994611a8"/>
        <function-ref name="get" scoped="" ref="0x7f6899461330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68994614b8"/>
        <function-ref name="set" scoped="" ref="0x7f6899461640"/>
        <function-ref name="clr" scoped="" ref="0x7f68994617c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0_Interrupt" ref="0x7f6899458670" loc="35:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0_Interrupt" scoped="" ref="0x7f6899458670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899458ac0"/>
        <function-ref name="disable" scoped="" ref="0x7f6899458c48"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6899458dd0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f689945b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f689944f3c0" loc="51:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f689944f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f689945fdf0" loc="31:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f689945fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689945e170"/>
        <function-ref name="isInput" scoped="" ref="0x7f689945e2f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689945e480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689945e608"/>
        <function-ref name="get" scoped="" ref="0x7f689945e790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689945e918"/>
        <function-ref name="set" scoped="" ref="0x7f689945eaa0"/>
        <function-ref name="clr" scoped="" ref="0x7f689945ec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x7f6899467180" loc="22:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x7f6899467180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68994674d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899467658"/>
        <function-ref name="toggle" scoped="" ref="0x7f68994677e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899467968"/>
        <function-ref name="get" scoped="" ref="0x7f6899467af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899467c78"/>
        <function-ref name="set" scoped="" ref="0x7f6899467e00"/>
        <function-ref name="clr" scoped="" ref="0x7f6899466020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x7f6899464638" loc="25:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x7f6899464638"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899464988"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899464b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899464c98"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899464e20"/>
        <function-ref name="get" scoped="" ref="0x7f6899463020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68994631a8"/>
        <function-ref name="set" scoped="" ref="0x7f6899463330"/>
        <function-ref name="clr" scoped="" ref="0x7f68994634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f6899452760" loc="47:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f6899452760"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899452ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f6899451490" loc="49:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f6899451490"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f68994517e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f6899461ae0" loc="29:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f6899461ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899461e30"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899460020"/>
        <function-ref name="toggle" scoped="" ref="0x7f68994601a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899460330"/>
        <function-ref name="get" scoped="" ref="0x7f68994604b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899460640"/>
        <function-ref name="set" scoped="" ref="0x7f68994607c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899460950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2_Interrupt" ref="0x7f689945a020" loc="37:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2_Interrupt" scoped="" ref="0x7f689945a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f689945a370"/>
        <function-ref name="disable" scoped="" ref="0x7f689945a4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f689945a680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f689945a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="USART1_CLK" ref="0x7f6899456808" loc="40:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="USART1_CLK" scoped="" ref="0x7f6899456808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6899456b58"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899456ce0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6899456e68"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899455020"/>
        <function-ref name="get" scoped="" ref="0x7f68994551a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899455330"/>
        <function-ref name="set" scoped="" ref="0x7f68994554b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6899455640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f689944fa30" loc="52:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f689944fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944fd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x7f689946de68" loc="20:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x7f689946de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f68994691e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6899469370"/>
        <function-ref name="toggle" scoped="" ref="0x7f68994694f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6899469680"/>
        <function-ref name="get" scoped="" ref="0x7f6899469808"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6899469990"/>
        <function-ref name="set" scoped="" ref="0x7f6899469b18"/>
        <function-ref name="clr" scoped="" ref="0x7f6899469ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f689945d020" loc="32:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f689945d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689945d370"/>
        <function-ref name="isInput" scoped="" ref="0x7f689945d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689945d680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689945d808"/>
        <function-ref name="get" scoped="" ref="0x7f689945d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689945db18"/>
        <function-ref name="set" scoped="" ref="0x7f689945dca0"/>
        <function-ref name="clr" scoped="" ref="0x7f689945de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x7f689944ec88" loc="18:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x7f689944ec88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x7f6899449060" loc="21:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x7f6899449060"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f68994493b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x7f6899449d40" loc="23:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x7f6899449d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f68994480d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x7f689944b340" loc="19:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x7f689944b340"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x7f68994483f8" loc="24:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x7f68994483f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899448748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x7f689944b9b0" loc="20:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x7f689944b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f689944bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x7f68994496d0" loc="22:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x7f68994496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899449a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x7f6899448a68" loc="25:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x7f6899448a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899448db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x7f6899430b38" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x7f6899430b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689942f020"/>
        <function-ref name="fired" scoped="" ref="0x7f689942f1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f689942f330"/>
        <function-ref name="edge" scoped="" ref="0x7f689942f4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f689942f640"/>
        <function-ref name="getValue" scoped="" ref="0x7f689942f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x7f689943ac88" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x7f689943ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6899438020"/>
        <function-ref name="fired" scoped="" ref="0x7f68994381a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6899438330"/>
        <function-ref name="edge" scoped="" ref="0x7f68994384b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6899438640"/>
        <function-ref name="getValue" scoped="" ref="0x7f68994387c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x7f6899432b38" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x7f6899432b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6899431020"/>
        <function-ref name="fired" scoped="" ref="0x7f68994311a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6899431330"/>
        <function-ref name="edge" scoped="" ref="0x7f68994314b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6899431640"/>
        <function-ref name="getValue" scoped="" ref="0x7f68994317c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x7f689942fb38" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x7f689942fb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689942e020"/>
        <function-ref name="fired" scoped="" ref="0x7f689942e1a8"/>
        <function-ref name="disable" scoped="" ref="0x7f689942e330"/>
        <function-ref name="edge" scoped="" ref="0x7f689942e4b8"/>
        <function-ref name="enable" scoped="" ref="0x7f689942e640"/>
        <function-ref name="getValue" scoped="" ref="0x7f689942e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x7f6899438b38" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x7f6899438b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6899434020"/>
        <function-ref name="fired" scoped="" ref="0x7f68994341a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6899434330"/>
        <function-ref name="edge" scoped="" ref="0x7f68994344b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6899434640"/>
        <function-ref name="getValue" scoped="" ref="0x7f68994347c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x7f6899431b38" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x7f6899431b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6899430020"/>
        <function-ref name="fired" scoped="" ref="0x7f68994301a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6899430330"/>
        <function-ref name="edge" scoped="" ref="0x7f68994304b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6899430640"/>
        <function-ref name="getValue" scoped="" ref="0x7f68994307c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x7f6899435da0" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x7f6899435da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689943a170"/>
        <function-ref name="fired" scoped="" ref="0x7f689943a2f8"/>
        <function-ref name="disable" scoped="" ref="0x7f689943a480"/>
        <function-ref name="edge" scoped="" ref="0x7f689943a608"/>
        <function-ref name="enable" scoped="" ref="0x7f689943a790"/>
        <function-ref name="getValue" scoped="" ref="0x7f689943a918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x7f6899434b38" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x7f6899434b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6899432020"/>
        <function-ref name="fired" scoped="" ref="0x7f68994321a8"/>
        <function-ref name="disable" scoped="" ref="0x7f6899432330"/>
        <function-ref name="edge" scoped="" ref="0x7f68994324b8"/>
        <function-ref name="enable" scoped="" ref="0x7f6899432640"/>
        <function-ref name="getValue" scoped="" ref="0x7f68994327c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x7f6899427758" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x7f6899427758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899427aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x7f689942a020" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x7f689942a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f689942a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x7f6899429758" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x7f6899429758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899429aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x7f6899426020" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x7f6899426020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899426370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x7f689942a758" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x7f689942a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f689942aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x7f6899427020" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x7f6899427020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899427370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x7f6899428850" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x7f6899428850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899428ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x7f6899429020" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x7f6899429020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6899429370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f689940a258" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f689940a258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689940a5a8"/>
        <function-ref name="fired" scoped="" ref="0x7f689940a730"/>
        <function-ref name="disable" scoped="" ref="0x7f689940a8b8"/>
        <function-ref name="edge" scoped="" ref="0x7f689940aa40"/>
        <function-ref name="enable" scoped="" ref="0x7f689940abc8"/>
        <function-ref name="getValue" scoped="" ref="0x7f689940ad50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993f6060" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993f6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993f63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993f4cf8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993f4cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993f30a0"/>
        <function-ref name="fired" scoped="" ref="0x7f68993f3228"/>
        <function-ref name="disable" scoped="" ref="0x7f68993f33b0"/>
        <function-ref name="edge" scoped="" ref="0x7f68993f3538"/>
        <function-ref name="enable" scoped="" ref="0x7f68993f36c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993f3848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993f3b10" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993f3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993f3e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993f07e8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993f07e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993f0b38"/>
        <function-ref name="fired" scoped="" ref="0x7f68993f0cc0"/>
        <function-ref name="disable" scoped="" ref="0x7f68993f0e48"/>
        <function-ref name="edge" scoped="" ref="0x7f68993ee020"/>
        <function-ref name="enable" scoped="" ref="0x7f68993ee1a8"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993ee330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993ee5f8" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993ee5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993ee948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993eb3e0" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993eb3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993eb730"/>
        <function-ref name="fired" scoped="" ref="0x7f68993eb8b8"/>
        <function-ref name="disable" scoped="" ref="0x7f68993eba40"/>
        <function-ref name="edge" scoped="" ref="0x7f68993ebbc8"/>
        <function-ref name="enable" scoped="" ref="0x7f68993ebd50"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993ea2e8" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993ea2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993ea638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993e7180" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993e7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993e74d0"/>
        <function-ref name="fired" scoped="" ref="0x7f68993e7658"/>
        <function-ref name="disable" scoped="" ref="0x7f68993e77e0"/>
        <function-ref name="edge" scoped="" ref="0x7f68993e7968"/>
        <function-ref name="enable" scoped="" ref="0x7f68993e7af0"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993e7c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993e6020" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993e6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993e2020" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993e2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993e2370"/>
        <function-ref name="fired" scoped="" ref="0x7f68993e24f8"/>
        <function-ref name="disable" scoped="" ref="0x7f68993e2680"/>
        <function-ref name="edge" scoped="" ref="0x7f68993e2808"/>
        <function-ref name="enable" scoped="" ref="0x7f68993e2990"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993e2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993e2de0" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993e2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993e1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993dfcd8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993dfcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993de0a0"/>
        <function-ref name="fired" scoped="" ref="0x7f68993de228"/>
        <function-ref name="disable" scoped="" ref="0x7f68993de3b0"/>
        <function-ref name="edge" scoped="" ref="0x7f68993de538"/>
        <function-ref name="enable" scoped="" ref="0x7f68993de6c0"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993de848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993deb10" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993deb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993dee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x7f68993db9d8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x7f68993db9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993dbd28"/>
        <function-ref name="fired" scoped="" ref="0x7f68993da020"/>
        <function-ref name="disable" scoped="" ref="0x7f68993da1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f68993da330"/>
        <function-ref name="enable" scoped="" ref="0x7f68993da4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993da640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x7f68993da908" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x7f68993da908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993dac58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f68993ccb10" loc="9:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993ccb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993cce60"/>
        <function-ref name="fired" scoped="" ref="0x7f68993bf020"/>
        <function-ref name="disable" scoped="" ref="0x7f68993bf1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f68993bf330"/>
        <function-ref name="enable" scoped="" ref="0x7f68993bf4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993bf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f68993cc060" loc="8:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f68993cc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993cc3b0"/>
        <function-ref name="disable" scoped="" ref="0x7f68993cc538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f68993cc6c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f68993cc848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f68993bc2e8" loc="9:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993bc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993bc638"/>
        <function-ref name="fired" scoped="" ref="0x7f68993bc7c0"/>
        <function-ref name="disable" scoped="" ref="0x7f68993bc948"/>
        <function-ref name="edge" scoped="" ref="0x7f68993bcad0"/>
        <function-ref name="enable" scoped="" ref="0x7f68993bcc58"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993bcde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f68993bd728" loc="8:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f68993bd728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993bda78"/>
        <function-ref name="disable" scoped="" ref="0x7f68993bdc00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f68993bdd88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f68993bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f68993b8ad0" loc="9:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993b8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993b8e20"/>
        <function-ref name="fired" scoped="" ref="0x7f68993b7020"/>
        <function-ref name="disable" scoped="" ref="0x7f68993b71a8"/>
        <function-ref name="edge" scoped="" ref="0x7f68993b7330"/>
        <function-ref name="enable" scoped="" ref="0x7f68993b74b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993b7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f68993b8020" loc="8:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f68993b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993b8370"/>
        <function-ref name="disable" scoped="" ref="0x7f68993b84f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f68993b8680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f68993b8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f68993b42e8" loc="9:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f68993b42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68993b4638"/>
        <function-ref name="fired" scoped="" ref="0x7f68993b47c0"/>
        <function-ref name="disable" scoped="" ref="0x7f68993b4948"/>
        <function-ref name="edge" scoped="" ref="0x7f68993b4ad0"/>
        <function-ref name="enable" scoped="" ref="0x7f68993b4c58"/>
        <function-ref name="getValue" scoped="" ref="0x7f68993b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f68993b5728" loc="8:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="MicaBusC.Atm128GpioInterrupt3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f68993b5728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68993b5a78"/>
        <function-ref name="disable" scoped="" ref="0x7f68993b5c00"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f68993b5d88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f68993b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f68993a2350" loc="17:/home/urvi/tinyos-main/tos/sensorboards/mts300/DemoSensorC.nc">
      <component-ref qname="BlinkToRadioAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f68993a2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899148020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899148470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f68982a0020" loc="19:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoC.nc">
      <component-ref qname="BlinkToRadioAppC.Sensor.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f68982a0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68982a0b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f689829f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899394328" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/ArbitratedPhotoDeviceP.nc">
      <component-ref qname="ArbitratedPhotoDeviceP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899394328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899394e70"/>
        <function-ref name="readDone" scoped="" ref="0x7f68993932e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemp" ref="0x7f6899386020" loc="8:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemp" scoped="" ref="0x7f6899386020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899386b68"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899384020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PhotoResource" ref="0x7f689938a9b0" loc="5:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoResource" scoped="" ref="0x7f689938a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689938ad00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f689938e020"/>
        <function-ref name="request" scoped="" ref="0x7f689938e1a8"/>
        <function-ref name="granted" scoped="" ref="0x7f689938e330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689938e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TempResource" ref="0x7f689938ed70" loc="6:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x7f689938ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68993890f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6899389278"/>
        <function-ref name="request" scoped="" ref="0x7f6899389400"/>
        <function-ref name="granted" scoped="" ref="0x7f6899389588"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6899389710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPhoto" ref="0x7f68993881c8" loc="7:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempDeviceC.nc">
      <component-ref qname="PhotoTempDeviceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPhoto" scoped="" ref="0x7f68993881c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899388d10"/>
        <function-ref name="readDone" scoped="" ref="0x7f68993871c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempAdc" ref="0x7f6899380a30" loc="17:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempAdc" scoped="" ref="0x7f6899380a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x7f6899380d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x7f6899380020" loc="16:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempP.nc">
      <component-ref qname="PhotoTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899380020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f6899380370"/>
        <function-ref name="getChannel" scoped="" ref="0x7f68993804f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f6899380680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f68992fe698" loc="92:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992fe698"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68992fea08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992feb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f68992fb3c8" loc="96:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992fb3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f68992fb738"/>
        <function-ref name="configure" scoped="" ref="0x7f68992fb8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f68992fedd8" loc="93:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992fedd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992fd170"/>
        <function-ref name="requested" scoped="" ref="0x7f68992fd2f8"/>
        <function-ref name="granted" scoped="" ref="0x7f68992fd480"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992fd608"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992fd790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68992ff840" loc="91:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68992ff840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992ffbb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68992ffd38"/>
        <function-ref name="request" scoped="" ref="0x7f68992fe020"/>
        <function-ref name="granted" scoped="" ref="0x7f68992fe1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992fe330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f68992fd9d8" loc="94:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992fd9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68992fdd28"/>
        <function-ref name="userId" scoped="" ref="0x7f68992fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898293980" loc="44:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898293980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898293cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f6898292020" loc="45:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898292370"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f68982924f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898292680"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898292808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6898290d58" loc="55:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898290d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f689828e0f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f689828e278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f689828d980" loc="60:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689828d980"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f689828dcf0"/>
        <function-ref name="configure" scoped="" ref="0x7f689828de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f689828c130" loc="61:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f689828c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f689828c480"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f689828c608"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f689828c790"/>
        <function-ref name="dequeue" scoped="" ref="0x7f689828c918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f689828e4c0" loc="56:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f689828e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689828e810"/>
        <function-ref name="requested" scoped="" ref="0x7f689828e998"/>
        <function-ref name="granted" scoped="" ref="0x7f689828eb20"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689828eca8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f689828ee30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f689828cb60" loc="62:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f689828cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f689828b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f689828b1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f689828b330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f689828b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f689828b640"/>
        <function-ref name="get" scoped="" ref="0x7f689828b7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f689828b950"/>
        <function-ref name="led0On" scoped="" ref="0x7f689828a020"/>
        <function-ref name="set" scoped="" ref="0x7f689828bc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f689828bad8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f689828bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898290060" loc="54:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898290060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68982903d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898290558"/>
        <function-ref name="request" scoped="" ref="0x7f68982906e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898290868"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68982909f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f689828d0e0" loc="57:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689828d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f689828d430"/>
        <function-ref name="userId" scoped="" ref="0x7f689828d5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f689828a2e8" loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.SharingArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f689828a2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689828a638"/>
        <function-ref name="runTask" scoped="" ref="0x7f689828a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f68992f89a8" loc="92:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992f89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68992f8d18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f68992f66d8" loc="96:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992f66d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f68992f6a48"/>
        <function-ref name="configure" scoped="" ref="0x7f68992f6bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f68992f7268" loc="93:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992f75b8"/>
        <function-ref name="requested" scoped="" ref="0x7f68992f7740"/>
        <function-ref name="granted" scoped="" ref="0x7f68992f78c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992f7a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992f7bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68992f9b50" loc="91:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68992f9b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992f8020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68992f81a8"/>
        <function-ref name="request" scoped="" ref="0x7f68992f8330"/>
        <function-ref name="granted" scoped="" ref="0x7f68992f84b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992f8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f68992f7e20" loc="94:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68992f61a8"/>
        <function-ref name="userId" scoped="" ref="0x7f68992f6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898258b20" loc="44:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898258b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898258e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f6898257120" loc="45:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898257120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898257470"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f68982575f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898257780"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898257908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6898254e38" loc="55:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898254e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68982531e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898253370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6898252b08" loc="60:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898252b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6898252e78"/>
        <function-ref name="configure" scoped="" ref="0x7f6898251030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f68982512b8" loc="61:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f68982512b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898251608"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6898251790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898251918"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898251aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f68982535b8" loc="56:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68982535b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898253908"/>
        <function-ref name="requested" scoped="" ref="0x7f6898253a90"/>
        <function-ref name="granted" scoped="" ref="0x7f6898253c18"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898253da0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898252020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898251ce8" loc="62:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898251ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f68982500a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898250228"/>
        <function-ref name="led1On" scoped="" ref="0x7f68982503b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898250538"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f68982506c0"/>
        <function-ref name="get" scoped="" ref="0x7f6898250848"/>
        <function-ref name="led1Off" scoped="" ref="0x7f68982509d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f689824f020"/>
        <function-ref name="set" scoped="" ref="0x7f6898250ce0"/>
        <function-ref name="led2On" scoped="" ref="0x7f6898250b58"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898250e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898254140" loc="54:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898254140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68982544b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898254638"/>
        <function-ref name="request" scoped="" ref="0x7f68982547c0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898254948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898254ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6898252268" loc="57:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898252268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68982525b8"/>
        <function-ref name="userId" scoped="" ref="0x7f6898252740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f689824f2e8" loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f689824f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689824f638"/>
        <function-ref name="runTask" scoped="" ref="0x7f689824f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f68992f2b70" loc="92:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f68992f2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68992f1020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992f11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f68992f08a0" loc="96:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68992f08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f68992f0c10"/>
        <function-ref name="configure" scoped="" ref="0x7f68992f0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f68992f13f0" loc="93:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992f13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992f1740"/>
        <function-ref name="requested" scoped="" ref="0x7f68992f18c8"/>
        <function-ref name="granted" scoped="" ref="0x7f68992f1a50"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992f1bd8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992f1d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68992f4e38" loc="91:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68992f4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992f21e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68992f2370"/>
        <function-ref name="request" scoped="" ref="0x7f68992f24f8"/>
        <function-ref name="granted" scoped="" ref="0x7f68992f2680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992f2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f68992f0020" loc="94:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992f0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68992f0370"/>
        <function-ref name="userId" scoped="" ref="0x7f68992f04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898219570" loc="44:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898219570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68982198c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f6898219b48" loc="45:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f6898219b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898218020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f68982181a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898218330"/>
        <function-ref name="dequeue" scoped="" ref="0x7f68982184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6898216a28" loc="55:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898216a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6898216d98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898215020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f68982136f8" loc="60:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68982136f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6898213a68"/>
        <function-ref name="configure" scoped="" ref="0x7f6898213bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f6898213e78" loc="61:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f6898213e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f68982121f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6898212380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898212508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898212690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6898215268" loc="56:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6898215268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68982155b8"/>
        <function-ref name="requested" scoped="" ref="0x7f6898215740"/>
        <function-ref name="granted" scoped="" ref="0x7f68982158c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898215a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898215bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f68982128d8" loc="62:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f68982128d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6898212c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898212db0"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898211020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f68982111a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898211330"/>
        <function-ref name="get" scoped="" ref="0x7f68982114b8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898211640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898211c60"/>
        <function-ref name="set" scoped="" ref="0x7f6898211950"/>
        <function-ref name="led2On" scoped="" ref="0x7f68982117c8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898211ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898217cc8" loc="54:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898217cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68982160a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898216228"/>
        <function-ref name="request" scoped="" ref="0x7f68982163b0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898216538"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68982166c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6898215e20" loc="57:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898215e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68982131a8"/>
        <function-ref name="userId" scoped="" ref="0x7f6898213330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6898210020" loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="PhotoTempDeviceC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6898210020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898210370"/>
        <function-ref name="runTask" scoped="" ref="0x7f68982104f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f68992ecd50" loc="69:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f68992ecd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68992bc0d8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68992bc260"/>
        <function-ref name="start" scoped="" ref="0x7f68992bc3e8"/>
        <function-ref name="stop" scoped="" ref="0x7f68992bc570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f68992bc7b8" loc="71:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68992bc7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f68992bcb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f68992bcd50" loc="72:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992bcd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992bb0d8"/>
        <function-ref name="requested" scoped="" ref="0x7f68992bb260"/>
        <function-ref name="granted" scoped="" ref="0x7f68992bb3e8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992bb570"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992bb6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f68992bb940" loc="73:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992bb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68992bbc90"/>
        <function-ref name="userId" scoped="" ref="0x7f68992bbe18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f68981df740" loc="61:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f68981df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68981dfa90"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68981dfc18"/>
        <function-ref name="start" scoped="" ref="0x7f68981dfda0"/>
        <function-ref name="stop" scoped="" ref="0x7f68981de020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f68981de268" loc="63:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68981de268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f68981de5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f68981ddb90" loc="78:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f68981ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68981dc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f68981dc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f68981de800" loc="64:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68981de800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68981deb50"/>
        <function-ref name="requested" scoped="" ref="0x7f68981decd8"/>
        <function-ref name="granted" scoped="" ref="0x7f68981dee60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68981dd020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68981dd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f68981dc470" loc="73:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f68981dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68981dc7c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f68981dc948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f68981df020" loc="60:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f68981df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f68981df370"/>
        <function-ref name="stop" scoped="" ref="0x7f68981df4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f68981dd3f0" loc="65:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68981dd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68981dd740"/>
        <function-ref name="userId" scoped="" ref="0x7f68981dd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f68992b96d8" loc="69:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f68992b96d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68992b9a28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68992b9bb0"/>
        <function-ref name="start" scoped="" ref="0x7f68992b9d38"/>
        <function-ref name="stop" scoped="" ref="0x7f68992b8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f68992b8268" loc="71:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68992b8268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f68992b85b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f68992b8800" loc="72:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68992b8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68992b8b50"/>
        <function-ref name="requested" scoped="" ref="0x7f68992b8cd8"/>
        <function-ref name="granted" scoped="" ref="0x7f68992b8e60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68992b7020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68992b71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f68992b73f0" loc="73:/home/urvi/tinyos-main/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68992b73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68992b7740"/>
        <function-ref name="userId" scoped="" ref="0x7f68992b78c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f68981c9ad8" loc="61:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f68981c9ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68981c9e28"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68981c8020"/>
        <function-ref name="start" scoped="" ref="0x7f68981c81a8"/>
        <function-ref name="stop" scoped="" ref="0x7f68981c8330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f68981c8578" loc="63:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68981c8578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f68981c88c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f68981c5020" loc="78:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x7f68981c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68981c5370"/>
        <function-ref name="runTask" scoped="" ref="0x7f68981c54f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f68981c8b10" loc="64:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68981c8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68981c8e60"/>
        <function-ref name="requested" scoped="" ref="0x7f68981c6020"/>
        <function-ref name="granted" scoped="" ref="0x7f68981c61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68981c6330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68981c64b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f68981c57c0" loc="73:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x7f68981c57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68981c5b10"/>
        <function-ref name="runTask" scoped="" ref="0x7f68981c5c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f68981c93b8" loc="60:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f68981c93b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f68981c9708"/>
        <function-ref name="stop" scoped="" ref="0x7f68981c9890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f68981c6700" loc="65:/home/urvi/tinyos-main/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="PhotoTempDeviceC.TempPower.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68981c6700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68981c6a50"/>
        <function-ref name="userId" scoped="" ref="0x7f68981c6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6899296bc0" loc="4:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6899296bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6899295020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68992951a8"/>
        <function-ref name="start" scoped="" ref="0x7f6899295330"/>
        <function-ref name="stop" scoped="" ref="0x7f68992954b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f6899292020" loc="8:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f6899292020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6899292370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68992924f8"/>
        <function-ref name="request" scoped="" ref="0x7f6899292680"/>
        <function-ref name="granted" scoped="" ref="0x7f6899292808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6899292990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899295928" loc="5:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899295928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899293528"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899293998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f689928a5f8" loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f689928a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689928a948"/>
        <function-ref name="runTask" scoped="" ref="0x7f689928aad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f689928dd40" loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f689928dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689928c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f689928c260"/>
        <function-ref name="toggle" scoped="" ref="0x7f689928c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689928c570"/>
        <function-ref name="get" scoped="" ref="0x7f689928c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689928c880"/>
        <function-ref name="set" scoped="" ref="0x7f689928ca08"/>
        <function-ref name="clr" scoped="" ref="0x7f689928cb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f689928b020" loc="11:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f689928b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689928bb68"/>
        <function-ref name="readDone" scoped="" ref="0x7f689928a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6899292ce0" loc="9:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.PhotoControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6899292ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689928d088"/>
        <function-ref name="fired" scoped="" ref="0x7f6899290688"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f689928f470"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f689928f020"/>
        <function-ref name="getdt" scoped="" ref="0x7f689928d928"/>
        <function-ref name="gett0" scoped="" ref="0x7f689928d4d8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899290ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68992918b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689928fa40"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899291d58"/>
        <function-ref name="stop" scoped="" ref="0x7f6899290238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6899288e70" loc="4:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6899288e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68992861e8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6899286370"/>
        <function-ref name="start" scoped="" ref="0x7f68992864f8"/>
        <function-ref name="stop" scoped="" ref="0x7f6899286680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PhotoTempResource" ref="0x7f68992841c0" loc="8:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PhotoTempResource" scoped="" ref="0x7f68992841c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6899284510"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6899284698"/>
        <function-ref name="request" scoped="" ref="0x7f6899284820"/>
        <function-ref name="granted" scoped="" ref="0x7f68992849a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6899284b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899286af0" loc="5:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899286af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68992856f0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899285b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone" ref="0x7f689927c7d0" loc="32:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone" scoped="" ref="0x7f689927c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689927cb20"/>
        <function-ref name="runTask" scoped="" ref="0x7f689927cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x7f689927e020" loc="10:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x7f689927e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689927e370"/>
        <function-ref name="isInput" scoped="" ref="0x7f689927e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f689927e680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f689927e808"/>
        <function-ref name="get" scoped="" ref="0x7f689927e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f689927eb18"/>
        <function-ref name="set" scoped="" ref="0x7f689927eca0"/>
        <function-ref name="clr" scoped="" ref="0x7f689927ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x7f689927d228" loc="11:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x7f689927d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689927dd70"/>
        <function-ref name="readDone" scoped="" ref="0x7f689927c1f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6899284e80" loc="9:/home/urvi/tinyos-main/tos/sensorboards/mts300/PhotoTempControlP.nc">
      <component-ref qname="PhotoTempDeviceC.TempControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6899284e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689927f238"/>
        <function-ref name="fired" scoped="" ref="0x7f6899282910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6899280648"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f68992801f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f689927fad8"/>
        <function-ref name="gett0" scoped="" ref="0x7f689927f688"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899282d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68992839f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6899280c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f6899282020"/>
        <function-ref name="stop" scoped="" ref="0x7f68992824c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f68992780a0" loc="45:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="PhotoTempDeviceC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f68992780a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68992752b8"/>
        <function-ref name="fired" scoped="" ref="0x7f68992779b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f68992766c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6899276278"/>
        <function-ref name="getdt" scoped="" ref="0x7f6899275b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f6899275708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899277e00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6899278be8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f6899276c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f68992770c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6899277560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6899160cc8" loc="25:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6899160cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f689915f0a0"/>
        <function-ref name="configure" scoped="" ref="0x7f689915f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899271e30" loc="22:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899271e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68991629e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899162e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f6899160420" loc="24:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="PhotoTempDeviceC.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899160420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f6899160770"/>
        <function-ref name="getChannel" scoped="" ref="0x7f68991608f8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f6899160a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f689926dc90" loc="18:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f689926dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689926a820"/>
        <function-ref name="readDone" scoped="" ref="0x7f689926ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f6899264a00" loc="19:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f6899264a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68992675b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899267a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f6899266670" loc="22:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f6899266670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f68992669c0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6899266b48"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f6899266cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f68992624c0" loc="23:/home/urvi/tinyos-main/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68992624c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6899262810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6899262998"/>
        <function-ref name="request" scoped="" ref="0x7f6899262b20"/>
        <function-ref name="granted" scoped="" ref="0x7f6899262ca8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6899262e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f689925d890" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689925d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f689925dbe0"/>
        <function-ref name="configure" scoped="" ref="0x7f689925dd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f68992529b0" loc="56:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f68992529b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6899252d00"/>
        <function-ref name="dataReady" scoped="" ref="0x7f689925d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f68992570d0" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f68992570d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f6899257420"/>
        <function-ref name="cancel" scoped="" ref="0x7f68992575a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6899257730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f689925e020" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f689925e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689925e370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f689925e4f8"/>
        <function-ref name="request" scoped="" ref="0x7f689925e680"/>
        <function-ref name="granted" scoped="" ref="0x7f689925e808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689925e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689925cd48" loc="85:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689925cd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689924f0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x7f689924ede0" loc="88:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x7f689924ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f689924d170"/>
        <function-ref name="dataReady" scoped="" ref="0x7f689924d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x7f689924e488" loc="87:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f689924e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f689924e7d8"/>
        <function-ref name="cancel" scoped="" ref="0x7f689924e960"/>
        <function-ref name="dataReady" scoped="" ref="0x7f689924eae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x7f689923d940" loc="91:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f689923d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f689923dc90"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f689923de18"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f689924b020"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f689924b1a8"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f689924b330"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f689924b4b8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f689924b640"/>
        <function-ref name="isComplete" scoped="" ref="0x7f689924b7c8"/>
        <function-ref name="cancel" scoped="" ref="0x7f689924b950"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f689924bad8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f689924bc60"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f689924bde8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f689924a020"/>
        <function-ref name="isStarted" scoped="" ref="0x7f689924a2a8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f689924a430"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f689924a5b8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f689924a740"/>
        <function-ref name="getValue" scoped="" ref="0x7f689924a8c8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f689924aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f689924cc10" loc="86:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f689924cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f689924e020"/>
        <function-ref name="stop" scoped="" ref="0x7f689924e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x7f689924ad30" loc="92:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7f689924ad30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7f689923c0d8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7f689923c260"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7f689923c3e8"/>
        <function-ref name="actualMicro" scoped="" ref="0x7f689923c570"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7f689923c6f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f689920b020" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f689920b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f689920b370"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f689920b4f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f689920b680"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f689920b808"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f689920b990"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f689920bb18"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f689920bca0"/>
        <function-ref name="isComplete" scoped="" ref="0x7f689920be28"/>
        <function-ref name="cancel" scoped="" ref="0x7f689920a020"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f689920a1a8"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f689920a330"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f689920a4b8"/>
        <function-ref name="startConversion" scoped="" ref="0x7f689920a640"/>
        <function-ref name="isStarted" scoped="" ref="0x7f689920a8c8"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f689920aa50"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f689920abd8"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f689920ad60"/>
        <function-ref name="getValue" scoped="" ref="0x7f6899209020"/>
        <function-ref name="dataReady" scoped="" ref="0x7f68992091a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x7f68992061e8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x7f68992061e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x7f6899206538"/>
        <function-ref name="getAdmux" scoped="" ref="0x7f68992066c0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x7f6899206848"/>
        <function-ref name="isEnabled" scoped="" ref="0x7f68992069d0"/>
        <function-ref name="enableAdc" scoped="" ref="0x7f6899206b58"/>
        <function-ref name="setAdmux" scoped="" ref="0x7f6899206ce0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x7f6899206e68"/>
        <function-ref name="isComplete" scoped="" ref="0x7f6899205020"/>
        <function-ref name="cancel" scoped="" ref="0x7f68992051a8"/>
        <function-ref name="disableAdc" scoped="" ref="0x7f6899205330"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x7f68992054b8"/>
        <function-ref name="disableInterruption" scoped="" ref="0x7f6899205640"/>
        <function-ref name="startConversion" scoped="" ref="0x7f68992057c8"/>
        <function-ref name="isStarted" scoped="" ref="0x7f6899205a50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x7f6899205bd8"/>
        <function-ref name="setContinuous" scoped="" ref="0x7f6899205d60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x7f6899204020"/>
        <function-ref name="getValue" scoped="" ref="0x7f68992041a8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6899204330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f6899204640" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6899204640"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6899204990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f68991d0af8" loc="92:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f68991d0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68991d0e68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68991cf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f68991ce6d8" loc="96:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f68991ce6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f68991cea48"/>
        <function-ref name="configure" scoped="" ref="0x7f68991cebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f68991cf268" loc="93:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991cf268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68991cf5b8"/>
        <function-ref name="requested" scoped="" ref="0x7f68991cf740"/>
        <function-ref name="granted" scoped="" ref="0x7f68991cf8c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68991cfa50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68991cfbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68991d1d88" loc="91:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68991d1d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68991d0170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68991d02f8"/>
        <function-ref name="request" scoped="" ref="0x7f68991d0480"/>
        <function-ref name="granted" scoped="" ref="0x7f68991d0608"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68991d0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f68991cfe20" loc="94:/home/urvi/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68991cfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68991ce1a8"/>
        <function-ref name="userId" scoped="" ref="0x7f68991ce330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898189020" loc="44:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898189020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898189370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f68981895f8" loc="45:/home/urvi/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f68981895f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898189948"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6898189ad0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898189c58"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898189de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6898186388" loc="55:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898186388"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f68981866f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898186880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6898184020" loc="60:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898184020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6898184390"/>
        <function-ref name="configure" scoped="" ref="0x7f6898184518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f68981847a0" loc="61:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f68981847a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f6898184af0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6898184c78"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898184e00"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898182020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f6898186ac8" loc="56:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f6898186ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898186e18"/>
        <function-ref name="requested" scoped="" ref="0x7f6898185020"/>
        <function-ref name="granted" scoped="" ref="0x7f68981851a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898185330"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68981854b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898182268" loc="62:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898182268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f68981825b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898182740"/>
        <function-ref name="led1On" scoped="" ref="0x7f68981828c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898182a50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898182bd8"/>
        <function-ref name="get" scoped="" ref="0x7f6898182d60"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898181020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898181640"/>
        <function-ref name="set" scoped="" ref="0x7f6898181330"/>
        <function-ref name="led2On" scoped="" ref="0x7f68981811a8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f68981814b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898187630" loc="54:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898187630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68981879a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898187b28"/>
        <function-ref name="request" scoped="" ref="0x7f6898187cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898187e38"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898186020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6898185700" loc="57:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898185700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6898185a50"/>
        <function-ref name="userId" scoped="" ref="0x7f6898185bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f6898181908" loc="75:/home/urvi/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f6898181908"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898181c58"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898181de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f68991cbb98" loc="72:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f68991cbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f68991b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f68991b5268" loc="73:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f68991b5268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68991b55b8"/>
        <function-ref name="requested" scoped="" ref="0x7f68991b5740"/>
        <function-ref name="granted" scoped="" ref="0x7f68991b58c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68991b5a50"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f68991b5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f68991cb478" loc="70:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f68991cb478"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f68991cb7c8"/>
        <function-ref name="stop" scoped="" ref="0x7f68991cb950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f68991b5e20" loc="74:/home/urvi/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f68991b5e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f68991b41a8"/>
        <function-ref name="userId" scoped="" ref="0x7f68991b4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f6898150d20" loc="62:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f6898150d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f689814f0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f689814f2e8" loc="63:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f689814f2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689814f638"/>
        <function-ref name="requested" scoped="" ref="0x7f689814f7c0"/>
        <function-ref name="granted" scoped="" ref="0x7f689814f948"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689814fad0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f689814fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x7f6898150600" loc="60:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6898150600"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6898150950"/>
        <function-ref name="stop" scoped="" ref="0x7f6898150ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f689814e020" loc="64:/home/urvi/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689814e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f689814e370"/>
        <function-ref name="userId" scoped="" ref="0x7f689814e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f68991adc68" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f68991adc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68991ac7e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f68991acc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f68991aa880" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x7f68991aa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68991a9490"/>
        <function-ref name="readDone" scoped="" ref="0x7f68991a9918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x7f68991a8e78" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x7f68991a8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x7f68991a71f8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f68991a7380"/>
        <function-ref name="getPrescaler" scoped="" ref="0x7f68991a7508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x7f68991a8020" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x7f68991a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f68991a8370"/>
        <function-ref name="cancel" scoped="" ref="0x7f68991a84f8"/>
        <function-ref name="dataReady" scoped="" ref="0x7f68991a8680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x7f6899197bf8" loc="103:/home/urvi/tinyos-main/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x7f6899197bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6899196020"/>
        <function-ref name="runTask" scoped="" ref="0x7f68991961a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899183680" loc="24:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899183680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689916c370"/>
        <function-ref name="readDone" scoped="" ref="0x7f689916c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f689916a060" loc="26:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f689916a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689916abc8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6899169088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f6899169720" loc="27:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6899169720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6899169a90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6899169c18"/>
        <function-ref name="request" scoped="" ref="0x7f6899169da0"/>
        <function-ref name="granted" scoped="" ref="0x7f6899168020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68991681a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f6899151020" loc="24:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x7f6899151020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6899151b88"/>
        <function-ref name="readDone" scoped="" ref="0x7f689914f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f689914f860" loc="26:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x7f689914f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689914e458"/>
        <function-ref name="readDone" scoped="" ref="0x7f689914e8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f689914c020" loc="27:/home/urvi/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="ArbitratedPhotoDeviceP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f689914c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689914c390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f689914c518"/>
        <function-ref name="request" scoped="" ref="0x7f689914c6a0"/>
        <function-ref name="granted" scoped="" ref="0x7f689914c828"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689914c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7f68991434a8" loc="8:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7f68991434a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689913f6c8"/>
        <function-ref name="fired" scoped="" ref="0x7f6899142db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f6899141ad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f6899141688"/>
        <function-ref name="getdt" scoped="" ref="0x7f689913e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f689913fb18"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6899141238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f6899142020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689913f0f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f68991424c0"/>
        <function-ref name="stop" scoped="" ref="0x7f6899142960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f68990e83e8" loc="13:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x7f68990e83e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68990e8738"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68990e88c0"/>
        <function-ref name="start" scoped="" ref="0x7f68990e8a48"/>
        <function-ref name="stop" scoped="" ref="0x7f68990e8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f6899147650" loc="6:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7f6899147650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f68991479a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f68990e7408" loc="10:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f68990e7408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68990e7758"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68990e78e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68990e7a68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68990e7bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68990e7d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mts300Sounder" ref="0x7f68990d6020" loc="15:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mts300Sounder" scoped="" ref="0x7f68990d6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mts300Sounder"/>
      </instance>
      <interface-functions>
        <function-ref name="beep" scoped="" ref="0x7f68990d6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f68990d1948" loc="14:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68990d1948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68990d1c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6899147c58" loc="7:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6899147c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6899144020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f68991441a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6899144330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f68991444b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6899144640"/>
        <function-ref name="get" scoped="" ref="0x7f68991447c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6899144950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6899143020"/>
        <function-ref name="set" scoped="" ref="0x7f6899144ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6899144c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6899144de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f68990d7b58" loc="11:BlinkToRadioC.nc">
      <component-ref qname="BlinkToRadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f68990d7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f689913c020"/>
        <function-ref name="source" scoped="" ref="0x7f689913c1a8"/>
        <function-ref name="address" scoped="" ref="0x7f689913c330"/>
        <function-ref name="destination" scoped="" ref="0x7f689913c4b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f689913c640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f689913c7c8"/>
        <function-ref name="type" scoped="" ref="0x7f689913c950"/>
        <function-ref name="setType" scoped="" ref="0x7f689913cad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f689913cc60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f689913cde8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f68990e8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f68990c5020" loc="45:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkToRadioAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f68990c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68990c22b8"/>
        <function-ref name="fired" scoped="" ref="0x7f68990c4978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f68990c36c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f68990c3278"/>
        <function-ref name="getdt" scoped="" ref="0x7f68990c2b58"/>
        <function-ref name="gett0" scoped="" ref="0x7f68990c2708"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68990c4dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f68990c5b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f68990c3c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f68990c4088"/>
        <function-ref name="stop" scoped="" ref="0x7f68990c4528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f68990bd248" loc="55:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f68990bd248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68990bd598"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68990bd720"/>
        <function-ref name="start" scoped="" ref="0x7f68990bd8a8"/>
        <function-ref name="stop" scoped="" ref="0x7f68990bda30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f68990b1788" loc="57:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f68990b1788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68990b1ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68990b1c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68990b1de8"/>
        <function-ref name="cancel" scoped="" ref="0x7f68990bc020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68990bc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f68990bb498" loc="59:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f68990bb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68990bb7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f68990bba70" loc="61:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f68990bba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68990bbdc0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68990b3020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68990b31a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68990b3330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68990b34b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f689909f5e8" loc="64:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f689909f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f68990aca88"/>
        <function-ref name="clear" scoped="" ref="0x7f68990a0190"/>
        <function-ref name="isValid" scoped="" ref="0x7f68990ac3a8"/>
        <function-ref name="set" scoped="" ref="0x7f68990a0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6899094b98" loc="66:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6899094b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6899099020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f68990991a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6899099330"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f68990994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f68990bc928" loc="58:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68990bc928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68990bcc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f68990a8998" loc="63:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f68990a8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f68990a8ce8"/>
        <function-ref name="noAck" scoped="" ref="0x7f68990a8e70"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f68990ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f68990b3758" loc="62:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f68990b3758"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f68990b3aa8"/>
        <function-ref name="source" scoped="" ref="0x7f68990b3c30"/>
        <function-ref name="address" scoped="" ref="0x7f68990b3db8"/>
        <function-ref name="destination" scoped="" ref="0x7f68990b0020"/>
        <function-ref name="setSource" scoped="" ref="0x7f68990b01a8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f68990b0330"/>
        <function-ref name="type" scoped="" ref="0x7f68990b04b8"/>
        <function-ref name="setType" scoped="" ref="0x7f68990b0640"/>
        <function-ref name="isForMe" scoped="" ref="0x7f68990b07c8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f68990b0950"/>
        <function-ref name="localGroup" scoped="" ref="0x7f68990b0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f689909e478" loc="65:/home/urvi/tinyos-main/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f689909e478"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f689909c900"/>
        <function-ref name="clear" scoped="" ref="0x7f689909b020"/>
        <function-ref name="isValid" scoped="" ref="0x7f689909c220"/>
        <function-ref name="set" scoped="" ref="0x7f689909b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6899083818" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6899083818"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6899083b68"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6899083cf0"/>
        <function-ref name="start" scoped="" ref="0x7f6899083e78"/>
        <function-ref name="stop" scoped="" ref="0x7f6899082030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6899069b48" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6899069b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6899072020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f68990721a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6899072330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f68990724b8"/>
        <function-ref name="setCca" scoped="" ref="0x7f6899072640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f68990727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f689905d658" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f689905d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f689905daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f689907d0c0" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f689907d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689907d410"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f689907d598"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689907d720"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689907d8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f689907da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f68990827a8" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f68990827a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6899082af8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6899082c80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6899082e08"/>
        <function-ref name="cancel" scoped="" ref="0x7f6899080020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68990801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f689907f498" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f689907f498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689907f7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f6899075e18" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6899075e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f689907c1a8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f689907c330"/>
        <function-ref name="getRssi" scoped="" ref="0x7f689907c4b8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f689907c640"/>
        <function-ref name="getPower" scoped="" ref="0x7f689907c7c8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f689907c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6899072ac0" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6899072ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6899072e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f6899070020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f68990701a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6899070330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6899080928" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6899080928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6899080c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f689907cc78" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689907cc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f689907b020"/>
        <function-ref name="noAck" scoped="" ref="0x7f689907b1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f689907b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f6899061a98" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f6899061a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6899061de8"/>
        <function-ref name="setRetries" scoped="" ref="0x7f6899068020"/>
        <function-ref name="getRetries" scoped="" ref="0x7f68990681a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6899068330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f68990684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f689907fa88" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f689907fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f689907fdd8"/>
        <function-ref name="source" scoped="" ref="0x7f689907e020"/>
        <function-ref name="address" scoped="" ref="0x7f689907e1a8"/>
        <function-ref name="destination" scoped="" ref="0x7f689907e330"/>
        <function-ref name="setSource" scoped="" ref="0x7f689907e4b8"/>
        <function-ref name="setDestination" scoped="" ref="0x7f689907e640"/>
        <function-ref name="type" scoped="" ref="0x7f689907e7c8"/>
        <function-ref name="setType" scoped="" ref="0x7f689907e950"/>
        <function-ref name="isForMe" scoped="" ref="0x7f689907ead8"/>
        <function-ref name="setGroup" scoped="" ref="0x7f689907ec60"/>
        <function-ref name="localGroup" scoped="" ref="0x7f689907ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f6899071ca8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f6899071ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f6899073020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f689905a3a0" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f689905a3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f689905a6f0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f689905a878"/>
        <function-ref name="start" scoped="" ref="0x7f689905aa00"/>
        <function-ref name="stop" scoped="" ref="0x7f689905ab88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f689904b020" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f689904b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f689904b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f689904a128" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f689904a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f689904a478"/>
        <function-ref name="setRetries" scoped="" ref="0x7f689904a600"/>
        <function-ref name="getRetries" scoped="" ref="0x7f689904a788"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f689904a910"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f689904aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f689904e7e8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f689904e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f689904eb38"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f689904ecc0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f689904ee48"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f689904c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f689904c1a8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f689904c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f68990564c8" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f68990564c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6899056818"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68990569a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6899056b28"/>
        <function-ref name="cancel" scoped="" ref="0x7f6899056cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6899056e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f689904b668" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f689904b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f689904b9b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f689904bb40"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f689904bcc8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f689904be50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f6899057020" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f6899057020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6899057370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f689904c658" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689904c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f689904c9a8"/>
        <function-ref name="noAck" scoped="" ref="0x7f689904cb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f689904ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6899059388" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6899059388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68990596d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6899059860"/>
        <function-ref name="request" scoped="" ref="0x7f68990599e8"/>
        <function-ref name="granted" scoped="" ref="0x7f6899059b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6899059cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f689904d330" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f689904d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f689904d680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689904d808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689904d990"/>
        <function-ref name="cancel" scoped="" ref="0x7f689904db18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f689904dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f68990576a0" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f68990576a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68990579f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f6899057b78"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6899057d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6899056020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68990561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f689904e1d0" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f689904e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689904e520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6899048778" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6899048778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6899048ac8"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6899048c50"/>
        <function-ref name="start" scoped="" ref="0x7f6899048dd8"/>
        <function-ref name="stop" scoped="" ref="0x7f6899045020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6899044678" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6899044678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f68990449c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6899044b50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6899044cd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6899044e60"/>
        <function-ref name="setCca" scoped="" ref="0x7f6899043020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f68990431a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f68990452d8" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f68990452d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6899045628"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68990457b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6899045938"/>
        <function-ref name="cancel" scoped="" ref="0x7f6899045ac0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6899045c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6899044020" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6899044020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6899044370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6899040140" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6899040140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6899040490"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6899040618"/>
        <function-ref name="start" scoped="" ref="0x7f68990407a0"/>
        <function-ref name="stop" scoped="" ref="0x7f6899040928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f689903f948" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f689903f948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f689903fc98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f689903fe20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f689903e020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f689903e1a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f689903e330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f689903e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f6899034208" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f6899034208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6899034558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f68990346e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6899034868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f68990349f0"/>
        <function-ref name="setCca" scoped="" ref="0x7f6899034b78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6899034d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f689902a328" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f689902a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f689902a678"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f689902a800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f689902a988"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f689902ab10"/>
        <function-ref name="getPower" scoped="" ref="0x7f689902ac98"/>
        <function-ref name="getLqi" scoped="" ref="0x7f689902ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f689902d4b8" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f689902d4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f689902d808"/>
        <function-ref name="cancel" scoped="" ref="0x7f689902d990"/>
        <function-ref name="modify" scoped="" ref="0x7f689902db18"/>
        <function-ref name="sendDone" scoped="" ref="0x7f689902dca0"/>
        <function-ref name="resend" scoped="" ref="0x7f689902de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6899040be0" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6899040be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f689903f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689903f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689903f330"/>
        <function-ref name="cancel" scoped="" ref="0x7f689903f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f689903f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f6899029508" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f6899029508"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6899029858"/>
        <function-ref name="rand32" scoped="" ref="0x7f68990299e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f689903cce8" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f689903cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f689903a0a0"/>
        <function-ref name="stop" scoped="" ref="0x7f689903a228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f68990225f0" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68990225f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6899022940"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6899022ac8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6899022c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f6899035a78" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f6899035a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6899035dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x7f689903c020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f689903c1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7f689903c330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f689903c4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f689903c640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f689903c7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f689903c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6899029c98" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6899029c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f689902b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f689902b1a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f689902b330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f689902b4b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f689902b640"/>
        <function-ref name="get" scoped="" ref="0x7f689902b7c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f689902b950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f689902a020"/>
        <function-ref name="set" scoped="" ref="0x7f689902bad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f689902bc60"/>
        <function-ref name="led2On" scoped="" ref="0x7f689902bde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f689903e798" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f689903e798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689903eae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f689903ec70"/>
        <function-ref name="request" scoped="" ref="0x7f689903edf8"/>
        <function-ref name="granted" scoped="" ref="0x7f689903d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689903d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f689901d8b8" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x7f689901d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f689901dd08"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6899026020"/>
        <function-ref name="isState" scoped="" ref="0x7f68990261a8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6899026330"/>
        <function-ref name="requestState" scoped="" ref="0x7f68990264b8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6899026640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f6899018100" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x7f6899018100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6899018450"/>
        <function-ref name="runTask" scoped="" ref="0x7f68990185d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f6899019298" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x7f6899019298"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f68990195e8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6899019770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f689901b350" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x7f689901b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689901b6a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f689901b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6898fc5ce0" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fc5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6898fd00a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6898fd0228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6898fd03b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6898fd0538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6898fd06c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6898fd0848"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6898fd09d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6898fd0b58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6898fd0ce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6898fd0e68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6898fcf020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6898fcf1a8"/>
        <function-ref name="sync" scoped="" ref="0x7f6898fcf330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6898fcf5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6898fcf740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6898fc3e00" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f6898fc3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fc29e0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898fc2e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6898fcfa38" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f6898fcfa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6898fcfd88"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6898fc3020"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6898fc31a8"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6898fc3330"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6898fc34b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6898fc3640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6898fc37c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6898fc3950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898fd21d8" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898fd21d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898fd2528"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898fd26b0"/>
        <function-ref name="request" scoped="" ref="0x7f6898fd2838"/>
        <function-ref name="granted" scoped="" ref="0x7f6898fd29c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898fd2b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f6898fbd4b0" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f6898fbd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6898fbd800"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6898fbd988"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f6898fbdb10"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6898fbdc98"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f6898fbde20"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6898fbc020"/>
        <function-ref name="setChannel" scoped="" ref="0x7f6898fbc1a8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6898fbc330"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6898fbc4b8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6898fbc640"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6898fbc7c8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6898fbc950"/>
        <function-ref name="sync" scoped="" ref="0x7f6898fbcad8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6898fbcd60"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f6898fbb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f6898fa0898" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898fa0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa0be8"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f6898fb5998" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6898fb5998"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6898fb5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f6898fb7370" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x7f6898fb7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6898fb4ab0"/>
        <function-ref name="fired" scoped="" ref="0x7f6898fb6a58"/>
        <function-ref name="startAt" scoped="" ref="0x7f6898fb44a8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6898fb4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6898fb2020"/>
        <function-ref name="start" scoped="" ref="0x7f6898fb60f8"/>
        <function-ref name="stop" scoped="" ref="0x7f6898fb65d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f6898fa36e0" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898fa36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa3a30"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa3bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f6898fb1688" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f6898fb1688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898fb19d8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898fb1b60"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898fb1ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898fb1e70"/>
        <function-ref name="get" scoped="" ref="0x7f6898fb0020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898fb01a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898fb0330"/>
        <function-ref name="clr" scoped="" ref="0x7f6898fb04b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f6898fba658" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x7f6898fba658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fb91e8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898fb9638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f6898f8e0c0" loc="126:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x7f6898f8e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898f8e410"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898f8e598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f6898f9f130" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f6898f9f130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898f9f480"/>
        <function-ref name="write" scoped="" ref="0x7f6898f9f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6898f9f9a0" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f6898f9f9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898f9fcf0"/>
        <function-ref name="write" scoped="" ref="0x7f6898f9fe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f6898fa45c0" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f6898fa45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa4910"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa4a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f6898fad020" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6898fad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6898fad370"/>
        <function-ref name="changed" scoped="" ref="0x7f6898fad4f8"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6898fad680"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6898fad808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6898fb24f8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f6898fb24f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898fb2848"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898fb29d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898fb2b58"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898fb2ce0"/>
        <function-ref name="get" scoped="" ref="0x7f6898fb2e68"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898fb1020"/>
        <function-ref name="set" scoped="" ref="0x7f6898fb11a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898fb1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f6898f9de80" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898f9de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898f9c3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f6898fb0810" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f6898fb0810"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898fb0b60"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898fb0ce8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898fb0e70"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898faf020"/>
        <function-ref name="get" scoped="" ref="0x7f6898faf1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898faf330"/>
        <function-ref name="set" scoped="" ref="0x7f6898faf4b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898faf640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898fbe198" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898fbe198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898fbe4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6898fa0020" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898fa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa0370"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa04f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f6898f9c788" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f6898f9c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898f9cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6898f9ce68" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6898f9ce68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898f9b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898f9b370"/>
        <function-ref name="request" scoped="" ref="0x7f6898f9b4f8"/>
        <function-ref name="granted" scoped="" ref="0x7f6898f9b680"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898f9b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f6898f999e0" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x7f6898f999e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898f99d30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898f98020"/>
        <function-ref name="request" scoped="" ref="0x7f6898f981a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6898f98330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898f984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f6898fbb318" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x7f6898fbb318"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f6898fbb668"/>
        <function-ref name="rfOff" scoped="" ref="0x7f6898fbb7f0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f6898fbb978"/>
        <function-ref name="startVReg" scoped="" ref="0x7f6898fbbb00"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f6898fbbc88"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f6898fbbe10"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f6898fba020"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f6898fba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f6898fa4e30" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898fa4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa31a8"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa3330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f6898fa1cd8" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f6898fa1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fa40a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898fa4228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f6898f9d0b8" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898f9d0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898f9d408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898f98770" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898f98770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6898f98ac0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898f98c48"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898f98dd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898f97020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898f971a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898f97330"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898f974b8"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898f97ad8"/>
        <function-ref name="set" scoped="" ref="0x7f6898f97640"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898f977c8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6898f97950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f6898f8f290" loc="125:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x7f6898f8f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898f8f5e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898f8f768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898fbe7c8" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898fbe7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898fbeb18"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898fbeca0"/>
        <function-ref name="request" scoped="" ref="0x7f6898fbee28"/>
        <function-ref name="granted" scoped="" ref="0x7f6898fbd020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898fbd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f6898fac7d0" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f6898fac7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898facb20"/>
        <function-ref name="write" scoped="" ref="0x7f6898facca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f6898fa5e08" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898fa5e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898fac2e8"/>
        <function-ref name="write" scoped="" ref="0x7f6898fac470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f6898fafa10" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6898fafa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6898fafd60"/>
        <function-ref name="disable" scoped="" ref="0x7f6898fae020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6898fae1a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898fae330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f6898f9bba8" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x7f6898f9bba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898f99020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898f991a8"/>
        <function-ref name="request" scoped="" ref="0x7f6898f99330"/>
        <function-ref name="granted" scoped="" ref="0x7f6898f994b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898f99640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f6898f9d790" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f6898f9d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898f9dae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898f1a3e0" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898f1a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898f1a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f6898f1ad58" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f6898f1ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6898f16410"/>
        <function-ref name="fired" scoped="" ref="0x7f6898f184a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6898f18db8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6898f18930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6898f16898"/>
        <function-ref name="start" scoped="" ref="0x7f6898f19af8"/>
        <function-ref name="stop" scoped="" ref="0x7f6898f18020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6898f139e8" loc="86:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6898f139e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6898d5f088"/>
        <function-ref name="fired" scoped="" ref="0x7f6898d630f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6898d63a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6898d63580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6898d5f510"/>
        <function-ref name="start" scoped="" ref="0x7f6898d64768"/>
        <function-ref name="stop" scoped="" ref="0x7f6898d64c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898d5f928" loc="87:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898d5f928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898d5fc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f6898119498" loc="28:/home/urvi/tinyos-main/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f6898119498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6898106b18"/>
        <function-ref name="fired" scoped="" ref="0x7f6898118b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f6898106510"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6898106088"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6898104020"/>
        <function-ref name="start" scoped="" ref="0x7f6898118220"/>
        <function-ref name="stop" scoped="" ref="0x7f68981186f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f68981028b8" loc="30:/home/urvi/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f68981028b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68980fe020"/>
        <function-ref name="fired" scoped="" ref="0x7f68980ff020"/>
        <function-ref name="startAt" scoped="" ref="0x7f68980ff930"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68980ff4a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68980fe4a8"/>
        <function-ref name="start" scoped="" ref="0x7f6898101660"/>
        <function-ref name="stop" scoped="" ref="0x7f6898101b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6898ef60c0" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898ef60c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6898ef6410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f6898ef6598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6898ef6720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f6898ef68a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6898ef6a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6898ef6bb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f6898ef6d40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f6898ef5020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f6898ef51a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f6898ef5330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6898ee6b68" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6898ee6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6898ee4db8"/>
        <function-ref name="test" scoped="" ref="0x7f6898ee44a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898eed728"/>
        <function-ref name="captured" scoped="" ref="0x7f6898ee50c0"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ee5598"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ee4930"/>
        <function-ref name="set" scoped="" ref="0x7f6898eedbb0"/>
        <function-ref name="start" scoped="" ref="0x7f6898ee5a20"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ee4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f6898ee39c0" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7f6898ee39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6898edf270"/>
        <function-ref name="fired" scoped="" ref="0x7f6898ee0020"/>
        <function-ref name="get" scoped="" ref="0x7f6898ee2598"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ee04a8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898edf6f8"/>
        <function-ref name="set" scoped="" ref="0x7f6898ee2a20"/>
        <function-ref name="start" scoped="" ref="0x7f6898ee0930"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ee0db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6898effe20" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898effe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6898ef80f8"/>
        <function-ref name="test" scoped="" ref="0x7f6898ef9798"/>
        <function-ref name="get" scoped="" ref="0x7f6898efca18"/>
        <function-ref name="setScale" scoped="" ref="0x7f6898ef8580"/>
        <function-ref name="getScale" scoped="" ref="0x7f6898ef8a58"/>
        <function-ref name="reset" scoped="" ref="0x7f6898efb980"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898efb4f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ef9c20"/>
        <function-ref name="set" scoped="" ref="0x7f6898efb020"/>
        <function-ref name="start" scoped="" ref="0x7f6898efbe08"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ef9310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7f6898ed5020" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7f6898ed5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6898ed5370"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x7f6898ed54f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6898ed5680"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x7f6898ed5808"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6898ed5990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6898ed5b18"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x7f6898ed5ca0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x7f6898ed5e28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x7f6898ed4020"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x7f6898ed41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x7f6898ec4a48" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x7f6898ec4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x7f6898ec4d98"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7f6898ec2020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7f6898ec21a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7f6898ec2330"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7f6898ec24b8"/>
        <function-ref name="setControl" scoped="" ref="0x7f6898ec2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x7f6898ed0e60" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x7f6898ed0e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6898ecc798"/>
        <function-ref name="fired" scoped="" ref="0x7f6898ece4f8"/>
        <function-ref name="get" scoped="" ref="0x7f6898ecfa18"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ece980"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898eccc20"/>
        <function-ref name="set" scoped="" ref="0x7f6898ece020"/>
        <function-ref name="start" scoped="" ref="0x7f6898ecee08"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ecc310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6898ed4680" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6898ed4680"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6898ed0798"/>
        <function-ref name="test" scoped="" ref="0x7f6898ed2e58"/>
        <function-ref name="get" scoped="" ref="0x7f6898ed3230"/>
        <function-ref name="captured" scoped="" ref="0x7f6898ed3b90"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ed20c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ed0310"/>
        <function-ref name="set" scoped="" ref="0x7f6898ed36b8"/>
        <function-ref name="start" scoped="" ref="0x7f6898ed2548"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ed29d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x7f6898ecb2b8" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x7f6898ecb2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6898ec9a40"/>
        <function-ref name="fired" scoped="" ref="0x7f6898eca7e8"/>
        <function-ref name="get" scoped="" ref="0x7f6898ecbe38"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ecac70"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ec7020"/>
        <function-ref name="set" scoped="" ref="0x7f6898eca310"/>
        <function-ref name="start" scoped="" ref="0x7f6898ec9130"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ec95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x7f6898ec7698" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x7f6898ec7698"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f6898ec4020"/>
        <function-ref name="fired" scoped="" ref="0x7f6898ec6d08"/>
        <function-ref name="get" scoped="" ref="0x7f6898ec63a8"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ec51f8"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ec44a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898ec6830"/>
        <function-ref name="start" scoped="" ref="0x7f6898ec5680"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ec5b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6898eda020" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898eda020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6898ed60f8"/>
        <function-ref name="test" scoped="" ref="0x7f6898ed87a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898edaba0"/>
        <function-ref name="setScale" scoped="" ref="0x7f6898ed6580"/>
        <function-ref name="getScale" scoped="" ref="0x7f6898ed6a58"/>
        <function-ref name="reset" scoped="" ref="0x7f6898ed99e8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898ed9560"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898ed8c30"/>
        <function-ref name="set" scoped="" ref="0x7f6898ed9088"/>
        <function-ref name="start" scoped="" ref="0x7f6898ed9e70"/>
        <function-ref name="stop" scoped="" ref="0x7f6898ed8320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898e34020" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898e34020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f6899934388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f6899934388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898e34370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6898e34740" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898e34740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6898e25930"/>
        <function-ref name="test" scoped="" ref="0x7f6898e25020"/>
        <function-ref name="get" scoped="" ref="0x7f6898e283a8"/>
        <function-ref name="setScale" scoped="" ref="0x7f6898e25db8"/>
        <function-ref name="getScale" scoped="" ref="0x7f6898e242f0"/>
        <function-ref name="reset" scoped="" ref="0x7f6898e261f8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898e28d08"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898e254a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898e28830"/>
        <function-ref name="start" scoped="" ref="0x7f6898e26680"/>
        <function-ref name="stop" scoped="" ref="0x7f6898e26b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f68980eccb0" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f68980eccb0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x7f6899934020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x7f6899934020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68980e9410"/>
        <function-ref name="fired" scoped="" ref="0x7f68980ea4a8"/>
        <function-ref name="startAt" scoped="" ref="0x7f68980eadb8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68980ea930"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68980e9898"/>
        <function-ref name="start" scoped="" ref="0x7f68980eba28"/>
        <function-ref name="stop" scoped="" ref="0x7f68980ea020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x7f68980e4d08" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x7f68980e4d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7f68980e0510"/>
        <function-ref name="fired" scoped="" ref="0x7f68980e12b0"/>
        <function-ref name="get" scoped="" ref="0x7f68980e38f0"/>
        <function-ref name="reset" scoped="" ref="0x7f68980e1738"/>
        <function-ref name="isOn" scoped="" ref="0x7f68980e0998"/>
        <function-ref name="set" scoped="" ref="0x7f68980e3d78"/>
        <function-ref name="start" scoped="" ref="0x7f68980e1bc0"/>
        <function-ref name="stop" scoped="" ref="0x7f68980e0088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x7f68980e9db8" loc="57:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x7f68980e9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f68980e5e58"/>
        <function-ref name="test" scoped="" ref="0x7f68980e5548"/>
        <function-ref name="get" scoped="" ref="0x7f68980e8968"/>
        <function-ref name="setScale" scoped="" ref="0x7f68980e4310"/>
        <function-ref name="getScale" scoped="" ref="0x7f68980e47e8"/>
        <function-ref name="reset" scoped="" ref="0x7f68980e7778"/>
        <function-ref name="overflow" scoped="" ref="0x7f68980e72f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f68980e59d0"/>
        <function-ref name="set" scoped="" ref="0x7f68980e8df0"/>
        <function-ref name="start" scoped="" ref="0x7f68980e7c00"/>
        <function-ref name="stop" scoped="" ref="0x7f68980e50c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6898deada8" loc="24:/home/urvi/tinyos-main/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6898deada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898de7b38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898de64a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898de6020"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898de6930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6898de4ad8" loc="24:/home/urvi/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6898de4ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898de1860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898de01f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898de1ce8"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898de0680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6898ddda98" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6898ddda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898dcc828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898dca190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898dcccb0"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898dca618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f6898dcab78" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898dcab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7f6898dc6c20"/>
        <function-ref name="test" scoped="" ref="0x7f6898dc6310"/>
        <function-ref name="get" scoped="" ref="0x7f6898dc9728"/>
        <function-ref name="setScale" scoped="" ref="0x7f6898dc50f8"/>
        <function-ref name="getScale" scoped="" ref="0x7f6898dc55d0"/>
        <function-ref name="reset" scoped="" ref="0x7f6898dc8548"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898dc80c0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898dc6798"/>
        <function-ref name="set" scoped="" ref="0x7f6898dc9bb0"/>
        <function-ref name="start" scoped="" ref="0x7f6898dc89d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6898dc8e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f6898da52b0" loc="63:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x7f6898da52b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898da4088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898da4998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898da4510"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898da4e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f6898da80e0" loc="62:/home/urvi/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6898da80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898da8e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898da6798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898da6310"/>
        <function-ref name="overflow" scoped="" ref="0x7f6898da6c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f68980fc648" loc="61:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7f68980fc648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68980facc0"/>
        <function-ref name="fired" scoped="" ref="0x7f68980fbd50"/>
        <function-ref name="startAt" scoped="" ref="0x7f68980fa6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68980fa230"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68980f8190"/>
        <function-ref name="start" scoped="" ref="0x7f68980fb3f0"/>
        <function-ref name="stop" scoped="" ref="0x7f68980fb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f68980f6b10" loc="73:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x7f68980f6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="TOne" ref="0x7f6899877720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f68980f2238"/>
        <function-ref name="fired" scoped="" ref="0x7f68980f42b0"/>
        <function-ref name="startAt" scoped="" ref="0x7f68980f4bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f68980f4738"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f68980f26c0"/>
        <function-ref name="start" scoped="" ref="0x7f68980f58f8"/>
        <function-ref name="stop" scoped="" ref="0x7f68980f5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f68980f87b8" loc="68:/home/urvi/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f68980f87b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68980f7578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f68980f6020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f68980f7a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f68980f64a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898d65a60" loc="18:/home/urvi/tinyos-main/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898d65a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898d65db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f6898d58020" loc="87:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f6898d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d58370"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d584f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d58680"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d58808"/>
        <function-ref name="get" scoped="" ref="0x7f6898d58990"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d58b18"/>
        <function-ref name="set" scoped="" ref="0x7f6898d58ca0"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d58e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f6898d57198" loc="88:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f6898d57198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d574e8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d57670"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d577f8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d57980"/>
        <function-ref name="get" scoped="" ref="0x7f6898d57b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d57c90"/>
        <function-ref name="set" scoped="" ref="0x7f6898d57e18"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d56020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f6898d56338" loc="89:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x7f6898d56338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d56688"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d56810"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d56998"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d56b20"/>
        <function-ref name="get" scoped="" ref="0x7f6898d56ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d56e30"/>
        <function-ref name="set" scoped="" ref="0x7f6898d55020"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f6898d5ade0" loc="86:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f6898d5ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d59170"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d592f8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d59480"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d59608"/>
        <function-ref name="get" scoped="" ref="0x7f6898d59790"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d59918"/>
        <function-ref name="set" scoped="" ref="0x7f6898d59aa0"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d59c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f6898d54648" loc="91:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x7f6898d54648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d54998"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d54b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d54ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d54e30"/>
        <function-ref name="get" scoped="" ref="0x7f6898d53020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d531a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898d53330"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d534b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f6898d5dc90" loc="85:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f6898d5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d5a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d5a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d5a330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d5a4b8"/>
        <function-ref name="get" scoped="" ref="0x7f6898d5a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d5a7c8"/>
        <function-ref name="set" scoped="" ref="0x7f6898d5a950"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d5aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f6898d554b0" loc="90:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f6898d554b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d55800"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d55988"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d55b10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d55c98"/>
        <function-ref name="get" scoped="" ref="0x7f6898d55e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d54020"/>
        <function-ref name="set" scoped="" ref="0x7f6898d541a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d54330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f6898d47e80" loc="39:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6898d47e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6898d4a1f8"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d4a380"/>
        <function-ref name="captured" scoped="" ref="0x7f6898d4a508"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6898d4a690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f6898d4aa60" loc="40:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x7f6898d4aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6898d4adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d46020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6898d461a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898d46330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f6898d46710" loc="41:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6898d46710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6898d46a60"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d46be8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6898d46d70"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898d45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f6898d44c40" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x7f6898d44c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6898d43020"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d431a8"/>
        <function-ref name="captured" scoped="" ref="0x7f6898d43330"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6898d434b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x7f6898d43888" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x7f6898d43888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x7f6898d319d0"/>
        <function-ref name="test" scoped="" ref="0x7f6898d310c0"/>
        <function-ref name="get" scoped="" ref="0x7f6898d33490"/>
        <function-ref name="captured" scoped="" ref="0x7f6898d33df0"/>
        <function-ref name="reset" scoped="" ref="0x7f6898d322f0"/>
        <function-ref name="isOn" scoped="" ref="0x7f6898d31548"/>
        <function-ref name="set" scoped="" ref="0x7f6898d33918"/>
        <function-ref name="start" scoped="" ref="0x7f6898d32778"/>
        <function-ref name="stop" scoped="" ref="0x7f6898d32c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x7f6898d2dad0" loc="9:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x7f6898d2dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6898d2de20"/>
        <function-ref name="fired" scoped="" ref="0x7f6898d2c020"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d2c1a8"/>
        <function-ref name="edge" scoped="" ref="0x7f6898d2c330"/>
        <function-ref name="enable" scoped="" ref="0x7f6898d2c4b8"/>
        <function-ref name="getValue" scoped="" ref="0x7f6898d2c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f6898d2d020" loc="8:/home/urvi/tinyos-main/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x7f6898d2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6898d2d370"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d2d4f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6898d2d680"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898d2d808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x7f6898d276d8" loc="51:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x7f6898d276d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898d27a28"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898d27bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898d27d38"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898d26020"/>
        <function-ref name="get" scoped="" ref="0x7f6898d261a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898d26330"/>
        <function-ref name="set" scoped="" ref="0x7f6898d264b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898d26640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f6898d2aa60" loc="47:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f6898d2aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f6898d2adb0"/>
        <function-ref name="disable" scoped="" ref="0x7f6898d27020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f6898d271a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898d27330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x7f6898d24178" loc="69:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x7f6898d24178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898d244c8"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898d24650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6898ae4c90" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898ae4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae33e8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae3570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6898aed438" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f6898aed438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aed788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6898ae7dd8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898ae7dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae6170"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae62f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6898ae17c0" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898ae17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae1b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6898ae0020" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f6898ae0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae0370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6898ad47c0" loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f6898ad47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad4b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6898ad67c0" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898ad67c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad6b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad6c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6898aec6b8" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898aec6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aeca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6898ad77c0" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898ad77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad7b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6898ae6d60" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f6898ae6d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae50d8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae5260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6898ae5cc8" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f6898ae5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae40a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae4228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6898add020" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f6898add020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898add370"/>
        <function-ref name="write" scoped="" ref="0x7f6898add4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6898ae07c0" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f6898ae07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae0b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898af0e78" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898af0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898aef1f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898aef380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898aef508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6898aea020" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898aea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aea370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6898aea638" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898aea638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aeaa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6898aead50" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f6898aead50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ae80d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6898ad6020" loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898ad6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad6370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad64f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6898aeb368" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898aeb368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aeb6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6898ae5528" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898ae5528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae5878"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae5a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6898ae65c0" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898ae65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae6910"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae6a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6898aefde8" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f6898aefde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aed170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6898ad4020" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f6898ad4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad4370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6898ad5020" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898ad5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad5370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6898add7c0" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f6898add7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898addb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898addc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6898ad7020" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f6898ad7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad7370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6898adf7c0" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f6898adf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898adfb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898adfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6898ad3020" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f6898ad3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898ad3770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898ad38f8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad3a80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898ad3c08"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898ad3d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6898aef7d0" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898aef7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aefb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6898ae7638" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f6898ae7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae7988"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae7b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6898ae44f0" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898ae44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae4840"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6898adf020" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898adf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898adf370"/>
        <function-ref name="write" scoped="" ref="0x7f6898adf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6898ae3838" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f6898ae3838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae3b88"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6898aeda50" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898aeda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aedda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6898ae1020" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898ae1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ae1370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ae14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898af0280" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898af0280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898af05d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898af0758"/>
        <function-ref name="request" scoped="" ref="0x7f6898af08e0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898af0a68"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898af0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6898ae83a0" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f6898ae83a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ae86f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6898ae7020" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f6898ae7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ae7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6898ad87c0" loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f6898ad87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad8b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6898ad8020" loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898ad8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad8370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6898aeb980" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898aeb980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6898ada7c0" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898ada7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898adab10"/>
        <function-ref name="write" scoped="" ref="0x7f6898adac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6898ad57c0" loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f6898ad57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ad5b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6898ada020" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898ada020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ada370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ada4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6898aec0a0" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898aec0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aec3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6898ade7c0" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f6898ade7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898adeb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898adec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6898aeccd0" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f6898aeccd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aeb0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6898ade020" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f6898ade020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ade370"/>
        <function-ref name="write" scoped="" ref="0x7f6898ade4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6898ae89b8" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f6898ae89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ae8d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6898ad10a0" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f6898ad10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898ad13f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898ad1578"/>
        <function-ref name="write" scoped="" ref="0x7f6898ad1700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898ad1888"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898ad1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6898ce43c8" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f6898ce43c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898ce4718"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898ce48a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898ce4a28"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898ce4bb0"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898ce4d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898ce54c8" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ce54c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898ce5818"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898ce59a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898ce5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6898ce25e0" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f6898ce25e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ce2930"/>
        <function-ref name="write" scoped="" ref="0x7f6898ce2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6898ce1348" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f6898ce1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ce1698"/>
        <function-ref name="write" scoped="" ref="0x7f6898ce1820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898ce8808" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898ce8808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898ce8b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898ce8ce0"/>
        <function-ref name="request" scoped="" ref="0x7f6898ce8e68"/>
        <function-ref name="granted" scoped="" ref="0x7f6898ce5020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898ce51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6898ce01c8" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f6898ce01c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ce0518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f6898ccb860" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6898ccb860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898ccbbb0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898ccbd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f6898cda4d0" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x7f6898cda4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898cda820"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898cda9a8"/>
        <function-ref name="write" scoped="" ref="0x7f6898cdab30"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898cdacb8"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898cdae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898cdd4e8" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898cdd4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898cdd838"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898cdd9c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898cddb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f6898cd3470" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6898cd3470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6898cd37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f6898cd50e0" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x7f6898cd50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898cd5430"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898cd55b8"/>
        <function-ref name="isState" scoped="" ref="0x7f6898cd5740"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898cd58c8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898cd5a50"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898cd5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6898cd78e8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6898cd78e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898cd7c38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898cd7dc0"/>
        <function-ref name="request" scoped="" ref="0x7f6898cd6020"/>
        <function-ref name="granted" scoped="" ref="0x7f6898cd61a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898cd6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f6898cd9680" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x7f6898cd9680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898cd99d0"/>
        <function-ref name="write" scoped="" ref="0x7f6898cd9b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f6898cd83c8" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x7f6898cd83c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898cd8718"/>
        <function-ref name="write" scoped="" ref="0x7f6898cd88a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898cd5e50" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898cd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6898cd41e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898cd4370"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898cd44f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898cd4680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898cd4808"/>
        <function-ref name="get" scoped="" ref="0x7f6898cd4990"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898cd4b18"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898ccc1a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898cd4ca0"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898cd4e28"/>
        <function-ref name="led2On" scoped="" ref="0x7f6898ccc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898cdc300" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898cdc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898cdc650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898cdc7d8"/>
        <function-ref name="request" scoped="" ref="0x7f6898cdc960"/>
        <function-ref name="granted" scoped="" ref="0x7f6898cdcae8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898cdcc70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f6898cc8b80" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x7f6898cc8b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898cc6020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898cc61a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f6898cd71c8" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x7f6898cd71c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898cd7518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6898c6f100" loc="67:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898c6f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898c6f450"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898c6f5d8"/>
        <function-ref name="isState" scoped="" ref="0x7f6898c6f760"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898c6f8e8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898c6fa70"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898c6fbf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6898c6d850" loc="66:/home/urvi/tinyos-main/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898c6d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898c6dba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898c6dd28"/>
        <function-ref name="isState" scoped="" ref="0x7f6898c6a020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898c6a1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898c6a330"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898c6a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898c675d8" loc="66:/home/urvi/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898c675d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898c67928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6898c661c8" loc="67:/home/urvi/tinyos-main/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898c661c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898c66518"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898c666a0"/>
        <function-ref name="isState" scoped="" ref="0x7f6898c66828"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898c669b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898c66b38"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898c66cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6898b0f880" loc="43:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6898b0f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898b0fbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898b0fd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6898b0f2a8" loc="42:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6898b0f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6898b0f5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898b10020" loc="39:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898b10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898b10370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898b105f8" loc="40:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898b105f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898b10948"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898b10ad0"/>
        <function-ref name="request" scoped="" ref="0x7f6898b10c58"/>
        <function-ref name="granted" scoped="" ref="0x7f6898b10de0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898b0f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6898c47490" loc="84:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6898c47490"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898c477e0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898c47968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6898c482f0" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6898c482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6898c48640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898c4bb58" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898c4bb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898c48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6898c428d0" loc="83:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6898c428d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6898c42c20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6898c42da8"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6898c47020"/>
        <function-ref name="write" scoped="" ref="0x7f6898c471a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898c461c8" loc="85:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898c461c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898c46518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898c466a0"/>
        <function-ref name="request" scoped="" ref="0x7f6898c46828"/>
        <function-ref name="granted" scoped="" ref="0x7f6898c469b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898c46b38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x7f6898bfdb58" loc="296:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x7f6898bfdb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f6898bfc020"/>
        <function-ref name="runTask" scoped="" ref="0x7f6898bfc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f6898c3d450" loc="94:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x7f6898c3d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898c3d7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898c3d928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x7f6898c1f888" loc="99:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x7f6898c1f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898c1fbd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898c1fd60"/>
        <function-ref name="request" scoped="" ref="0x7f6898c1e020"/>
        <function-ref name="granted" scoped="" ref="0x7f6898c1e1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898c1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f6898c3e330" loc="92:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x7f6898c3e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f6898c3e680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898c41d18" loc="91:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898c41d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898c3e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x7f6898c205a8" loc="98:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x7f6898c205a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6898c208f8"/>
        <function-ref name="sleep" scoped="" ref="0x7f6898c38de8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6898c20c08"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6898c1f020"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6898c39020"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6898c391a8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6898c39330"/>
        <function-ref name="read" scoped="" ref="0x7f6898c394b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6898c39640"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6898c397c8"/>
        <function-ref name="setClock" scoped="" ref="0x7f6898c39950"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6898c39ad8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6898c39c60"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6898c38020"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6898c381a8"/>
        <function-ref name="write" scoped="" ref="0x7f6898c38330"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6898c384b8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6898c38640"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6898c387c8"/>
        <function-ref name="getClock" scoped="" ref="0x7f6898c38950"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6898c38ad8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6898c20a80"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6898c20d90"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6898c38c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f6898c3e938" loc="93:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x7f6898c3e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f6898c3ec88"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f6898c3ee10"/>
        <function-ref name="splitRead" scoped="" ref="0x7f6898c3d020"/>
        <function-ref name="write" scoped="" ref="0x7f6898c3d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898c3b1c8" loc="95:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898c3b1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898c3b518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898c3b6a0"/>
        <function-ref name="request" scoped="" ref="0x7f6898c3b828"/>
        <function-ref name="granted" scoped="" ref="0x7f6898c3b9b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898c3bb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f6898c1e5e8" loc="100:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898c1e5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6898c1e938"/>
        <function-ref name="userId" scoped="" ref="0x7f6898c1eac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x7f6898c1ed90" loc="101:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7f6898c1ed90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6898c1d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x7f6898bd2020" loc="76:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x7f6898bd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6898bd2370"/>
        <function-ref name="sleep" scoped="" ref="0x7f6898bd07c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6898bd2680"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6898bd0950"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6898bd2990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6898bd2b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6898bd2ca0"/>
        <function-ref name="read" scoped="" ref="0x7f6898bd2e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6898bd1020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6898bd11a8"/>
        <function-ref name="setClock" scoped="" ref="0x7f6898bd1330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6898bd14b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6898bd1640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6898bd18c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6898bd1a50"/>
        <function-ref name="write" scoped="" ref="0x7f6898bd1bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6898bd1d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6898bd0020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6898bd01a8"/>
        <function-ref name="getClock" scoped="" ref="0x7f6898bd0330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6898bd04b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6898bd24f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6898bd2808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6898bd0640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x7f6898bc67d0" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x7f6898bc67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898bc6b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898bc6ca8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898bc6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898bc5020"/>
        <function-ref name="get" scoped="" ref="0x7f6898bc51a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898bc5330"/>
        <function-ref name="set" scoped="" ref="0x7f6898bc54b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898bc5640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f6898bc84c0" loc="79:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x7f6898bc84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898bc8810"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898bc8998"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898bc8b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898bc8ca8"/>
        <function-ref name="get" scoped="" ref="0x7f6898bc8e30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898bc7020"/>
        <function-ref name="set" scoped="" ref="0x7f6898bc71a8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898bc7330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f6898bc9380" loc="78:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f6898bc9380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898bc96d0"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898bc9858"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898bc99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898bc9b68"/>
        <function-ref name="get" scoped="" ref="0x7f6898bc9cf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898bc9e78"/>
        <function-ref name="set" scoped="" ref="0x7f6898bc8030"/>
        <function-ref name="clr" scoped="" ref="0x7f6898bc81b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x7f6898bcaae8" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x7f6898bcaae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6898bcae38"/>
        <function-ref name="stop" scoped="" ref="0x7f6898bc9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x7f6898bc5970" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x7f6898bc5970"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f6898bc5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x7f6898bcfdc8" loc="74:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x7f6898bcfdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x7f6898bcc170"/>
        <function-ref name="sleep" scoped="" ref="0x7f6898bca640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x7f6898bcc480"/>
        <function-ref name="dataReady" scoped="" ref="0x7f6898bca7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x7f6898bcc790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x7f6898bcc918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x7f6898bccaa0"/>
        <function-ref name="read" scoped="" ref="0x7f6898bccc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x7f6898bccdb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x7f6898bcb020"/>
        <function-ref name="setClock" scoped="" ref="0x7f6898bcb1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f6898bcb330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x7f6898bcb4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x7f6898bcb740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x7f6898bcb8c8"/>
        <function-ref name="write" scoped="" ref="0x7f6898bcba50"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f6898bcbbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x7f6898bcbd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x7f6898bca020"/>
        <function-ref name="getClock" scoped="" ref="0x7f6898bca1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x7f6898bca330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x7f6898bcc2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x7f6898bcc608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x7f6898bca4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x7f6898bc7648" loc="80:/home/urvi/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x7f6898bc7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898bc7998"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898bc7b20"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898bc7ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898bc7e30"/>
        <function-ref name="get" scoped="" ref="0x7f6898bc6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898bc61a8"/>
        <function-ref name="set" scoped="" ref="0x7f6898bc6330"/>
        <function-ref name="clr" scoped="" ref="0x7f6898bc64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f6898b28510" loc="86:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f6898b28510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f6898b28880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f6898b28a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f6898b27550" loc="89:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f6898b27550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f6898b278c0"/>
        <function-ref name="configure" scoped="" ref="0x7f6898b27a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898b2a748" loc="85:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898b2a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898b2aab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898b2ac40"/>
        <function-ref name="request" scoped="" ref="0x7f6898b2adc8"/>
        <function-ref name="granted" scoped="" ref="0x7f6898b28020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898b281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f6898b28c50" loc="87:/home/urvi/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f6898b28c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f6898b27020"/>
        <function-ref name="userId" scoped="" ref="0x7f6898b271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f68980528a8" loc="44:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f68980528a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898052bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f6898052e80" loc="45:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f6898052e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f68980511f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f6898051380"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f6898051508"/>
        <function-ref name="dequeue" scoped="" ref="0x7f6898051690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f689804f9a8" loc="52:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x7f689804f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f689804fd18"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f689804e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f689804eb08" loc="56:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f689804eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f689804ee78"/>
        <function-ref name="configure" scoped="" ref="0x7f689804d030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f689804d2b8" loc="57:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f689804d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f689804d608"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f689804d790"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f689804d918"/>
        <function-ref name="dequeue" scoped="" ref="0x7f689804daa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898050be0" loc="51:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898050be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f689804f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f689804f1a8"/>
        <function-ref name="request" scoped="" ref="0x7f689804f330"/>
        <function-ref name="granted" scoped="" ref="0x7f689804f4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f689804f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f689804e268" loc="53:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f689804e268"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f689804e5b8"/>
        <function-ref name="userId" scoped="" ref="0x7f689804e740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f689804dd68" loc="69:/home/urvi/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x7f689804dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689804b0f0"/>
        <function-ref name="runTask" scoped="" ref="0x7f689804b278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x7f6898b1d940" loc="45:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x7f6898b1d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898b1dc90"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898b1de18"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898b1c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898b1c1a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898b1c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898b1c4b8"/>
        <function-ref name="set" scoped="" ref="0x7f6898b1c640"/>
        <function-ref name="clr" scoped="" ref="0x7f6898b1c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898b21e48" loc="40:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898b21e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898b1e1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898b1e348"/>
        <function-ref name="request" scoped="" ref="0x7f6898b1e4d0"/>
        <function-ref name="granted" scoped="" ref="0x7f6898b1e658"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898b1e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x7f6898b1ebb0" loc="44:/home/urvi/tinyos-main/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x7f6898b1ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898b1d020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898b1d1a8"/>
        <function-ref name="request" scoped="" ref="0x7f6898b1d330"/>
        <function-ref name="granted" scoped="" ref="0x7f6898b1d4b8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898b1d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6898abb7c0" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898abb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abbd10"/>
        <function-ref name="write" scoped="" ref="0x7f6898aba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6898ac6cd0" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f6898ac6cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac50a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6898abf7c0" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898abf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abfb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898abfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6898ab92e8" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898ab92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab9638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6898ab9a88" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f6898ab9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab9dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6898aad2e8" loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f6898aad2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898aad638"/>
        <function-ref name="write" scoped="" ref="0x7f6898aad7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6898ab02e8" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898ab02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab0638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6898ac4020" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898ac4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6898ab12e8" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898ab12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab1638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6898abe7c0" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f6898abe7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abeb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898abec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6898abc7c0" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f6898abc7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abcb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898abcc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6898ab5a88" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f6898ab5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab5dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6898ab82e8" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f6898ab82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab8638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898ac7740" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898ac7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898ac7a90"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898ac7c18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898ac7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6898ac2900" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898ac2900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac2c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6898ac1020" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898ac1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6898ac1738" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f6898ac1738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac1a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6898ab1a88" loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898ab1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab1dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6898ac4c50" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898ac4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6898abc020" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898abc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abc370"/>
        <function-ref name="write" scoped="" ref="0x7f6898abc4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6898abe020" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898abe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abe370"/>
        <function-ref name="write" scoped="" ref="0x7f6898abe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6898ac66b8" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f6898ac66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac6a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6898aaea88" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f6898aaea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898aaedd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898aad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6898ab0a88" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898ab0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab0dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898aae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6898ab42e8" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f6898ab42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab4638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab47c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6898ab2a88" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f6898ab2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab2dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6898ab72e8" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f6898ab72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab7638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6898aada88" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f6898aada88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898aac5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898aac770"/>
        <function-ref name="write" scoped="" ref="0x7f6898aac8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898aaca80"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898aacc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6898ac60a0" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898ac60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac63f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6898abf020" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f6898abf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abf370"/>
        <function-ref name="write" scoped="" ref="0x7f6898abf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6898abb020" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898abb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abb370"/>
        <function-ref name="write" scoped="" ref="0x7f6898abb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6898ab8a88" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898ab8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab8dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6898aba2e8" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f6898aba2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898aba638"/>
        <function-ref name="write" scoped="" ref="0x7f6898aba7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6898ac5368" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898ac5368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac56b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6898abaa88" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898abaa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898abadd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898ac8a48" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898ac8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898ac8d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898ac7020"/>
        <function-ref name="request" scoped="" ref="0x7f6898ac71a8"/>
        <function-ref name="granted" scoped="" ref="0x7f6898ac7330"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898ac74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6898ac1d50" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f6898ac1d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac00d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6898ac09b8" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f6898ac09b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac0d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6898ab22e8" loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f6898ab22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab2638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6898ab3a88" loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898ab3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab3dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6898ac22e8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898ac22e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac2638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6898ab32e8" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898ab32e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab3638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab37c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6898aae2e8" loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f6898aae2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898aae638"/>
        <function-ref name="write" scoped="" ref="0x7f6898aae7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6898ab4a88" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898ab4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab4dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6898ac5980" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898ac5980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac5cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6898ab52e8" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f6898ab52e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab5638"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab57c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6898ac4638" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f6898ac4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6898ab7a88" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f6898ab7a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898ab7dd8"/>
        <function-ref name="write" scoped="" ref="0x7f6898ab5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6898ac03a0" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f6898ac03a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898ac06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6898aab020" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f6898aab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898aab370"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898aab4f8"/>
        <function-ref name="write" scoped="" ref="0x7f6898aab680"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898aab808"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898aab990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f6898a99c90" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f6898a99c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a983e8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a98570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f6898aa33a0" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f6898aa33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6898a9ddd8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898a9ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a9b170"/>
        <function-ref name="write" scoped="" ref="0x7f6898a9b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f6898a977c0" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898a977c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a97b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a97c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6898a95020" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f6898a95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a95370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a954f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f6898a8b7c0" loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f6898a8b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8bb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6898a8d7c0" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898a8d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8db10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6898aa1638" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898aa1638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6898a8e7c0" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898a8e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8eb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f6898a9bd60" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f6898a9bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a9a0d8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a9a260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f6898a9acc8" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f6898a9acc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a990a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898a99228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6898a92020" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f6898a92020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a92370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a924f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f6898a957c0" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f6898a957c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a95b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a95c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898aa5da0" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898aa5da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898aa4170"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898aa42f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898aa4480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6898a9f020" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898a9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6898a9f638" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898a9f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6898a9fd50" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f6898a9fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9e0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6898a8d020" loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898a8d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8d370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6898aa02e8" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898aa02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa0638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f6898a9a528" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f6898a9a528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a9a878"/>
        <function-ref name="write" scoped="" ref="0x7f6898a9aa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6898a9b5c0" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898a9b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a9b910"/>
        <function-ref name="write" scoped="" ref="0x7f6898a9ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6898aa4d60" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f6898aa4d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f6898a8b020" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f6898a8b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8b370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6898a8c020" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898a8c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8c370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6898a927c0" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f6898a927c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a92b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a92c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6898a8e020" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f6898a8e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8e370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6898a947c0" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f6898a947c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a94b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a94c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f6898a8a020" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f6898a8a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898a8a770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898a8a8f8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8aa80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898a8ac08"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898a8ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6898aa4748" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898aa4748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa4a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6898a9d638" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f6898a9d638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a9d988"/>
        <function-ref name="write" scoped="" ref="0x7f6898a9db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f6898a994f0" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f6898a994f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a99840"/>
        <function-ref name="write" scoped="" ref="0x7f6898a999c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6898a94020" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a94370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a944f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f6898a98838" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f6898a98838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a98b88"/>
        <function-ref name="write" scoped="" ref="0x7f6898a98d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6898aa39b8" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898aa39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6898a97020" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898a97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a97370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a974f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f6898aa51a8" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f6898aa51a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898aa54f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898aa5680"/>
        <function-ref name="request" scoped="" ref="0x7f6898aa5808"/>
        <function-ref name="granted" scoped="" ref="0x7f6898aa5990"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898aa5b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f6898a9e3a0" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f6898a9e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6898a9d020" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f6898a9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9d370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6898a907c0" loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f6898a907c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a90b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a90c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6898a90020" loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898a90020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a90370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a904f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6898aa0900" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898aa0900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6898a917c0" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898a917c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a91b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a91c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6898a8c7c0" loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f6898a8c7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a8cb10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a8cc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6898a91020" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898a91020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a91370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a914f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6898aa1020" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898aa1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa1370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6898a937c0" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f6898a937c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a93b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898a93c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6898aa1c50" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f6898aa1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898aa0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6898a93020" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f6898a93020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a93370"/>
        <function-ref name="write" scoped="" ref="0x7f6898a934f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6898a9e9b8" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f6898a9e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a9ed08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f6898a890a0" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f6898a890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898a893f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898a89578"/>
        <function-ref name="write" scoped="" ref="0x7f6898a89700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898a89888"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898a89a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f6898a802b8" loc="54:/home/urvi/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f6898a802b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6898a80608"/>
        <function-ref name="changed" scoped="" ref="0x7f6898a80790"/>
        <function-ref name="amGroup" scoped="" ref="0x7f6898a80918"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6898a80aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f6898a83d10" loc="40:/home/urvi/tinyos-main/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f6898a83d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f6898a700a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6898a5e140" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6898a5e140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6898a5e490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6898a5e618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6898a5e7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6898a5e928"/>
        <function-ref name="setCca" scoped="" ref="0x7f6898a5eab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6898a5ec38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6898a5ccb8" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6898a5ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6898a5b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f6898a5f480" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f6898a5f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898a5f7d0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898a5f958"/>
        <function-ref name="modify" scoped="" ref="0x7f6898a5fae0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898a5fc68"/>
        <function-ref name="resend" scoped="" ref="0x7f6898a5fdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6898a63c50" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6898a63c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6898a5f020"/>
        <function-ref name="stop" scoped="" ref="0x7f6898a5f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6898a5b458" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6898a5b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6898a5b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f6898a37948" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f6898a37948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f6898a37c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6898a37e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6898a36020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6898a361a8"/>
        <function-ref name="setCca" scoped="" ref="0x7f6898a36330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6898a364b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f6898a2f460" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f6898a2f460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f6898a2d900"/>
        <function-ref name="clear" scoped="" ref="0x7f6898a2c020"/>
        <function-ref name="isValid" scoped="" ref="0x7f6898a2d220"/>
        <function-ref name="set" scoped="" ref="0x7f6898a2c700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f6898a19de0" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f6898a19de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a18170"/>
        <function-ref name="write" scoped="" ref="0x7f6898a182f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6898a18650" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898a18650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a189a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898a18b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f6898a368c0" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f6898a368c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6898a36c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f6898a1c478" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898a1c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a1c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f6898a22d60" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x7f6898a22d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f6898a2a0d8"/>
        <function-ref name="disable" scoped="" ref="0x7f6898a2a260"/>
        <function-ref name="captured" scoped="" ref="0x7f6898a2a3e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f6898a2a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f6898a359d8" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x7f6898a359d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f6898a31088"/>
        <function-ref name="fired" scoped="" ref="0x7f6898a320f8"/>
        <function-ref name="startAt" scoped="" ref="0x7f6898a32a08"/>
        <function-ref name="isRunning" scoped="" ref="0x7f6898a32580"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f6898a31510"/>
        <function-ref name="start" scoped="" ref="0x7f6898a34768"/>
        <function-ref name="stop" scoped="" ref="0x7f6898a34c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f6898a319a8" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f6898a319a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f6898a31cf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6898a31e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6898a30030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6898a301b8"/>
        <function-ref name="getPower" scoped="" ref="0x7f6898a30340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6898a304c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f6898a1e538" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898a1e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a1e888"/>
        <function-ref name="write" scoped="" ref="0x7f6898a1ea10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f6898a1eda8" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f6898a1eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a1d170"/>
        <function-ref name="write" scoped="" ref="0x7f6898a1d2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f6898a12750" loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6898a12750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898a12aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6898a12c28"/>
        <function-ref name="sfd" scoped="" ref="0x7f6898a12db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6898a38b70" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6898a38b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898a37020"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898a371a8"/>
        <function-ref name="modify" scoped="" ref="0x7f6898a37330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898a374b8"/>
        <function-ref name="resend" scoped="" ref="0x7f6898a37640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f6898a20cb0" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898a20cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898a1f0a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898a1f228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898a1f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f6898a1cb68" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898a1cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a1a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f6898a29c98" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f6898a29c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898a27020"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898a271a8"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898a27330"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898a274b8"/>
        <function-ref name="get" scoped="" ref="0x7f6898a27640"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898a277c8"/>
        <function-ref name="set" scoped="" ref="0x7f6898a27950"/>
        <function-ref name="clr" scoped="" ref="0x7f6898a27ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898a39b80" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898a39b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898a38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6898a307f8" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898a307f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6898a30b48"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6898a30cd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f6898a30e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f6898a221d8" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f6898a221d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898a22528"/>
        <function-ref name="isSet" scoped="" ref="0x7f6898a226b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898a22838"/>
        <function-ref name="set" scoped="" ref="0x7f6898a229c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f6898a1a3d0" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898a1a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a1a920"/>
        <function-ref name="write" scoped="" ref="0x7f6898a1aaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6898a20020" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6898a20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898a20370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898a204f8"/>
        <function-ref name="request" scoped="" ref="0x7f6898a20680"/>
        <function-ref name="granted" scoped="" ref="0x7f6898a20808"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898a20990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f6898a2a8b8" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x7f6898a2a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898a2ad08"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898a29020"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898a291a8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898a29330"/>
        <function-ref name="get" scoped="" ref="0x7f6898a294b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898a29640"/>
        <function-ref name="set" scoped="" ref="0x7f6898a297c8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898a29950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6898a18e80" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898a18e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a171f8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a17380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f6898a176f0" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f6898a176f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a17a40"/>
        <function-ref name="write" scoped="" ref="0x7f6898a17bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6898a1d670" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898a1d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a1d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f6898a27e20" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x7f6898a27e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898a211a8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898a21330"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898a214b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898a21640"/>
        <function-ref name="get" scoped="" ref="0x7f6898a217c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898a21950"/>
        <function-ref name="set" scoped="" ref="0x7f6898a21ad8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898a21c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898a150c0" loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898a150c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6898a15410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898a15598"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898a15720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898a158a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898a15a30"/>
        <function-ref name="get" scoped="" ref="0x7f6898a15bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898a15d40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898a144b8"/>
        <function-ref name="set" scoped="" ref="0x7f6898a14020"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898a141a8"/>
        <function-ref name="led2On" scoped="" ref="0x7f6898a14330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f6898a19558" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898a19558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898a198a8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a19a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6898a38310" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6898a38310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f6898a38660"/>
        <function-ref name="stop" scoped="" ref="0x7f6898a387e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f6898a1f720" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f6898a1f720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f6898a1fa70"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898a1fbf8"/>
        <function-ref name="write" scoped="" ref="0x7f6898a1fd80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898a1e020"/>
        <function-ref name="readDone" scoped="" ref="0x7f6898a1e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f6898a1dd40" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898a1dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a1c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f6898a1ae30" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f6898a1ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898a191a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f6898a35060" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x7f6898a35060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6898a353b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f689897c470" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f689897c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897c9c0"/>
        <function-ref name="write" scoped="" ref="0x7f689897cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f68989879b8" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f68989879b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898987d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f6898980470" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f6898980470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989807c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898980948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f689897bd98" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f689897bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897a170"/>
        <function-ref name="write" scoped="" ref="0x7f689897a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f689897a5c0" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f689897a5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897a910"/>
        <function-ref name="write" scoped="" ref="0x7f689897aa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f689896fc10" loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f689896fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689896e020"/>
        <function-ref name="write" scoped="" ref="0x7f689896e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f6898972c10" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898972c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898971020"/>
        <function-ref name="write" scoped="" ref="0x7f68989711a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6898986c50" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898986c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898985020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f6898973c10" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f6898973c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898972020"/>
        <function-ref name="write" scoped="" ref="0x7f68989721a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f689897f470" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f689897f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f689897f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f689897d470" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f689897d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897d7c0"/>
        <function-ref name="write" scoped="" ref="0x7f689897d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6898976470" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f6898976470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989767c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898976948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f689897ad60" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f689897ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989790d8"/>
        <function-ref name="write" scoped="" ref="0x7f6898979260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898988430" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898988430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f6898988780"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898988908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f6898988a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6898984638" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898984638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898984988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6898984c50" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898984c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989820d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f68989823a0" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f68989823a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989826f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6898972470" loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898972470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989727c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898972948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f6898985900" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f6898985900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898985c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f689897fc10" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f689897fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897d020"/>
        <function-ref name="write" scoped="" ref="0x7f689897d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f6898980c10" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f6898980c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897f020"/>
        <function-ref name="write" scoped="" ref="0x7f689897f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f68989873a0" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f68989873a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989876f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f689896f470" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f689896f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689896f7c0"/>
        <function-ref name="write" scoped="" ref="0x7f689896f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f6898971470" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898971470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989717c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898971948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f6898976c10" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f6898976c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898975020"/>
        <function-ref name="write" scoped="" ref="0x7f68989751a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6898973470" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f6898973470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989737c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898973948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f6898979cc8" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f6898979cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989780a0"/>
        <function-ref name="write" scoped="" ref="0x7f6898978228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f689896e470" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f689896e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f689896ebc0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f689896ed48"/>
        <function-ref name="write" scoped="" ref="0x7f689896d020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f689896d1a8"/>
        <function-ref name="readDone" scoped="" ref="0x7f689896d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6898988d58" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898988d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989870d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f6898981c50" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f6898981c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898980020"/>
        <function-ref name="write" scoped="" ref="0x7f68989801a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f689897dc10" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f689897dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897c020"/>
        <function-ref name="write" scoped="" ref="0x7f689897c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6898979528" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898979528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898979878"/>
        <function-ref name="write" scoped="" ref="0x7f6898979a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f689897ce10" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f689897ce10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897b1a8"/>
        <function-ref name="write" scoped="" ref="0x7f689897b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6898986020" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898986020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898986370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f689897b5f8" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f689897b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689897b948"/>
        <function-ref name="write" scoped="" ref="0x7f689897bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68989897d0" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68989897d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898989b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898989ca8"/>
        <function-ref name="request" scoped="" ref="0x7f6898989e30"/>
        <function-ref name="granted" scoped="" ref="0x7f6898988020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68989881a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f68989829b8" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f68989829b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898982d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f6898981638" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f6898981638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898981988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f6898974c10" loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f6898974c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898973020"/>
        <function-ref name="write" scoped="" ref="0x7f68989731a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6898974470" loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898974470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989747c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898974948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6898984020" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898984020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898984370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f6898975c10" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f6898975c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898974020"/>
        <function-ref name="write" scoped="" ref="0x7f68989741a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f6898971c10" loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f6898971c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689896f020"/>
        <function-ref name="write" scoped="" ref="0x7f689896f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6898975470" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898975470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f68989757c0"/>
        <function-ref name="write" scoped="" ref="0x7f6898975948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6898986638" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898986638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898986988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f6898978c90" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f6898978c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898976020"/>
        <function-ref name="write" scoped="" ref="0x7f68989761a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f68989852e8" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f68989852e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898985638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f68989784f0" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f68989784f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898978840"/>
        <function-ref name="write" scoped="" ref="0x7f68989789c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f6898981020" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f6898981020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898981370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f689896d5f8" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f689896d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f689896d948"/>
        <function-ref name="writeDone" scoped="" ref="0x7f689896dad0"/>
        <function-ref name="write" scoped="" ref="0x7f689896dc58"/>
        <function-ref name="beginRead" scoped="" ref="0x7f689896dde0"/>
        <function-ref name="readDone" scoped="" ref="0x7f689896c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f6898961868" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f6898961868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898961bb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f6898961d40"/>
        <function-ref name="sfd" scoped="" ref="0x7f6898960020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f68989602f0" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68989602f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898960640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f6898960a48" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f6898960a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f6898960d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f6898961080" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f6898961080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f68989613d0"/>
        <function-ref name="stop" scoped="" ref="0x7f6898961558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f6898959998" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x7f6898959998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898959ce8"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898959e70"/>
        <function-ref name="toggle" scoped="" ref="0x7f6898957020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f68989571a8"/>
        <function-ref name="get" scoped="" ref="0x7f6898957330"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f68989574b8"/>
        <function-ref name="set" scoped="" ref="0x7f6898957640"/>
        <function-ref name="clr" scoped="" ref="0x7f68989577c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6898951cb8" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f6898951cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f68989500a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6898950228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f68989503b0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6898950538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f68989506c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6898950848"/>
        <function-ref name="setChannel" scoped="" ref="0x7f68989509d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6898950b58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6898950ce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6898950e68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f689894f020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f689894f1a8"/>
        <function-ref name="sync" scoped="" ref="0x7f689894f330"/>
        <function-ref name="getChannel" scoped="" ref="0x7f689894f5b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f689894f740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f689893a020" loc="148:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x7f689893a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689893a370"/>
        <function-ref name="runTask" scoped="" ref="0x7f689893a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f689894fd08" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f689894fd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f689894d1f0"/>
        <function-ref name="clear" scoped="" ref="0x7f689894d8d0"/>
        <function-ref name="isValid" scoped="" ref="0x7f689894eac0"/>
        <function-ref name="set" scoped="" ref="0x7f689894b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f6898957b28" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x7f6898957b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f6898957e78"/>
        <function-ref name="isInput" scoped="" ref="0x7f6898956030"/>
        <function-ref name="toggle" scoped="" ref="0x7f68989561b8"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898956340"/>
        <function-ref name="get" scoped="" ref="0x7f68989564c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898956650"/>
        <function-ref name="set" scoped="" ref="0x7f68989567d8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898956960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f689894a8a8" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f689894a8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689894abf8"/>
        <function-ref name="write" scoped="" ref="0x7f689894ad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f6898949130" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f6898949130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898949480"/>
        <function-ref name="write" scoped="" ref="0x7f6898949608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f6898948208" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f6898948208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898948558"/>
        <function-ref name="write" scoped="" ref="0x7f68989486e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f68989523a8" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f68989523a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f68989526f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f6898952880"/>
        <function-ref name="getRssi" scoped="" ref="0x7f6898952a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f6898952b90"/>
        <function-ref name="getPower" scoped="" ref="0x7f6898952d18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f6898951020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f689895ce48" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x7f689895ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689895b1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f689895b348"/>
        <function-ref name="sfd" scoped="" ref="0x7f689895b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f6898953520" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898953520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898953870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f689895a6b8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x7f689895a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f689895aa08"/>
        <function-ref name="isInput" scoped="" ref="0x7f689895ab90"/>
        <function-ref name="toggle" scoped="" ref="0x7f689895ad18"/>
        <function-ref name="isOutput" scoped="" ref="0x7f6898959020"/>
        <function-ref name="get" scoped="" ref="0x7f68989591a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f6898959330"/>
        <function-ref name="set" scoped="" ref="0x7f68989594b8"/>
        <function-ref name="clr" scoped="" ref="0x7f6898959640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f6898948a70" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898948a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898948dc0"/>
        <function-ref name="write" scoped="" ref="0x7f6898947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689895c020" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689895c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689895c370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6898951350" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898951350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68989516a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6898951828"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68989519b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f689895b7a0" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f689895b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689895baf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f6898955900" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x7f6898955900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898955c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898955dd8"/>
        <function-ref name="request" scoped="" ref="0x7f6898954020"/>
        <function-ref name="granted" scoped="" ref="0x7f68989541a8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898954330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f6898949960" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f6898949960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898949cb0"/>
        <function-ref name="write" scoped="" ref="0x7f6898949e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f68989546a0" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f68989546a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f68989549f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f6898954b78"/>
        <function-ref name="write" scoped="" ref="0x7f6898954d00"/>
        <function-ref name="beginRead" scoped="" ref="0x7f6898953020"/>
        <function-ref name="readDone" scoped="" ref="0x7f68989531a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f6898947398" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898947398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989478e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f689895a020" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x7f689895a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f689895a370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f6898947ba0" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f6898947ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f6898946020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f68989461a8"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898946330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f68989464b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898946640"/>
        <function-ref name="get" scoped="" ref="0x7f68989467c8"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898946950"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898945020"/>
        <function-ref name="set" scoped="" ref="0x7f6898946ad8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898946c60"/>
        <function-ref name="led2On" scoped="" ref="0x7f6898946de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f689894a020" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f689894a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689894a370"/>
        <function-ref name="write" scoped="" ref="0x7f689894a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f689894b8e0" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f689894b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f689894bc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f6898956d40" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f6898956d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f68989550d8"/>
        <function-ref name="disable" scoped="" ref="0x7f6898955260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f68989553e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f6898955570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f6898953c10" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898953c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68989520a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f689895c660" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x7f689895c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f689895c9b0"/>
        <function-ref name="stop" scoped="" ref="0x7f689895cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f68988dd6b0" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f68988dd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f68988dda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f68988e14a8" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988e14a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f68988e17f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f68988e1980"/>
        <function-ref name="getRssi" scoped="" ref="0x7f68988e1b08"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f68988e1c90"/>
        <function-ref name="getPower" scoped="" ref="0x7f68988e1e18"/>
        <function-ref name="getLqi" scoped="" ref="0x7f68988de020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f68988dc130" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988dc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f68988db588"/>
        <function-ref name="clear" scoped="" ref="0x7f68988dbc68"/>
        <function-ref name="isValid" scoped="" ref="0x7f68988dce80"/>
        <function-ref name="set" scoped="" ref="0x7f68988d9380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f68988ded08" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988ded08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68988dd0a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f68988dd228"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68988dd3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f68988d5ac8" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f68988d5ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68988d5e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f68988d4020"/>
        <function-ref name="cancel" scoped="" ref="0x7f68988d41a8"/>
        <function-ref name="set" scoped="" ref="0x7f68988d4330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f68988d8020" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f68988d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f68988d7478"/>
        <function-ref name="clear" scoped="" ref="0x7f68988d7b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f68988d8d70"/>
        <function-ref name="set" scoped="" ref="0x7f68988d5278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f68988de3b8" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f68988de3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f68988de708"/>
        <function-ref name="noAck" scoped="" ref="0x7f68988de890"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f68988dea18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f68988cf630" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f68988cf630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f68988cf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f68988d12e8" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f68988d12e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f68988d1638"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f68988d17c0"/>
        <function-ref name="getRssi" scoped="" ref="0x7f68988d1948"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f68988d1ad0"/>
        <function-ref name="getPower" scoped="" ref="0x7f68988d1c58"/>
        <function-ref name="getLqi" scoped="" ref="0x7f68988d1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f68988c6618" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f68988c6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68988c6968"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68988c6af0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68988c6c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68988c6e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68988c5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f68988ce060" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f68988ce060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f68988cc4b8"/>
        <function-ref name="clear" scoped="" ref="0x7f68988ccb98"/>
        <function-ref name="isValid" scoped="" ref="0x7f68988cedb0"/>
        <function-ref name="set" scoped="" ref="0x7f68988cb2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f68988d0b60" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68988d0b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68988cf020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f68988cf1a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68988cf330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f68988c7ac8" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f68988c7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68988c7e18"/>
        <function-ref name="isSet" scoped="" ref="0x7f68988c6020"/>
        <function-ref name="cancel" scoped="" ref="0x7f68988c61a8"/>
        <function-ref name="set" scoped="" ref="0x7f68988c6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f68988c5520" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f68988c5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68988c40f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f68988c4788" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f68988c4788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68988c23a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f68988ca020" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f68988ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f68988c8478"/>
        <function-ref name="clear" scoped="" ref="0x7f68988c8b58"/>
        <function-ref name="isValid" scoped="" ref="0x7f68988cad70"/>
        <function-ref name="set" scoped="" ref="0x7f68988c7278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f68988d0210" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x7f68988d0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f68988d0560"/>
        <function-ref name="noAck" scoped="" ref="0x7f68988d06e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f68988d0870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f6898876528" loc="48:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7f6898876528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f68988740f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f6898874720" loc="49:/home/urvi/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7f6898874720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998add70"/>
            <typename><typedef-ref name="T32khz" ref="0x7f68998ac178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f6898873578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f6898872020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f6898873a00"/>
        <function-ref name="overflow" scoped="" ref="0x7f68988724a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f6898870730" loc="45:/home/urvi/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7f6898870730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f68998ad608"/>
            <typename><typedef-ref name="TMilli" ref="0x7f68998ad960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f689886ca18"/>
        <function-ref name="fired" scoped="" ref="0x7f689886d158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f689886de48"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f689886d9f8"/>
        <function-ref name="getdt" scoped="" ref="0x7f689886b2e8"/>
        <function-ref name="gett0" scoped="" ref="0x7f689886ce68"/>
        <function-ref name="isRunning" scoped="" ref="0x7f689886d5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f689886f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f689886c448"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f689886f810"/>
        <function-ref name="stop" scoped="" ref="0x7f689886fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f689885bc90" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x7f689885bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885a3e8"/>
        <function-ref name="write" scoped="" ref="0x7f689885a570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f68988652e8" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x7f68988652e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898865638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f689885fdd8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f689885fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885e170"/>
        <function-ref name="write" scoped="" ref="0x7f689885e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f68988597c0" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x7f68988597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898859b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898859c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f6898858020" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x7f6898858020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898858370"/>
        <function-ref name="write" scoped="" ref="0x7f68988584f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f689884d7c0" loc="94:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x7f689884d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689884db10"/>
        <function-ref name="write" scoped="" ref="0x7f689884dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f68988507c0" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x7f68988507c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898850b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898850c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f6898864638" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x7f6898864638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898864988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f68988517c0" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f68988517c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898851b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898851c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f689885ed60" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x7f689885ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885d0d8"/>
        <function-ref name="write" scoped="" ref="0x7f689885d260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f689885dcc8" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x7f689885dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885b0a0"/>
        <function-ref name="write" scoped="" ref="0x7f689885b228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f6898854020" loc="79:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x7f6898854020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898854370"/>
        <function-ref name="write" scoped="" ref="0x7f68988544f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f68988587c0" loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x7f68988587c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898858b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898858c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f6898867cd8" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f6898867cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f68988660a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f6898866228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f68988663b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f6898861020" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f6898861020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898861370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f6898861638" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x7f6898861638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898861a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f6898861d50" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x7f6898861d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68988600d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f6898850020" loc="89:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f6898850020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898850370"/>
        <function-ref name="write" scoped="" ref="0x7f68988504f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f68988632e8" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f68988632e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898863638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f689885d528" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x7f689885d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885d878"/>
        <function-ref name="write" scoped="" ref="0x7f689885da00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f689885e5c0" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f689885e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885e910"/>
        <function-ref name="write" scoped="" ref="0x7f689885ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f6898866c90" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x7f6898866c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898865020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f689884d020" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x7f689884d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689884d370"/>
        <function-ref name="write" scoped="" ref="0x7f689884d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f689884f020" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x7f689884f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689884f370"/>
        <function-ref name="write" scoped="" ref="0x7f689884f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f68988547c0" loc="80:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x7f68988547c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898854b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898854c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f6898851020" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x7f6898851020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898851370"/>
        <function-ref name="write" scoped="" ref="0x7f68988514f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f68988577c0" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x7f68988577c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898857b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898857c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f689884c020" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x7f689884c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f689884c770"/>
        <function-ref name="writeDone" scoped="" ref="0x7f689884c8f8"/>
        <function-ref name="write" scoped="" ref="0x7f689884ca80"/>
        <function-ref name="beginRead" scoped="" ref="0x7f689884cc08"/>
        <function-ref name="readDone" scoped="" ref="0x7f689884cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f6898866678" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x7f6898866678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68988669c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f689885f638" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x7f689885f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885f988"/>
        <function-ref name="write" scoped="" ref="0x7f689885fb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f689885b4f0" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x7f689885b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885b840"/>
        <function-ref name="write" scoped="" ref="0x7f689885b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f6898857020" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x7f6898857020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898857370"/>
        <function-ref name="write" scoped="" ref="0x7f68988574f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f689885a838" loc="70:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x7f689885a838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689885ab88"/>
        <function-ref name="write" scoped="" ref="0x7f689885ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f6898865900" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x7f6898865900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898865c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f6898859020" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x7f6898859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898859370"/>
        <function-ref name="write" scoped="" ref="0x7f68988594f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68988670e0" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68988670e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f6898867430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68988675b8"/>
        <function-ref name="request" scoped="" ref="0x7f6898867740"/>
        <function-ref name="granted" scoped="" ref="0x7f68988678c8"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898867a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f68988603a0" loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x7f68988603a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f68988606f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f689885f020" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x7f689885f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f689885f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f68988527c0" loc="86:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x7f68988527c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898852b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898852c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f6898852020" loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x7f6898852020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898852370"/>
        <function-ref name="write" scoped="" ref="0x7f68988524f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f6898863900" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f6898863900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898863c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f68988537c0" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f68988537c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898853b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898853c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f689884f7c0" loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x7f689884f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f689884fb10"/>
        <function-ref name="write" scoped="" ref="0x7f689884fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f6898853020" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x7f6898853020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898853370"/>
        <function-ref name="write" scoped="" ref="0x7f68988534f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f6898864020" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x7f6898864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898864370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f68988567c0" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x7f68988567c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898856b10"/>
        <function-ref name="write" scoped="" ref="0x7f6898856c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f6898864c50" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x7f6898864c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898863020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f6898856020" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x7f6898856020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f6898856370"/>
        <function-ref name="write" scoped="" ref="0x7f68988564f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f68988609b8" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x7f68988609b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f6898860d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f689884b0a0" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x7f689884b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f689884b3f0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f689884b578"/>
        <function-ref name="write" scoped="" ref="0x7f689884b700"/>
        <function-ref name="beginRead" scoped="" ref="0x7f689884b888"/>
        <function-ref name="readDone" scoped="" ref="0x7f689884ba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f6898824b98" loc="46:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f6898824b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f6898823020"/>
        <function-ref name="rand32" scoped="" ref="0x7f68988231a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f6898822b10" loc="45:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f6898822b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68988246f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689882cdb8" loc="44:/home/urvi/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689882cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f6898825170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f689881da08" loc="48:/home/urvi/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f689881da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f689881dd58"/>
        <function-ref name="rand32" scoped="" ref="0x7f689881c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f689881e9f0" loc="47:/home/urvi/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x7f689881e9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689881d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f689881e198" loc="46:/home/urvi/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f689881e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689881e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6898810338" loc="67:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898810338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898810688"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898810810"/>
        <function-ref name="isState" scoped="" ref="0x7f6898810998"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898810b20"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898810ca8"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898810e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6898807a40" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6898807a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898807d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898806020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68988061a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898806330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68988064b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f689880ad08" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f689880ad08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68988070a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898807228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68988073b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898807538"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68988076c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6898802750" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6898802750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898802aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898802c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898802db0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898801020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68988011a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6898803438" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6898803438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898803788"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898803910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898803a98"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898803c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898803da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f68988002a8" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x7f68988002a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f68988005f8"/>
        <function-ref name="rand32" scoped="" ref="0x7f6898800780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898802080" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898802080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68988023d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6898800a70" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898800a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f6898800dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f68987ff020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68987ff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f6898801428" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898801428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898801778"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898801900"/>
        <function-ref name="isState" scoped="" ref="0x7f6898801a88"/>
        <function-ref name="isIdle" scoped="" ref="0x7f6898801c10"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898801d98"/>
        <function-ref name="forceState" scoped="" ref="0x7f6898800020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f6898804978" loc="67:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f6898804978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898804cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898804e50"/>
        <function-ref name="isState" scoped="" ref="0x7f68987ef020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f68987ef1a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f68987ef330"/>
        <function-ref name="forceState" scoped="" ref="0x7f68987ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f68987e9560" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f68987e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987e98b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f68987ec758" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68987ec758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987ecaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f68987ece20" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f68987ece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f68987e3d30" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f68987e3d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987e20d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f68987e3628" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f68987e3628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f68987e3978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f68987e8960" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68987e8960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987e8cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f68987e23c8" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68987e23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68987e2718"/>
        <function-ref name="getHeader" scoped="" ref="0x7f68987e28a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68987e2a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f68987e3060" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f68987e3060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987e33b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f68987b6020" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f68987b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987b6370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f68987b6670" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f68987b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987b69c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987b6b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987b6cd0"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987b6e58"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987b5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f68987baa40" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f68987baa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987bad90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987b9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987b91a8"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987b9330"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f68987b9db8" loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f68987b9db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987b8170"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987b82f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987b8480"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987b8608"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987b8790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f68987b9748" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f68987b9748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987b9a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68987eae20" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68987eae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68987ba1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68987ba330"/>
        <function-ref name="request" scoped="" ref="0x7f68987ba4b8"/>
        <function-ref name="granted" scoped="" ref="0x7f68987ba640"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68987ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f68987b8ae8" loc="69:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f68987b8ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987b8e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f68987b71a8" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f68987b71a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68987b74f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68987b7680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987b7808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987b7990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68987b7b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f68987ac528" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f68987ac528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987ac878"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987aca00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987acb88"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987acd10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f68987ab358" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f68987ab358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987ab6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f689877fac0" loc="180:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x7f689877fac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f689877fe10"/>
        <function-ref name="runTask" scoped="" ref="0x7f689877d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f68987ab970" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f68987ab970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f68987abcc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f68987abe48"/>
        <function-ref name="getRssi" scoped="" ref="0x7f68987aa020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f68987aa1a8"/>
        <function-ref name="getPower" scoped="" ref="0x7f68987aa330"/>
        <function-ref name="getLqi" scoped="" ref="0x7f68987aa4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f68987ae490" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x7f68987ae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987ae7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987ae968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987aeaf0"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987aec78"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987aee00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f68987a91c0" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x7f68987a91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f68987a9510"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f68987a9698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f68987a9820"/>
        <function-ref name="dequeue" scoped="" ref="0x7f68987a99a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f68987aa7a8" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f68987aa7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68987aaaf8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f68987aac80"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68987aae08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f68987afdc8" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x7f68987afdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987ae170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f68987b0428" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x7f68987b0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68987b0778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f68987b0900"/>
        <function-ref name="request" scoped="" ref="0x7f68987b0a88"/>
        <function-ref name="granted" scoped="" ref="0x7f68987b0c10"/>
        <function-ref name="isOwner" scoped="" ref="0x7f68987b0d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f68987af118" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x7f68987af118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987af468"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987af5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987af778"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987af900"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987afa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f68987ad188" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x7f68987ad188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987ad4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f68987ad808" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x7f68987ad808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f68987adb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68987adce0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f68987ade68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987ac020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f68987ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f6898760c28" loc="44:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7f6898760c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f689875e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f689875e2a8" loc="45:/home/urvi/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x7f689875e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f689875e5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f689875e780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f689875e908"/>
        <function-ref name="dequeue" scoped="" ref="0x7f689875ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f6898754dc8" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x7f6898754dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f6898753170"/>
        <function-ref name="stopDone" scoped="" ref="0x7f68987532f8"/>
        <function-ref name="start" scoped="" ref="0x7f6898753480"/>
        <function-ref name="stop" scoped="" ref="0x7f6898753608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f6898752838" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f6898752838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898752b88"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898752d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898751020"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987511a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898751330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f6898751668" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f6898751668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f68987519b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f6898755080" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f6898755080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f68987553d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898755558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f68987556e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898755868"/>
        <function-ref name="sendDone" scoped="" ref="0x7f68987559f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f6898754318" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f6898754318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f6898754668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f68987547f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f6898754978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f6898754b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f6898753928" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x7f6898753928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f6898753c78"/>
        <function-ref name="toIdle" scoped="" ref="0x7f6898753e00"/>
        <function-ref name="isState" scoped="" ref="0x7f6898752020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f68987521a8"/>
        <function-ref name="requestState" scoped="" ref="0x7f6898752330"/>
        <function-ref name="forceState" scoped="" ref="0x7f68987524b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f6898751d28" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x7f6898751d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f68987500a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f6898750228"/>
        <function-ref name="start" scoped="" ref="0x7f68987503b0"/>
        <function-ref name="stop" scoped="" ref="0x7f6898750538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6898755c80" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6898755c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898754020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f689874d170" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x7f689874d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f689874d4c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f689874d648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f689874d7d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f689874d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f689874fd50" loc="67:/home/urvi/tinyos-main/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x7f689874fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f689874e0d8"/>
        <function-ref name="toIdle" scoped="" ref="0x7f689874e260"/>
        <function-ref name="isState" scoped="" ref="0x7f689874e3e8"/>
        <function-ref name="isIdle" scoped="" ref="0x7f689874e570"/>
        <function-ref name="requestState" scoped="" ref="0x7f689874e6f8"/>
        <function-ref name="forceState" scoped="" ref="0x7f689874e880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f689873f020" loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f689873f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f689873f370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689873f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689873f680"/>
        <function-ref name="cancel" scoped="" ref="0x7f689873f808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f689873f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f68987445d0" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x7f68987445d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898744920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898744aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898744c30"/>
        <function-ref name="cancel" scoped="" ref="0x7f6898744db8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898741020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f68987412d0" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f68987412d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f6898741620"/>
        <function-ref name="setRetries" scoped="" ref="0x7f68987417a8"/>
        <function-ref name="getRetries" scoped="" ref="0x7f6898741930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f6898741ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f6898741c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f689873b3c8" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f689873b3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f689873b718"/>
        <function-ref name="noAck" scoped="" ref="0x7f689873b8a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f689873ba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f689873e548" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x7f689873e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f689873e898"/>
        <function-ref name="setRetries" scoped="" ref="0x7f689873ea20"/>
        <function-ref name="getRetries" scoped="" ref="0x7f689873eba8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f689873ed30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f689873b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f689871ccc8" loc="59:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x7f689871ccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689871b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f689871c020" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x7f689871c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f689871c370"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689871c4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689871c680"/>
        <function-ref name="cancel" scoped="" ref="0x7f689871c808"/>
        <function-ref name="sendDone" scoped="" ref="0x7f689871c990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f6898719ab0" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x7f6898719ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f6898719e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f6898718020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f68987181a8"/>
        <function-ref name="syncDone" scoped="" ref="0x7f6898718330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f68987184b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f6898718640"/>
        <function-ref name="setChannel" scoped="" ref="0x7f68987187c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f6898718950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f6898718ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f6898718c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f6898718de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f6898717020"/>
        <function-ref name="sync" scoped="" ref="0x7f68987171a8"/>
        <function-ref name="getChannel" scoped="" ref="0x7f6898717430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f68987175b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f689871d020" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x7f689871d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f689871d370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f689871d4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f689871d680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f689871d808"/>
        <function-ref name="setCca" scoped="" ref="0x7f689871d990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f689871db18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f689871e400" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x7f689871e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f689871e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f68987166a0" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x7f68987166a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f68987169f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f6898716b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f6898716d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f6898715020"/>
        <function-ref name="setCca" scoped="" ref="0x7f68987151a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f6898715330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f689871f2a8" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f689871f2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f689871f5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f689871f780"/>
        <function-ref name="getPayload" scoped="" ref="0x7f689871f908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f689871fa90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f689871fc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f6898724980" loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x7f6898724980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f6898724cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898724e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898723020"/>
        <function-ref name="cancel" scoped="" ref="0x7f68987231a8"/>
        <function-ref name="sendDone" scoped="" ref="0x7f6898723330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f6898721628" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x7f6898721628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898721978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f689871b368" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x7f689871b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f689871b6b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f689871b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f689871b9c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f689871bb50"/>
        <function-ref name="getPower" scoped="" ref="0x7f689871bcd8"/>
        <function-ref name="getLqi" scoped="" ref="0x7f689871be60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f68987178d0" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f68987178d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f6898717d20"/>
        <function-ref name="changed" scoped="" ref="0x7f6898716020"/>
        <function-ref name="amGroup" scoped="" ref="0x7f68987161a8"/>
        <function-ref name="setAddress" scoped="" ref="0x7f6898716330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f6898719188" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f6898719188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f68987194d8"/>
        <function-ref name="getHeader" scoped="" ref="0x7f6898719660"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f68987197e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f6898723ab0" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f6898723ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f6898723e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f68987142a8" loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7f68987142a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f68987145f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f6898714780"/>
        <function-ref name="led1On" scoped="" ref="0x7f6898714908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f6898714a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f6898714c18"/>
        <function-ref name="get" scoped="" ref="0x7f6898714da0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f6898713020"/>
        <function-ref name="led2Off" scoped="" ref="0x7f6898713640"/>
        <function-ref name="set" scoped="" ref="0x7f68987131a8"/>
        <function-ref name="led0On" scoped="" ref="0x7f6898713330"/>
        <function-ref name="led2On" scoped="" ref="0x7f68987134b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6898721c18" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6898721c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6898720020"/>
        <function-ref name="source" scoped="" ref="0x7f68987201a8"/>
        <function-ref name="address" scoped="" ref="0x7f6898720330"/>
        <function-ref name="destination" scoped="" ref="0x7f68987204b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6898720640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f68987207c8"/>
        <function-ref name="type" scoped="" ref="0x7f6898720950"/>
        <function-ref name="setType" scoped="" ref="0x7f6898720ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6898720c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6898720de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f689871f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f6898715698" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x7f6898715698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f68987159e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f6898715b70"/>
        <function-ref name="request" scoped="" ref="0x7f6898715cf8"/>
        <function-ref name="granted" scoped="" ref="0x7f6898715e80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f6898714030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f6898687020" loc="46:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x7f6898687020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f6898687370"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f68986874f8"/>
        <function-ref name="getPayload" scoped="" ref="0x7f6898687680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f6898687808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f6898687990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f689868f970" loc="45:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x7f689868f970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f689868fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f6898687bd8" loc="47:/home/urvi/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="BlinkToRadioAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x7f6898687bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f6898686020"/>
        <function-ref name="source" scoped="" ref="0x7f68986861a8"/>
        <function-ref name="address" scoped="" ref="0x7f6898686330"/>
        <function-ref name="destination" scoped="" ref="0x7f68986864b8"/>
        <function-ref name="setSource" scoped="" ref="0x7f6898686640"/>
        <function-ref name="setDestination" scoped="" ref="0x7f68986867c8"/>
        <function-ref name="type" scoped="" ref="0x7f6898686950"/>
        <function-ref name="setType" scoped="" ref="0x7f6898686ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x7f6898686c60"/>
        <function-ref name="setGroup" scoped="" ref="0x7f6898686de8"/>
        <function-ref name="localGroup" scoped="" ref="0x7f6898685020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/urvi/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6899832998" loc="62:/home/urvi/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/urvi/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/urvi/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f6899830690" loc="60:/home/urvi/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/urvi/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7f6899825900" loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7f6899825690" loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7f689982a0d8" loc="31:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7f689982aad0" loc="39:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f689982a860" loc="39:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7f68998265a0" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7f6899826330" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7f6899826de8" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f6899814dc0" loc="44:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f68998124c8" loc="45:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f6899814070" loc="42:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f6899811290" loc="47:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6899814710" loc="43:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f6899812b80" loc="46:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6899815328" loc="40:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f6899815998" loc="41:/home/urvi/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f6899939970" loc="57:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f6899931878" loc="72:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f68999310d8" loc="65:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/urvi/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/urvi/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f6899929608" loc="67:/home/urvi/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f6899929df8" loc="75:/home/urvi/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/urvi/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/urvi/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7f6899870ca8" loc="76:/home/urvi/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/urvi/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/urvi/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/urvi/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f6899850360" loc="62:/home/urvi/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/urvi/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f68998cf940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/urvi/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/urvi/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f6899854e60" loc="52:/home/urvi/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/urvi/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f6899677428" loc="61:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f6899677b60" loc="67:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f6899676328" loc="72:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f68996751d8" loc="83:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f6899673810" loc="100:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6899672020" loc="117:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f6899676a40" loc="77:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6899672b20" loc="134:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f68996728b0" loc="134:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f6899678cd8" loc="56:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f6899675948" loc="89:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f68996730d8" loc="94:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/urvi/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mts300Sounder" loc="1:/home/urvi/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
      <function command="" provided="0" name="beep" ref="0x7f6899645bc8" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
        <interfacedef-ref qname="Mts300Sounder"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x7f6899645958" loc="3:/home/urvi/tinyos-main/tos/sensorboards/mts300/Mts300Sounder.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6899640a20" loc="53:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6899640a20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6899637328" loc="136:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f689963ce68" loc="83:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f6899639ad8" loc="114:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6899639540" loc="114:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6899639858" loc="114:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f689963bda8" loc="98:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f6899636290" loc="151:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f6899637a48" loc="144:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f689963b610" loc="92:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f689963d570" loc="64:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f689963d300" loc="64:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f68996389e0" loc="129:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6899638448" loc="129:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f6899638760" loc="129:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f689963c020" loc="73:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f689963dd40" loc="73:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f689963c7c8" loc="78:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/urvi/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/urvi/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f6899614bf0" loc="53:/home/urvi/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f6899614bf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f68996104c8" loc="61:/home/urvi/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f68995fe3f8" loc="57:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f68995fe3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f68995fe628" loc="57:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995fe628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f68995fd020" loc="64:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995fe628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f68995fc070" loc="76:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f68995fd838" loc="71:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f68995fc760" loc="82:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/urvi/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f689960ce10" loc="56:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f689960ce10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f6899608068" loc="56:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f6899605958" loc="109:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6899607a78" loc="78:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f6899605020" loc="103:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f6899606a08" loc="103:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f6899606d28" loc="103:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f6899606258" loc="88:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f6899603110" loc="116:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6899608b28" loc="66:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f68996088b8" loc="66:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6899608068"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6899607328" loc="73:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/urvi/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x7f68995d7a50" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f68998a2a08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f68998a2e10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f68995d2e18" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899897100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f6899897508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f68995d3c70" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989b980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f689989bd88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f68995d2678" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989b980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f689989bd88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f68995d2408" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989b980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x7f689989bd88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f68995d1828" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899897100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f6899897508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f68995d15b8" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899897100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x7f6899897508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f68995d34c8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f68998a2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f68998a2e10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f68995d3258" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f68998a2a08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x7f68998a2e10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x7f68995c3998" loc="38:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x7f68995c21d8" loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x7f68995c3290" loc="32:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7f68995c2988" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7f68995c50d8" loc="21:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989d118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x7f689989d520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7f68995c5a88" loc="27:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f689989d520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7f68995c5818" loc="27:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689989d118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x7f689989d520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f68995cf020" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995cf020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7f68995cb738" loc="74:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f68995cd9d0" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f68995cf8d8" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995cf020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f68995cc110" loc="62:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f68995c9020" loc="80:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f68995cd290" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995cf020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f68995cd020" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68995cf020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f68995cc808" loc="65:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f68995cb020" loc="68:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7f68995e1418" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f68995e1418"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7f68995dc900" loc="98:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f68995dea40" loc="87:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f68995e1cb8" loc="61:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f68995e1418"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7f68995db290" loc="104:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f68995db020" loc="104:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7f68995dba10" loc="110:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f68995df4c0" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f68995e0d50" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f68995dc1d8" loc="93:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f68995e0630" loc="67:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f68995e1418"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f68995e03c0" loc="67:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7f68995e1418"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f68995dfbb8" loc="78:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f68995de328" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f6899458258" loc="68:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6899459aa0" loc="61:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f68994593a0" loc="54:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f689945cb20" loc="53:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/home/urvi/tinyos-main/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x7f6899450660" loc="20:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/home/urvi/tinyos-main/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f6899436020" loc="56:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f6899435a48" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f68994378d0" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f6899435290" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f6899435020" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f68994371d8" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f6899436760" loc="63:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f68994284e0" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/home/urvi/tinyos-main/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f68993a0870" loc="49:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f68993a0870"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f689939d0d8" loc="55:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f689939dd68" loc="63:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f68993a0870"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f689939d7e8" loc="63:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f689939dae8" loc="63:/home/urvi/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f68993a0870"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f689938b518" loc="120:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f689938c5f8" loc="97:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f689938fca8" loc="88:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f689938cd80" loc="102:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f689938a020" loc="128:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/urvi/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x7f689937e468" loc="32:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6899381bf8" loc="25:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x7f689937ec48" loc="39:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f68993737d0" loc="53:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f68993720d8" loc="61:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f6899368450" loc="65:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f6899371c40" loc="59:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f689936f598" loc="56:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f689936e608" loc="73:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f6899375d30" loc="46:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f689936fd98" loc="65:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f689936d020" loc="81:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/home/urvi/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f6899374c30" loc="90:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f689936b458" loc="98:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/urvi/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f689935e108" loc="79:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f689936a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6899360e18" loc="79:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f689936a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f6899361290" loc="53:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f6899361d10" loc="62:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f689936a3f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f6899361aa0" loc="62:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f689936a3f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f68993605e0" loc="70:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/urvi/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f689936a3f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f68992e84b0" loc="113:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f68992e8240" loc="113:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f68992e7a40" loc="138:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f68992e77d0" loc="138:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f68992e9830" loc="104:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f68992e8c98" loc="130:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/urvi/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/home/urvi/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/home/urvi/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f68992e44d0" loc="62:/home/urvi/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f68992de020" loc="95:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f68992de7c0" loc="105:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/home/urvi/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f6899269948" loc="52:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6899269948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f6899265258" loc="58:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6899264020" loc="66:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6899269948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f68992659a0" loc="66:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x7f6899265ca0" loc="66:/home/urvi/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f6899269948"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f6899255768" loc="100:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6899256a60" loc="100:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f6899256db8" loc="100:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f6899255178" loc="101:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f68992554c8" loc="101:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f68992523f0" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6899254368" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f6899254688" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x7f68992549c0" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x7f6899254d70" loc="120:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x7f6899252140" loc="120:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f689925a440" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f689925b738" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x7f689925ba90" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x7f689925bdf8" loc="71:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x7f689925a1a0" loc="71:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6899258c80" loc="91:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6899258408" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f689925ae48" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x7f6899258188" loc="81:/home/urvi/tinyos-main/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="36:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x7f68992410d8" loc="114:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="111:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x7f68992491d8" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="49:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b6020"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x7f68998b64d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x7f689923e338" loc="140:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="135:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7f689923e0c8" loc="140:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x7f6899241918" loc="122:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="118:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x7f6899246d18" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x7f6899249bb0" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="54:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b6020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f68998b64d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x7f6899249940" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b6020"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x7f68998b64d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x7f6899245b88" loc="91:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="88:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x7f6899240870" loc="133:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="128:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f689923ead0" loc="150:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="142:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x7f6899245448" loc="86:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x7f6899243a48" loc="99:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="96:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x7f6899243328" loc="95:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f68992421d8" loc="106:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="101:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x7f68992400d8" loc="127:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="123:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x7f6899247dd0" loc="69:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="65:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b0a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f68998ae178"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x7f6899247b60" loc="69:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b0a10"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f68998ae178"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x7f6899242990" loc="110:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="107:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x7f68992473e0" loc="64:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="60:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f68998b0a10"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x7f68998ae178"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f68992465b8" loc="75:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="71:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f689923d640" loc="156:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="152:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f689923d3d0" loc="156:/home/urvi/tinyos-main/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f689924c020" loc="95:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f689924c7f8" loc="105:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/urvi/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f68990ef0a8" loc="65:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990f0e10" loc="65:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f68990ee0a8" loc="78:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990efde0" loc="78:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f68990e9318" loc="126:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990ebd18" loc="126:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f68990e9060" loc="126:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f68990eb488" loc="106:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f68990ec5b0" loc="94:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990ec020" loc="94:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f68990ec330" loc="94:/home/urvi/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f68990d32e8" loc="78:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
              <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990d8860" loc="78:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f68990d8b88" loc="78:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f68990d3020" loc="78:/home/urvi/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f68990db680" loc="177:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990db410" loc="177:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f68990e4600" loc="88:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990e4390" loc="88:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f689913db80" loc="68:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f68990e6600" loc="78:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990e6390" loc="78:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f68990e0d90" loc="121:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990e07d8" loc="121:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f68990e0b10" loc="121:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f68990e3948" loc="103:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990e3390" loc="103:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f68990e36c8" loc="103:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f68990dd290" loc="147:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990dd020" loc="147:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f68990dc5a0" loc="162:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990dc020" loc="162:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f68990dc320" loc="162:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f68991005d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f68990df020" loc="136:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990e2d60" loc="136:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f68990d9a50" loc="187:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f68990d94a0" loc="187:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f68990d97d0" loc="187:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f68990d7818" loc="195:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/urvi/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f68990b9020" loc="80:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f68990ba608" loc="80:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f68990ba968" loc="80:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f68990bac78" loc="80:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f68990b4380" loc="135:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990b5d48" loc="135:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f68990b40c8" loc="135:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f68990b5540" loc="123:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f68990b82d0" loc="96:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990b8060" loc="96:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f68990b7708" loc="110:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990b7160" loc="110:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f68990b7488" loc="110:/home/urvi/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f68990ae750" loc="35:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f68990ae750"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f68990ae980" loc="35:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68990ae980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f68990a4670" loc="63:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68990ae980"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990a4400" loc="63:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f68990a3750" loc="70:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990a34e0" loc="70:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f68990a54e8" loc="49:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990a5278" loc="49:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f68990a1980" loc="78:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68990ae980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990a13c0" loc="78:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f68990a1700" loc="78:/home/urvi/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f68990ae980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f68990952a0" loc="65:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899096c78" loc="65:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f6899095020" loc="65:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f6899094370" loc="71:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899094100" loc="71:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f68990964f8" loc="57:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f689909ab70" loc="52:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f689909a900" loc="52:/home/urvi/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f68990afb80" loc="59:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990af910" loc="59:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f68990a9cb0" loc="71:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990a9a40" loc="71:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f68990a8020" loc="85:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990aac38" loc="85:/home/urvi/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f6899069290" loc="95:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899069020" loc="95:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f689906c578" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f689906c308" loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f689906fd30" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f689906fac0" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f689906f290" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f689906f020" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f689906d728" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f689906d4b8" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f689906b3b0" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f689906b140" loc="88:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f689905e830" loc="59:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f689905e250" loc="59:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f689905e5b0" loc="59:/home/urvi/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f68990796a8" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6899079100" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f6899079428" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f6899075b80" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f68990755b0" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f6899075900" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f6899077290" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f689a246908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6899077020" loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f6899076b60" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f68990768f0" loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f689907a930" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f689907a6c0" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f6899077d30" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f6899077ac0" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f6899062290" loc="65:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899062020" loc="65:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f6899066490" loc="46:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899070e78" loc="46:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f6899066210" loc="46:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f6899063290" loc="59:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899063020" loc="59:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f68990657e0" loc="53:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990651f8" loc="53:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f6899065560" loc="53:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f6899061290" loc="71:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899061020" loc="71:/home/urvi/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/urvi/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f6899071338" loc="47:/home/urvi/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/urvi/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990710c8" loc="47:/home/urvi/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6899058e70" loc="75:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f68990588e0" loc="75:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6899058bf0" loc="75:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f689904f2d8" loc="125:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899051c90" loc="125:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f689904f020" loc="125:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f6899051488" loc="112:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6899053108" loc="89:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899055e40" loc="89:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f68990525c8" loc="100:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899052020" loc="100:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f6899052348" loc="100:/home/urvi/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6899032838" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f68990322a0" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f68990325b8" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6899031a58" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f689902d0c8" loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f689902e318" loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f689902eaf0" loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f689902ee00" loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f689902fb00" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f689902f558" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f689902f880" loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f6899031290" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f6899031020" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f68990291d8" loc="52:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f689902c9c8" loc="46:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/urvi/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f68990240a8" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899025d78" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f68990255f0" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x7f689913a6f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f6899137020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899025308" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f6899022308" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x7f6899137ac0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f68991352d8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6899022020" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f68990387e8" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f6899035778" loc="97:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f6899035020" loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f6899039020" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f6899038020" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f6899036020" loc="76:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f68990367d0" loc="83:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f6899039818" loc="56:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/home/urvi/tinyos-main/tos/interfaces/State.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f689901d4f0" loc="71:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="68:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f6899020c98" loc="56:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f689901ed70" loc="66:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f689901eb00" loc="66:/home/urvi/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f689901e3e0" loc="61:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="58:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f6899027ad0" loc="45:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="40:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f6899027860" loc="45:/home/urvi/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f6899020520" loc="51:/home/urvi/tinyos-main/tos/interfaces/State.nc">
        <documentation loc="47:/home/urvi/tinyos-main/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f68990202b0" loc="51:/home/urvi/tinyos-main/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f6898fc6880" loc="106:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f6898fc62c8" loc="106:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f6898fc6600" loc="106:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f6898fc7378" loc="93:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f6898fc8a70" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f6898fc8430" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f6898fc87f0" loc="87:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f6898fce338" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f6898fce0c8" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f6898fc7b80" loc="98:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f6898fcbbc8" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6898fcb958" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f6898fcc378" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f6898fcc108" loc="61:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f6898fc5a10" loc="117:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f6898fcac48" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f6898fca9d8" loc="78:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f6898fc5258" loc="112:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f6898fcca98" loc="66:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6899091648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6899091d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f6898fcb258" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f6898fd1920" loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f6898fcea20" loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f6898fca328" loc="77:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6898fa8e68" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898fa8bf8" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6898fa18f0" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898fa1680" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/home/urvi/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/home/urvi/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f6898fb5678" loc="48:/home/urvi/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f6899091648"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f6899091d70"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f6898fabdb8" loc="50:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f6898faac48" loc="60:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f6898faa558" loc="55:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f6898fab5d8" loc="45:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f6898fab020" loc="45:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f6899100988"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f6898fab358" loc="45:/home/urvi/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x7f6899100d40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f6898f9ec38" loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f6898fa6358" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6898fa7508" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6898fa7d10" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898fa60c8" loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6898fa59a8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f6898fa6ba8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f6898fa53e8" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898fa5718" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7f6898eee378" loc="58:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987a928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f689987ad30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x7f6898ef1020" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899889478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f6899889880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6898ef2cf8" loc="50:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899889478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f6899889880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7f6898ef01d8" loc="54:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987c578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f689987c980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x7f6898ef7ab0" loc="45:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899891da8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f6899890228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7f6898ef0b98" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f689987c980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f6898ef0928" loc="55:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987c578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x7f689987c980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7f6898eeed38" loc="59:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f689987ad30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7f6898eeeac8" loc="59:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f689987a928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x7f689987ad30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x7f6898ef4ad8" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899887890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f6899887c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x7f6898ef4328" loc="46:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899889478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x7f6899889880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x7f6898ef2570" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899891da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f6899890228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6898ef2300" loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899891da8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x7f6899890228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x7f6898ef19f0" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899887890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f6899887c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f6898ef1780" loc="51:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7f6899887890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x7f6899887c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7f6898ef5b68" loc="40:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x7f6898ee6648" loc="88:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x7f6898ee63d8" loc="88:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7f6898ee7568" loc="76:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f6898eeb498" loc="47:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6898eea7c8" loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6898eea558" loc="60:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f6898ee8020" loc="64:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7f6898ee7cb8" loc="82:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6898eebdd0" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7f6898eebb60" loc="53:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f6898ef5b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f6898ee8718" loc="67:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f6898ee8e00" loc="70:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/urvi/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f6898d48a40" loc="54:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f6898d47ae0" loc="66:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f6898d473a8" loc="61:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6898d47138" loc="61:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f6898d48258" loc="53:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/urvi/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f6898d0f830" loc="24:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f6898d0e070" loc="31:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f6898d0e840" loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f6898cf0998" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898cf03e8" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898cf0718" loc="62:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f6898ceb948" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898ceb060" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898ceb390" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6898ceb6b8" loc="91:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6898cec348" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898cedd20" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898cec0c8" loc="82:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f6898cf1678" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f689913e9c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898cf10c8" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898cf13f8" loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f6898ced030" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898cee720" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f6898ceea50" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6898ceed78" loc="71:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f6898cd02b0" loc="70:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6898cd1840" loc="70:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6898cd1ba0" loc="70:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6898cd0020" loc="70:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f6898ccf648" loc="82:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f6898cce9b0" loc="82:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f6898cced10" loc="82:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f6898ccf060" loc="82:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x7f689a245b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f6898ccf3a8" loc="83:/home/urvi/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/urvi/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f6898cd3108" loc="45:/home/urvi/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/urvi/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f6898cd6e70" loc="45:/home/urvi/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f6898c45780" loc="62:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898c45510" loc="62:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f6898c43ab8" loc="74:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898c43848" loc="74:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f6898c43020" loc="68:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6898c424f8" loc="81:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898c42288" loc="81:/home/urvi/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x7f6898c30760" loc="86:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x7f6898c25020" loc="126:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x7f6898c2bb98" loc="117:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x7f6898c259c8" loc="128:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x7f6898c25758" loc="128:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x7f6898c30020" loc="83:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x7f6898c28640" loc="122:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x7f6898c283d0" loc="122:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x7f6898c2c3f8" loc="113:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x7f6898c2c188" loc="113:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f6898c2e610" loc="97:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x7f6898c20290" loc="141:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x7f6898c20020" loc="141:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x7f6898c2cb30" loc="114:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x7f6898c24a30" loc="131:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x7f6898c247c0" loc="131:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f6898c238f0" loc="136:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x7f6898c27838" loc="125:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x7f6898c275c8" loc="125:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x7f6898c227d0" loc="140:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x7f6898c29588" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x7f6898c29318" loc="119:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f6898c2d020" loc="103:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898c2ecf8" loc="103:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f6898c2b498" loc="116:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x7f6898c2b228" loc="116:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x7f6898c28e50" loc="123:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x7f6898c24110" loc="129:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x7f6898c23178" loc="132:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x7f6898c22070" loc="138:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x7f6898c29ca0" loc="120:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f6898c30e78" loc="89:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f6898c2d9a8" loc="109:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f6898c2d738" loc="109:/home/urvi/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f6898a5c8c8" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f6898a12400" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f6898a13a68" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f6898a12180" loc="63:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f6898a13328" loc="55:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f6898a16b38" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f6898a168c8" loc="49:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7f689a244608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f6898a26ae8" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f689a245160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6898a26878" loc="58:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f6898a2bb58" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f68999379b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6898a2b8e8" loc="50:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f6898a24938" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6898a246c8" loc="72:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f6898a25a20" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f6898a257b0" loc="65:/home/urvi/tinyos-main/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f68990f1150"/>
                <typename><typedef-ref name="message_t" ref="0x7f68990f06c0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/urvi/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/urvi/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f68988259b8" loc="53:/home/urvi/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f68988259b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f68988224c8" loc="64:/home/urvi/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/urvi/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7f689992c1a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f68988259b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f6898822258" loc="64:/home/urvi/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f68988259b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
